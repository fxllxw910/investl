{"file_contents":{"debug-server.sh":{"content":"#!/bin/bash\n\n# Kill any existing server processes\npkill -f \"node dist/index.js\" || true\n\n# Clear previous logs\n> server.log\n> debug.log\n\n# Set environment variables for debugging\nexport NODE_ENV=production\nexport PORT=5000\nexport HOST=0.0.0.0\nexport DEBUG=express:*\n\n# Run server in foreground mode for debugging\necho \"Starting server in debug mode...\" | tee -a debug.log\nnode --trace-warnings dist/index.js 2>&1 | tee -a server.log","size_bytes":432},"dev_server.js":{"content":"// Simple development server script\nconsole.log('Starting dev server...');\n\n// Import required modules\nimport { exec } from 'child_process';\nimport { createServer } from 'http';\n\n// Start the dev server\nconst devProcess = exec('npm run dev', (error) => {\n  if (error) {\n    console.error('Error starting dev server:', error);\n    process.exit(1);\n  }\n});\n\n// Pipe output\ndevProcess.stdout.pipe(process.stdout);\ndevProcess.stderr.pipe(process.stderr);\n\n// Create a simple health check server\nconst healthServer = createServer((req, res) => {\n  res.writeHead(200, { 'Content-Type': 'application/json' });\n  res.end(JSON.stringify({ status: 'ok', message: 'Development server is running' }));\n});\n\n// Start health check server\nhealthServer.listen(8080, '0.0.0.0', () => {\n  console.log('Health check server started on port 8080');\n});\n\n// Handle process termination\nprocess.on('SIGINT', () => {\n  console.log('Shutting down servers...');\n  healthServer.close();\n  devProcess.kill();\n  process.exit(0);\n});","size_bytes":1002},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"ecosystem.config.js":{"content":"module.exports = {\n  apps: [{\n    name: \"investlease-server\",\n    script: \"dist/index.js\",\n    env: {\n      NODE_ENV: \"production\",\n      PORT: 5000,\n      HOST: \"0.0.0.0\"\n    },\n    watch: false,\n    instance_var: \"INSTANCE_ID\",\n    autorestart: true,\n    restart_delay: 1000\n  }]\n};","size_bytes":284},"keep-alive.sh":{"content":"#!/bin/bash\n\n# Kill any existing processes\npkill -f \"node dist/index.js\" || true\n\n# Start the server in the background\nNODE_ENV=production PORT=5000 HOST=0.0.0.0 node dist/index.js > server.log 2>&1 &\nSERVER_PID=$!\n\n# Write the PID to a file\necho $SERVER_PID > server.pid\n\necho \"Server started with PID: $SERVER_PID\"\necho \"To stop the server run: kill $(cat server.pid)\"\n\n# Monitor server every 10 seconds\nwhile true; do\n  if ! ps -p $SERVER_PID > /dev/null; then\n    echo \"Server process died, restarting...\"\n    NODE_ENV=production PORT=5000 HOST=0.0.0.0 node dist/index.js > server.log 2>&1 &\n    SERVER_PID=$!\n    echo $SERVER_PID > server.pid\n    echo \"Server restarted with PID: $SERVER_PID\"\n  fi\n  sleep 10\ndone","size_bytes":718},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"process.js":{"content":"// This is the main process file for Replit to run\n// It starts both the server and client\n\nconst { spawn } = require('child_process');\nconst path = require('path');\n\nconsole.log('Starting InvestLease application...');\n\n// Start the server\nconst server = spawn('npx', ['tsx', 'server/index.ts'], {\n  stdio: 'inherit',\n  env: { ...process.env, PORT: '5000' }\n});\n\nconsole.log(`Server started with PID: ${server.pid}`);\n\n// Handle errors\nserver.on('error', (err) => {\n  console.error('Failed to start server:', err);\n  process.exit(1);\n});\n\n// Handle exit\nserver.on('exit', (code, signal) => {\n  console.log(`Server process exited with code ${code} and signal ${signal}`);\n  process.exit(code || 0);\n});\n\n// Handle process termination\nprocess.on('SIGINT', () => {\n  console.log('Shutting down...');\n  server.kill('SIGTERM');\n  process.exit(0);\n});\n\nprocess.on('SIGTERM', () => {\n  console.log('Shutting down...');\n  server.kill('SIGTERM');\n  process.exit(0);\n});","size_bytes":960},"replit.md":{"content":"# Overview\n\nИНВЕСТ-лизинг is a Russian leasing company's client portal system. This is a full-stack web application that provides a client dashboard for managing leasing documents, contracts, invoices, acts, and payment schedules. The system includes both a public marketing website showcasing the company's services and a secured client area for authenticated users to access their leasing documents and information.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\nThe client-side application is built using React with TypeScript and follows a modern component-based architecture:\n- **React with TypeScript** for type-safe component development\n- **Wouter** for client-side routing instead of React Router\n- **TanStack Query** for server state management and data fetching\n- **Radix UI components** with custom styling for accessible UI components\n- **Tailwind CSS** with custom CSS variables for theming\n- **Shadcn/ui** component library for consistent design system\n- **Vite** as the build tool and development server\n- **D3.js and TopoJSON** for interactive map visualizations of Russian regions\n\n## Backend Architecture\nThe server follows a Node.js/Express REST API pattern:\n- **Express.js** server with TypeScript for API endpoints\n- **Passport.js** with local strategy for authentication\n- **Express sessions** with memory store for session management\n- **Drizzle ORM** for database operations and schema management\n- **Neon Serverless** as the PostgreSQL database provider\n- **Basic FTP** client for document synchronization from external FTP servers\n- **Zod** for request/response validation and type safety\n\n## Data Storage Solutions\n- **PostgreSQL database** via Neon Serverless for primary data storage\n- **Drizzle ORM** for type-safe database operations and migrations\n- **Express sessions** stored in memory for development (configurable for production)\n- **File storage** via FTP integration for document management\n- **Local uploads directory** for cached document storage\n\n## Authentication and Authorization\n- **Passport.js Local Strategy** for username/password authentication\n- **Session-based authentication** with secure cookie configuration\n- **Express session middleware** with configurable security settings\n- **Password hashing** using Node.js crypto module with scrypt\n- **Role-based access** with user context throughout the application\n- **Protected routes** on both client and server sides\n\n## External Dependencies\n\n### Database and ORM\n- **@neondatabase/serverless** - Serverless PostgreSQL database connection\n- **drizzle-orm** and **drizzle-kit** - Type-safe ORM and database toolkit\n\n### Authentication and Security\n- **passport** and **passport-local** - Authentication middleware and local strategy\n- **express-session** - Session management middleware\n- **connect-pg-simple** - PostgreSQL session store (configured but using memory store in development)\n\n### FTP Integration\n- **basic-ftp** - FTP client for document synchronization from external servers\n\n### UI and Styling\n- **@radix-ui/react-*** - Complete suite of accessible UI components\n- **tailwindcss** and **autoprefixer** - Utility-first CSS framework\n- **class-variance-authority** and **clsx** - Dynamic styling utilities\n\n### Data Visualization\n- **d3** and **@types/d3** - Data visualization library for interactive maps\n- **topojson-client** and **@types/topojson-client** - Geographic data format support\n\n### Development and Build Tools\n- **vite** and **@vitejs/plugin-react** - Fast build tool and React plugin\n- **tsx** - TypeScript execution for Node.js\n- **esbuild** - Fast JavaScript bundler for production builds\n\nThe architecture supports both development and production environments with appropriate configuration for database connections, session management, and static file serving. The system is designed to be deployed on platforms like Replit with multiple server runner scripts for different deployment scenarios.","size_bytes":4025},"run-prod-server.sh":{"content":"#!/bin/bash\n\n# Kill any existing server processes\npkill -f \"node dist/index.js\" || true\n\n# Build the application\necho \"Building application...\"\nnpm run build\n\n# Start the server with nohup to keep it running\necho \"Starting server...\"\nnohup node dist/index.js > server.log 2>&1 &\n\n# Save PID to file\necho $! > server.pid\necho \"Server started with PID: $(cat server.pid)\"","size_bytes":369},"run.js":{"content":"import { spawn } from 'child_process';\nimport { dirname, join } from 'path';\nimport { fileURLToPath } from 'url';\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);\n\nconsole.log('Starting InvestLease static server...');\n\n// Spawn the server process\nconst serverProcess = spawn('node', ['static_server.js'], {\n  stdio: 'inherit',\n  cwd: __dirname\n});\n\n// Handle process events\nserverProcess.on('error', (error) => {\n  console.error(`Server process error: ${error.message}`);\n});\n\nserverProcess.on('exit', (code, signal) => {\n  if (code !== 0) {\n    console.error(`Server process exited with code ${code}, signal: ${signal}`);\n  } else {\n    console.log('Server process exited successfully');\n  }\n});\n\n// Keep the parent process alive\nprocess.on('SIGINT', () => {\n  console.log('Parent process received SIGINT, forwarding to child process');\n  serverProcess.kill('SIGINT');\n});\n\n// Log that the parent process is running\nconsole.log('Parent process is running, server should be available at http://0.0.0.0:5000');","size_bytes":1051},"run.sh":{"content":"#!/bin/bash\n\n# Убиваем предыдущие процессы, если они есть\nkillall -9 node tsx 2>/dev/null || true\n\n# Запуск серверной части через TSX\ncd \"$(dirname \"$0\")\"\necho \"Запуск сервера через tsx...\"\n./node_modules/.bin/tsx server/index.ts &\n\n# Сохраняем PID\necho $! > server.pid\necho \"Сервер запущен с PID: $(cat server.pid)\"\n\n# Сохраняем PID самого скрипта\necho $$ > script.pid\n\n# Бесконечный цикл для поддержания скрипта запущенным\nwhile true; do\n  sleep 60\n  # Проверяем, запущен ли еще сервер\n  if ! ps -p $(cat server.pid) > /dev/null; then\n    echo \"Сервер упал, перезапускаем...\"\n    ./node_modules/.bin/tsx server/index.ts &\n    echo $! > server.pid\n    echo \"Сервер перезапущен с PID: $(cat server.pid)\"\n  fi\ndone","size_bytes":951},"run_after_build.js":{"content":"/**\n * This script handles the transition from development mode to production mode\n * after the build process completes.\n */\n\nimport { spawn } from 'child_process';\nimport { dirname, join } from 'path';\nimport { fileURLToPath } from 'url';\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);\n\nconsole.log('Build completed. Starting static server...');\n\n// Spawn the static server process\nconst serverProcess = spawn('node', ['server.cjs'], {\n  stdio: 'inherit',\n  cwd: __dirname\n});\n\n// Handle process events\nserverProcess.on('error', (error) => {\n  console.error(`Server process error: ${error.message}`);\n});\n\nserverProcess.on('exit', (code, signal) => {\n  if (code !== 0) {\n    console.error(`Server process exited with code ${code}, signal: ${signal}`);\n  } else {\n    console.log('Server process exited successfully');\n  }\n});\n\n// Keep the parent process alive\nprocess.on('SIGINT', () => {\n  console.log('Parent process received SIGINT, forwarding to child process');\n  serverProcess.kill('SIGINT');\n});\n\n// Log that the parent process is running\nconsole.log('Server is running at http://0.0.0.0:5000');","size_bytes":1147},"run_app.js":{"content":"import { exec } from 'child_process';\nimport fs from 'fs';\n\nconsole.log('Starting application...');\n\n// Kill any previous running processes\ntry {\n  if (fs.existsSync('server.pid')) {\n    const pid = fs.readFileSync('server.pid', 'utf8').trim();\n    console.log(`Attempting to kill previous process with PID: ${pid}`);\n    try {\n      process.kill(parseInt(pid), 'SIGTERM');\n      console.log(`Killed process with PID: ${pid}`);\n    } catch (err) {\n      console.log(`Could not kill process: ${err.message}`);\n    }\n    fs.unlinkSync('server.pid');\n  }\n} catch (err) {\n  console.error('Error handling previous process:', err);\n}\n\n// Start the server\nconsole.log('Starting Express server with tsx...');\nconst server = exec('npx tsx server/index.ts');\n\n// Save the PID\nfs.writeFileSync('server.pid', server.pid.toString());\nconsole.log(`Server started with PID: ${server.pid}`);\n\n// Handle server output\nserver.stdout.on('data', (data) => {\n  console.log(`SERVER: ${data.trim()}`);\n});\n\nserver.stderr.on('data', (data) => {\n  console.error(`SERVER ERROR: ${data.trim()}`);\n});\n\n// Handle server exit\nserver.on('exit', (code, signal) => {\n  console.log(`Server process exited with code ${code} and signal ${signal}`);\n});\n\n// Keep the process running\nprocess.on('SIGINT', () => {\n  console.log('Shutting down...');\n  try {\n    process.kill(server.pid, 'SIGTERM');\n  } catch (err) {\n    console.error('Error shutting down server:', err);\n  }\n  process.exit(0);\n});\n\nconsole.log('Application startup complete!');","size_bytes":1506},"run_application.js":{"content":"/**\n * Run a server and a vite development server.\n */\nconst { spawn } = require('child_process');\nconst fs = require('fs');\nconst http = require('http');\n\n// To clean up when the process exits\nlet serverProcess = null;\nlet healthcheckServer = null;\n\n// Log with a timestamp\nfunction log(message) {\n  const now = new Date().toISOString();\n  console.log(`[${now}] ${message}`);\n}\n\n// Clean up processes\nfunction cleanup(code = 0) {\n  log(\"Cleaning up processes...\");\n  if (serverProcess) {\n    serverProcess.kill();\n    serverProcess = null;\n  }\n  if (healthcheckServer) {\n    healthcheckServer.close();\n    healthcheckServer = null;\n  }\n  log(\"Cleanup complete\");\n  process.exit(code);\n}\n\n// Attach signal handlers for graceful shutdown\nprocess.on('SIGINT', () => cleanup());\nprocess.on('SIGTERM', () => cleanup());\nprocess.on('exit', () => cleanup());\n\n// Start the server\nlog(\"Starting InvestLease application server...\");\n\n// Start server using npm run dev\nserverProcess = spawn('npm', ['run', 'dev'], {\n  stdio: 'inherit',\n  env: { ...process.env, PORT: '5000' }\n});\n\n// Wait for the server to start\nserverProcess.on('error', (err) => {\n  log(`Server error: ${err.message}`);\n  cleanup(1);\n});\n\nserverProcess.on('close', (code) => {\n  log(`Server process exited with code ${code}`);\n  cleanup(code || 0);\n});\n\n// Create a simple healthcheck server\nhealthcheckServer = http.createServer((req, res) => {\n  res.writeHead(200, { 'Content-Type': 'application/json' });\n  res.end(JSON.stringify({ status: 'ok', server: 'running' }));\n});\n\nhealthcheckServer.listen(8080, '0.0.0.0', () => {\n  log('Healthcheck server running on port 8080');\n});","size_bytes":1640},"run_server.js":{"content":"const { spawn } = require('child_process');\nconst path = require('path');\n\n// Start PM2 server\nconsole.log('Starting InvestLease server with PM2...');\n\nconst pm2Process = spawn('npx', ['pm2', 'start', 'ecosystem.config.cjs'], {\n  stdio: 'inherit',\n  shell: true\n});\n\npm2Process.on('error', (err) => {\n  console.error('Failed to start PM2:', err);\n});\n\n// Handle cleanup on exit\nprocess.on('SIGINT', () => {\n  console.log('Stopping PM2 server...');\n  const stopProcess = spawn('npx', ['pm2', 'stop', 'all'], {\n    stdio: 'inherit',\n    shell: true\n  });\n  \n  stopProcess.on('close', (code) => {\n    console.log(`PM2 stopped with code ${code}`);\n    process.exit(0);\n  });\n});","size_bytes":674},"run_workflow.js":{"content":"/**\n * Run the InvestLease server using nodejs\n */\n\nasync function startServer() {\n  const { spawn } = require('child_process');\n  console.log('Starting InvestLease server...');\n  \n  try {\n    const server = spawn('node', ['server.cjs'], {\n      stdio: 'inherit',\n      shell: true\n    });\n    \n    server.on('error', (err) => {\n      console.error('Failed to start server process:', err);\n    });\n    \n    server.on('close', (code) => {\n      console.log(`Server process exited with code ${code}`);\n    });\n    \n    console.log('Server started successfully');\n  } catch (error) {\n    console.error('Error starting server:', error);\n  }\n}\n\n// Start the server\nstartServer().catch(err => {\n  console.error('Top level error:', err);\n});","size_bytes":734},"server.js":{"content":"/**\n * Simple Express server script for Replit\n */\nconst { spawn } = require('child_process');\nconst fs = require('fs');\nconst http = require('http');\nconst path = require('path');\n\n// To clean up when the process exits\nlet serverProcess = null;\nlet healthcheckServer = null;\n\n// Log with a timestamp\nfunction log(message) {\n  const now = new Date().toISOString();\n  console.log(`[${now}] ${message}`);\n}\n\n// Clean up processes\nfunction cleanup(code = 0) {\n  log(\"Cleaning up processes...\");\n  if (serverProcess) {\n    serverProcess.kill();\n    serverProcess = null;\n  }\n  if (healthcheckServer) {\n    healthcheckServer.close();\n    healthcheckServer = null;\n  }\n  log(\"Cleanup complete\");\n  process.exit(code);\n}\n\n// Attach signal handlers for graceful shutdown\nprocess.on('SIGINT', () => cleanup());\nprocess.on('SIGTERM', () => cleanup());\nprocess.on('exit', () => cleanup());\n\n// Start the server\nlog(\"Starting InvestLease application server...\");\n\n// Save process ID to file\nconst pid = process.pid;\nfs.writeFileSync('server.pid', `${pid}`);\nlog(`Server process ID: ${pid}`);\n\n// Create a simple healthcheck server\nhealthcheckServer = http.createServer((req, res) => {\n  if (req.url === '/health') {\n    res.writeHead(200, { 'Content-Type': 'application/json' });\n    res.end(JSON.stringify({ status: 'ok', server: 'running', pid }));\n    return;\n  }\n  \n  res.writeHead(404);\n  res.end('Not found');\n});\n\nhealthcheckServer.listen(8080, '0.0.0.0', () => {\n  log('Healthcheck server running on port 8080');\n});\n\n// Start server using tsx\nconst tsx = path.join('node_modules', '.bin', 'tsx');\nserverProcess = spawn(tsx, ['server/index.ts'], {\n  stdio: ['inherit', 'inherit', 'inherit'],\n  env: { ...process.env, PORT: '5000', HOST: '0.0.0.0' }\n});\n\nserverProcess.on('error', (err) => {\n  log(`Server error: ${err.message}`);\n  fs.appendFileSync('server.log', `Error: ${err.message}\\n`);\n  cleanup(1);\n});\n\nserverProcess.on('close', (code) => {\n  log(`Server process exited with code ${code}`);\n  fs.appendFileSync('server.log', `Server exited with code ${code}\\n`);\n  cleanup(code || 0);\n});","size_bytes":2092},"service.js":{"content":"// service.js - Server runner for InvestLease\n// This is a simple wrapper around npm run dev to ensure consistent server startup\n\nimport { spawnSync, spawn } from 'child_process';\nimport { createServer } from 'http';\nimport fs from 'fs';\nimport { fileURLToPath } from 'url';\nimport path from 'path';\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\n// Kill any previously running server\ntry {\n  if (fs.existsSync('server.pid')) {\n    const pid = parseInt(fs.readFileSync('server.pid', 'utf8').trim());\n    if (pid) {\n      console.log(`\\x1b[33mAttempting to kill previous server process (PID: ${pid})\\x1b[0m`);\n      try {\n        process.kill(pid);\n      } catch (error) {\n        // Ignoring errors if process doesn't exist\n      }\n    }\n  }\n} catch (err) {\n  console.error('Error handling previous process:', err);\n}\n\n// Setup health check server\nconst healthServer = createServer((req, res) => {\n  res.writeHead(200, { 'Content-Type': 'application/json' });\n  res.end(JSON.stringify({ status: 'ok', timestamp: new Date().toISOString() }));\n});\n\nhealthServer.listen(8080, '0.0.0.0', () => {\n  console.log('\\x1b[36mHealth check server running on port 8080\\x1b[0m');\n});\n\n// Display banner\nconsole.log('\\x1b[33m=============================================\\x1b[0m');\nconsole.log('\\x1b[33m🏢 InvestLease Application\\x1b[0m');\nconsole.log('\\x1b[33m=============================================\\x1b[0m');\n\n// Start main application using npm run dev\nconsole.log('\\x1b[36mStarting application server...\\x1b[0m');\nconst server = spawn('npm', ['run', 'dev'], {\n  stdio: 'inherit',\n  env: { ...process.env, PORT: '5000' }\n});\n\n// Save PID for future reference\nfs.writeFileSync('server.pid', server.pid.toString());\nconsole.log(`\\x1b[32mServer started with PID: ${server.pid}\\x1b[0m`);\n\n// Handle server exit\nserver.on('exit', (code) => {\n  console.log(`\\x1b[31mServer process exited with code ${code}\\x1b[0m`);\n  cleanupAndExit(code || 0);\n});\n\n// Cleanup function\nfunction cleanupAndExit(code = 0) {\n  console.log('\\x1b[33mCleaning up before exit...\\x1b[0m');\n  healthServer.close();\n  process.exit(code);\n}\n\n// Handle process termination signals\nprocess.on('SIGINT', () => {\n  console.log('\\n\\x1b[33mReceived SIGINT signal, shutting down...\\x1b[0m');\n  server.kill('SIGINT');\n  cleanupAndExit(0);\n});\n\nprocess.on('SIGTERM', () => {\n  console.log('\\n\\x1b[33mReceived SIGTERM signal, shutting down...\\x1b[0m');\n  server.kill('SIGTERM');\n  cleanupAndExit(0);\n});\n\n// Keep the process alive\nprocess.stdin.resume();","size_bytes":2556},"start-pm2-server.sh":{"content":"#!/bin/bash\n\n# Enable error reporting\nset -e\n\necho \"Starting InvestLease server with PM2...\"\n\n# Start the process using PM2\nnpx pm2 start ecosystem.config.cjs\n\n# Keep the process running\nwhile true; do\n  # Check if PM2 process is running\n  if ! npx pm2 pid investlease-server > /dev/null 2>&1; then\n    echo \"PM2 process died, restarting...\"\n    npx pm2 start ecosystem.config.cjs\n  fi\n  \n  sleep 30\ndone","size_bytes":404},"start-server.js":{"content":"console.log(\"Starting server\");\nimport { spawn } from 'child_process';\nimport fs from 'fs';\nimport { fileURLToPath } from 'url';\nimport path from 'path';\n\n// Convert current file URL to path\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\n// Save log output\nconst logFile = fs.openSync('start-server.log', 'a');\n\n// Start the server using tsx\nconst tsx = './node_modules/.bin/tsx';\nconst server = spawn(tsx, ['server/index.ts'], {\n  env: { ...process.env, PORT: '5000', HOST: '0.0.0.0' },\n  stdio: ['ignore', logFile, logFile],\n  detached: true\n});\n\n// Detach the process\nserver.unref();\n\nconsole.log(`Server started with PID: ${server.pid}`);\nfs.writeFileSync('server.pid', server.pid.toString());","size_bytes":746},"start_investlease.sh":{"content":"#!/bin/bash\n\n# Enable error reporting\nset -e\n\necho \"Starting InvestLease server...\"\n\n# Run using Node.js directly\nnode server.cjs\n\n# Keep the script running (just in case)\nwhile true; do\n  sleep 10\ndone","size_bytes":202},"start_server.js":{"content":"/**\n * Simple Express server start script for Replit\n */\nrequire('child_process').spawn('node', ['run_workflow.mjs'], {\n  stdio: 'inherit',\n  shell: true\n});","size_bytes":157},"start_server.sh":{"content":"#!/bin/bash\ncd \"$(dirname \"$0\")\"\nnode dist/index.js","size_bytes":51},"static_server.js":{"content":"import express from 'express';\nimport { fileURLToPath } from 'url';\nimport { dirname, join } from 'path';\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);\n\nconst app = express();\nconst port = process.env.PORT || 5000;\n\n// Serve static files from the dist/public directory\napp.use(express.static(join(__dirname, 'dist/public')));\n\n// Handle all routes by serving the index.html file (for client-side routing)\napp.get('*', (req, res) => {\n  res.sendFile(join(__dirname, 'dist/public/index.html'));\n});\n\napp.listen(port, '0.0.0.0', () => {\n  console.log(`Server running at http://0.0.0.0:${port}`);\n});","size_bytes":641},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1))\",\n          \"2\": \"hsl(var(--chart-2))\",\n          \"3\": \"hsl(var(--chart-3))\",\n          \"4\": \"hsl(var(--chart-4))\",\n          \"5\": \"hsl(var(--chart-5))\",\n        },\n        sidebar: {\n          DEFAULT: \"hsl(var(--sidebar-background))\",\n          foreground: \"hsl(var(--sidebar-foreground))\",\n          primary: \"hsl(var(--sidebar-primary))\",\n          \"primary-foreground\": \"hsl(var(--sidebar-primary-foreground))\",\n          accent: \"hsl(var(--sidebar-accent))\",\n          \"accent-foreground\": \"hsl(var(--sidebar-accent-foreground))\",\n          border: \"hsl(var(--sidebar-border))\",\n          ring: \"hsl(var(--sidebar-ring))\",\n        },\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2787},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport themePlugin from \"@replit/vite-plugin-shadcn-theme-json\";\nimport path, { dirname } from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\nimport { fileURLToPath } from \"url\";\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    themePlugin(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(__dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(__dirname, \"shared\"),\n      \"@assets\": path.resolve(__dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(__dirname, \"client\"),\n  build: {\n    outDir: path.resolve(__dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n});\n","size_bytes":1069},"workflow.js":{"content":"/**\n * A simple configuration-based workflow runner for Replit.\n */\n\n// Run workflow\nasync function runWorkflow() {\n  console.log('Starting InvestLease Server workflow with PM2...');\n  \n  // Import modules\n  const { spawn } = await import('child_process');\n  \n  try {\n    // Use PM2 to run the server via the shell script\n    const server = spawn('./start-pm2-server.sh', [], {\n      stdio: 'inherit',\n      shell: true\n    });\n    \n    server.on('error', (err) => {\n      console.error('Failed to start process:', err);\n    });\n    \n    process.on('SIGINT', () => {\n      console.log('Received SIGINT. Stopping processes...');\n      server.kill('SIGINT');\n    });\n    \n    server.on('close', (code) => {\n      console.log(`Server process exited with code ${code}`);\n    });\n    \n    console.log('Workflow started successfully');\n  } catch (error) {\n    console.error('Error running workflow:', error);\n  }\n}\n\n// Start the workflow\nrunWorkflow().catch(err => {\n  console.error('Top level error:', err);\n});","size_bytes":1006},"workflow_config.js":{"content":"export default {\n  \"Start application\": \"node process.mjs\"\n}","size_bytes":60},"attached_assets/auth.ts":{"content":"import passport from \"passport\";\nimport { Strategy as LocalStrategy } from \"passport-local\";\nimport { Express } from \"express\";\nimport session from \"express-session\";\nimport { scrypt, randomBytes, timingSafeEqual } from \"crypto\";\nimport { promisify } from \"util\";\nimport { storage } from \"./storage\";\nimport { User as SelectUser, loginSchema, registrationSchema, changePasswordSchema } from \"@shared/schema\";\nimport { ZodError } from \"zod\";\nimport { fromZodError } from \"zod-validation-error\";\n\ndeclare global {\n  namespace Express {\n    interface User extends SelectUser {}\n  }\n}\n\nconst scryptAsync = promisify(scrypt);\n\nasync function hashPassword(password: string) {\n  const salt = randomBytes(16).toString(\"hex\");\n  const buf = (await scryptAsync(password, salt, 64)) as Buffer;\n  return `${buf.toString(\"hex\")}.${salt}`;\n}\n\nasync function comparePasswords(supplied: string, stored: string) {\n  const [hashed, salt] = stored.split(\".\");\n  const hashedBuf = Buffer.from(hashed, \"hex\");\n  const suppliedBuf = (await scryptAsync(supplied, salt, 64)) as Buffer;\n  return timingSafeEqual(hashedBuf, suppliedBuf);\n}\n\nexport function setupAuth(app: Express) {\n  const sessionSecret = process.env.SESSION_SECRET || \"investl-secret-123456\";\n  \n  const sessionSettings: session.SessionOptions = {\n    secret: sessionSecret,\n    resave: false,\n    saveUninitialized: false,\n    store: storage.sessionStore,\n    cookie: {\n      secure: app.get(\"env\") === \"production\",\n      httpOnly: true,\n      maxAge: 24 * 60 * 60 * 1000 // 24 hours\n    }\n  };\n\n  app.set(\"trust proxy\", 1);\n  app.use(session(sessionSettings));\n  app.use(passport.initialize());\n  app.use(passport.session());\n\n  passport.use(\n    new LocalStrategy(\n      {\n        usernameField: \"email\",\n        passwordField: \"password\"\n      },\n      async (email, password, done) => {\n        try {\n          const user = await storage.getUserByEmail(email);\n          if (!user || !(await comparePasswords(password, user.password))) {\n            return done(null, false);\n          } else {\n            return done(null, user);\n          }\n        } catch (error) {\n          return done(error);\n        }\n      }\n    )\n  );\n\n  passport.serializeUser((user, done) => done(null, user.id));\n  \n  passport.deserializeUser(async (id: number, done) => {\n    try {\n      const user = await storage.getUser(id);\n      done(null, user);\n    } catch (error) {\n      done(error);\n    }\n  });\n\n  // Register user\n  app.post(\"/api/register\", async (req, res, next) => {\n    try {\n      // Validate registration data\n      const validatedData = registrationSchema.parse(req.body);\n      \n      // Check if user exists\n      const existingUserByEmail = await storage.getUserByEmail(validatedData.email);\n      if (existingUserByEmail) {\n        return res.status(400).send(\"Пользователь с таким email уже существует\");\n      }\n      \n      const existingUserByInn = await storage.getUserByInn(validatedData.inn);\n      if (existingUserByInn) {\n        return res.status(400).send(\"Пользователь с таким ИНН уже существует\");\n      }\n      \n      // Create username from email\n      const username = validatedData.email.split('@')[0];\n      \n      // Create user\n      const user = await storage.createUser({\n        username,\n        email: validatedData.email,\n        inn: validatedData.inn,\n        password: await hashPassword(validatedData.password),\n      });\n\n      // Log in the user\n      req.login(user, (err) => {\n        if (err) return next(err);\n        // Don't send password in response\n        const { password, ...userWithoutPassword } = user;\n        res.status(201).json(userWithoutPassword);\n      });\n    } catch (error) {\n      if (error instanceof ZodError) {\n        const validationError = fromZodError(error);\n        return res.status(400).json({ \n          message: \"Ошибка валидации\", \n          errors: validationError.details \n        });\n      }\n      next(error);\n    }\n  });\n\n  // Login\n  app.post(\"/api/login\", (req, res, next) => {\n    try {\n      // Validate login data\n      loginSchema.parse(req.body);\n      \n      passport.authenticate(\"local\", (err, user, info) => {\n        if (err) return next(err);\n        if (!user) {\n          return res.status(401).json({ message: \"Неверный email или пароль\" });\n        }\n        \n        req.login(user, (err) => {\n          if (err) return next(err);\n          // Don't send password in response\n          const { password, ...userWithoutPassword } = user;\n          return res.json(userWithoutPassword);\n        });\n      })(req, res, next);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        const validationError = fromZodError(error);\n        return res.status(400).json({ \n          message: \"Ошибка валидации\", \n          errors: validationError.details \n        });\n      }\n      next(error);\n    }\n  });\n\n  // Logout\n  app.post(\"/api/logout\", (req, res, next) => {\n    req.logout((err) => {\n      if (err) return next(err);\n      res.sendStatus(200);\n    });\n  });\n\n  // Get current user\n  app.get(\"/api/user\", (req, res) => {\n    if (!req.isAuthenticated()) return res.sendStatus(401);\n    // Don't send password in response\n    const { password, ...userWithoutPassword } = req.user;\n    res.json(userWithoutPassword);\n  });\n  \n  // Reset password request\n  app.post(\"/api/reset-password\", async (req, res) => {\n    const { email } = req.body;\n    \n    const user = await storage.getUserByEmail(email);\n    if (!user) {\n      // Still return success to prevent email enumeration\n      return res.json({ success: true, message: \"Если email зарегистрирован, на него отправлены инструкции\" });\n    }\n    \n    // In a real implementation, we would:\n    // 1. Generate a token\n    // 2. Save it to a database with an expiration\n    // 3. Send an email with a reset link\n    \n    // For this implementation, just return success\n    res.json({ success: true, message: \"Если email зарегистрирован, на него отправлены инструкции\" });\n  });\n  \n  // Change password (authenticated)\n  app.post(\"/api/change-password\", async (req, res, next) => {\n    if (!req.isAuthenticated()) {\n      return res.status(401).send(\"Unauthorized\");\n    }\n    \n    try {\n      const validatedData = changePasswordSchema.parse(req.body);\n      \n      const user = await storage.getUser(req.user.id);\n      if (!user) {\n        return res.status(404).send(\"User not found\");\n      }\n      \n      const isValidPassword = await comparePasswords(validatedData.currentPassword, user.password);\n      if (!isValidPassword) {\n        return res.status(400).send(\"Неверный текущий пароль\");\n      }\n      \n      // Update user password\n      user.password = await hashPassword(validatedData.newPassword);\n      \n      res.json({ success: true, message: \"Пароль успешно изменен\" });\n    } catch (error) {\n      if (error instanceof ZodError) {\n        const validationError = fromZodError(error);\n        return res.status(400).json({ \n          message: \"Ошибка валидации\", \n          errors: validationError.details \n        });\n      }\n      next(error);\n    }\n  });\n}\n","size_bytes":7341},"attached_assets/content-1743056489420.md":{"content":"![people](https://www.investl.ru/upload/iblock/1ff/v0t0aezzl0szir58nxzrn33lyqivwuun.gif)\n\n# ПАРТНЁРСТВО ДЛЯ УСПЕХА\n\nПодберем финансовый инструмент для вашего бизнеса\n\n![](https://www.investl.ru/upload/iblock/98a/f010903dlnn3hpojsb78yw2bxy01p6hq.jpg)\n\n[Спецтехника](https://www.investl.ru/services/spectechnika/)\n\n![](https://www.investl.ru/upload/iblock/820/ihc8bc040ttyajj79ktclack2j5zxmtx.jpg)\n\n[Оборудование](https://www.investl.ru/services/oborudovanie/)\n\n![](https://www.investl.ru/upload/iblock/231/ltsbxmgv90651vmmryronip3dn320lns.jpg)\n\n[Недвижимость](https://www.investl.ru/services/nedvijimost/)\n\n![](https://www.investl.ru/upload/iblock/cdf/vjhbwdw8m9e6emeb1jocekic37t4uhpj.jpg)\n\n[Легковые и грузовые автомобили](https://www.investl.ru/services/gruzovye-avtomobili/)\n\n# Подбираем лизинговые продукты под каждого клиента\n\nООО «ИНВЕСТ-лизинг» \\- надежный партнер для всех, кто стремится к успешному развитию своего бизнеса.\n\nНаша команда нацелена на долгосрочные партнерские отношения с клиентами и всегда идет навстречу их потребностям.\n\n- 4000+\n\n\n\nДоговоров\n\n- более 1500+\n\n\n\nПартнеров\n\n- 32 млрд+\n\n\n\nСтоимость договоров лизинга\n\n- 100+\n\n\n\nМеждународных контрактов\n\n\nВаше имя\n\nЖелаемый срок лизинга, мес\n\n1 год3 лет5 лет\n\nСтоимость имущества, руб\n\n100 000 ₽100 000 000 ₽300 000 000 ₽\n\nТелефон\n\nИНН\n\nАвансовый платёж, %\n\n0%25%49%\n\nЭлектронная почта\n\nСтавка удорожания 15%\n\nСроком на 3 года\n\nСумма финансирования 7 020 000 ₽\n\nЕжемесячный платёж 309 661 ₽\n\nКомментарий\n\nСогласие на обработку  [персональных данных](https://www.investl.ru/upload/iblock/063/77j17jnlutk5mjsev6mjlg33xrb7y25j.pdf)\n\nРасчёты носят ознакомительный характер и не являются офертой\n\n\\\\* \\- обязательное поле\n\nОставить заявку\n\n## Открываем новые горизонты для вашего бизнеса\n\nПрофессиональный подход\n\nИмеем большой опыт работы в сфере лизинга и предоставляем высококачественные услуги нашим Клиентам\n\nГибкие условия\n\n- подбираем лизинговые продукты для каждого клиента;\n- графики платежей и сумму первоначального взноса формируем под пожелания клиента, учитываем сезонность;\n- частично-досрочное погашение с пересчетом графиков платежей;\n- досрочный выкуп предмета лизинга ранее срока окончания договора.\n\nШирокий выбор услуг\n\n- работаем со сделками любой сложности;\n- работаем с любым предметом лизинга, в том числе бывшем в употреблении;\n- работаем с возвратным лизингом;\n- имеем опыт приобретения имущества за границей с полным комплексом необходимых мероприятий;\n- гибкие условия страхования.\n\nБыстрое оформление\n\n- большой выбор экспресс программ;\n- используем электронный документооборот;\n- оперативная оплата поставщикам.\n\nЭкспертный консалтинг\n\n- работаем с 2010 года;\n- более 4000 заключенных договоров, в том числе международных контрактов;\n- проверим контрагентов, подготовим все необходимые документы и сопроводим сделку.\n\nПоддержка клиентов\n\n- личный кабинет клиента;\n- персональные менеджеры помогают клиенту на всех этапах взаимодействия;\n- консультирование по любым вопросам, связанным с лизинговым финансированием с профессиональными сотрудниками компании.\n\n## Контакты\n\nЧелябинск\n\nАдрес:\n\n454084, г. Челябинск, проспект Победы, д. 147-A, 1 этаж\n\nТелефон:\n\n[+7 (351) 791-06-46](tel:+7 (351) 791-06-46)\n\nЭлектронная почта:\n\n[il@chelinvest.ru](mailto:il@chelinvest.ru)\n\nСанкт-Петербург-Тамбов-Нижний Новгород-Уфа-Тольятти-Краснодар-Тюмень-Челябинск-Ульяновск-\n\nСанкт-Петербург-Тамбов-Нижний Новгород-Уфа-Тольятти-Краснодар-Тюмень-Челябинск-Ульяновск-\n\nСанкт-Петербург-Тамбов-Нижний Новгород-Уфа-Тольятти-Краснодар-Тюмень-Челябинск-Ульяновск-\n\nСанкт-Петербург-Тамбов-Нижний Новгород-Уфа-Тольятти-Краснодар-Тюмень-Челябинск-Ульяновск-","size_bytes":5857},"attached_assets/content-1743056490306.md":{"content":"Общество с ограниченной ответственностью «ИНВЕСТ-лизинг» было основано в 2010 году одним из крупнейших банков Челябинской области. Единственным учредителем ООО «ИНВЕСТ-лизинг» является ПАО «ЧЕЛЯБИНВЕСТБАНК». За время успешной деятельности компании лизинговый портфель превысил 9 млрд. руб. При финансировании лизинговых сделок ООО «ИНВЕСТ-лизинг» использует как привлеченные, так и собственные ресурсы.\n\n![icon](https://www.investl.ru/upload/iblock/d45/4q5kao1xtbbyo11ytbqe8jzbgfzvg5iz.png)\n\nНадежность\n\nНаш учредитель надежный региональный банк.\n\n![icon](https://www.investl.ru/upload/iblock/372/qogfrhz8brktk2koowbmfjmvlvb0ssnv.png)\n\nПрофессионализм\n\nПри любой сделке возникает масса вопросов: как правильно организовать процесс сотрудничества, что можно взять в лизинг, как оформить договор.\n\nНаши специалисты тщательно проанализируют Вашу задачу и смогут предложить Вам оптимальные решения.\n\n![icon](https://www.investl.ru/upload/iblock/339/lx025t49zx4b27j9l2dk8w0pavywujnx.png)\n\nОперативность\n\nРешение по сделке за один день!\n\n![icon](https://www.investl.ru/upload/iblock/db1/fu1wipzyreyt0fx5jad8bf8l5hvxbsxv.png)\n\nПривлекательность\n\nОптимальные условия финансирования.\n\n- 100+\n\n\n\nМеждународных контрактов\n\n- 32 млрд+\n\n\n\nСтоимость договоров лизинга\n\n- 1500+\n\n\n\nПартнеров\n\n- 4000+\n\n\n\nДоговоров\n\n\n44%\n\nПроизводственное оборудование\n\nЛегковые автомобили\n\nСпецтехника\n\nСельхозтехника\n\nНедвижимость\n\nЖ/д транспорт\n\nГрузовой автотранспорт\n\nПищевая промышленность\n\nПрочее имущество\n\nПроизводственное оборудование\n\n44\n\nЛегковые автомобили\n\n2\n\nСпецтехника\n\n24\n\nСельхозтехника\n\n1\n\nНедвижимость\n\n2\n\nЖ/д транспорт\n\n4\n\nГрузовой автотранспорт\n\n10\n\nПищевая промышленность\n\n3\n\nПрочее имущество\n\n8\n\nВаше имя\n\nЖелаемый срок лизинга, мес\n\n1 год3 лет5 лет\n\nСтоимость имущества, руб\n\n100 000 ₽100 000 000 ₽300 000 000 ₽\n\nТелефон\n\nИНН\n\nАвансовый платёж, %\n\n0%25%49%\n\nЭлектронная почта\n\nСтавка удорожания 15%\n\nСроком на 3 года\n\nСумма финансирования 7 020 000 ₽\n\nЕжемесячный платёж 309 661 ₽\n\nКомментарий\n\nСогласие на обработку  [персональных данных](https://www.investl.ru/upload/iblock/063/77j17jnlutk5mjsev6mjlg33xrb7y25j.pdf)\n\nРасчёты носят ознакомительный характер и не являются офертой\n\n\\\\* \\- обязательное поле\n\nОставить заявку","size_bytes":3589},"attached_assets/content-1743056491056.md":{"content":"**Лизинг**— совокупность экономических и правовых отношений, возникающих в связи с реализацией договора лизинга, в том числе приобретением предмета лизинга.\n\nФедеральный закон «О лизинге» определяет лизинг как «вид инвестиционной деятельности по приобретению имущества и передаче его на основании договора лизинга физическим или юридическим лицам за определенную плату, на определенный срок и на определенных условиях, обусловленных договором, с правом выкупа имущества лизингополучателем».\n\n**Договор лизинга** — договор, в соответствии с которым лизингодатель обязуется приобрести в собственность указанное лизингополучателем имущество у определенного им продавца и предоставить лизингополучателю это имущество за плату во временное владение и пользование для предпринимательской деятельности.\n\n**Предметом** лизинга могут быть любые непотребляемые вещи, в том числе предприятия и другие имущественные комплексы, здания, сооружения, оборудование, транспортные средства и другое движимое и недвижимое имущество, используемое для предпринимательской деятельности.\n\n**В лизинг не могут передаваться** земельные участки и другие природные объекты, а также имущество, которое федеральными законами запрещено для свободного обращения.\n\nПрямые участники лизинговой сделки, т. е. субъекты лизинга — Лизингодатель, Лизингополучатель, Продавец (поставщик).\n\nКосвенные участники лизинговой сделки: банки, кредитующие лизингодателя, поручители, залогодатели, страховые компании.\n\n**Лизингодатель**— физическое или юридическое лицо, которое за счет привлеченных или собственных средств приобретает в ходе лизинговой сделки в собственность имущество и предоставляет его в качестве предмета лизинга лизингополучателю за определенную плату на определенный срок и на определенных условиях во временное владение и пользование с переходом или без перехода к лизингополучателю права собственности на предмет лизинга.\n\n**Лизингополучатель**(пользователь) — Юридические лица и индивидуальные предприниматели зарегистрированные на территории РФ, со сроком ведение бизнеса не менее 24 месяцев.\n\n**Продавец**(поставщик) — физическое или юридическое лицо, которое в соответствии с договором купли-продажи продает лизингодателю в оговоренный срок производимое или закупаемое им имущество, являющееся предметом лизинга.","size_bytes":4246},"attached_assets/content-1743056494580.md":{"content":"![people](https://www.investl.ru/upload/iblock/1ff/v0t0aezzl0szir58nxzrn33lyqivwuun.gif)\n\n# ПАРТНЁРСТВО ДЛЯ УСПЕХА\n\nПодберем финансовый инструмент для вашего бизнеса\n\n![](https://www.investl.ru/upload/iblock/98a/f010903dlnn3hpojsb78yw2bxy01p6hq.jpg)\n\n[Спецтехника](https://www.investl.ru/services/spectechnika/)\n\n![](https://www.investl.ru/upload/iblock/820/ihc8bc040ttyajj79ktclack2j5zxmtx.jpg)\n\n[Оборудование](https://www.investl.ru/services/oborudovanie/)\n\n![](https://www.investl.ru/upload/iblock/231/ltsbxmgv90651vmmryronip3dn320lns.jpg)\n\n[Недвижимость](https://www.investl.ru/services/nedvijimost/)\n\n![](https://www.investl.ru/upload/iblock/cdf/vjhbwdw8m9e6emeb1jocekic37t4uhpj.jpg)\n\n[Легковые и грузовые автомобили](https://www.investl.ru/services/gruzovye-avtomobili/)\n\n# Подбираем лизинговые продукты под каждого клиента\n\nООО «ИНВЕСТ-лизинг» \\- надежный партнер для всех, кто стремится к успешному развитию своего бизнеса.\n\nНаша команда нацелена на долгосрочные партнерские отношения с клиентами и всегда идет навстречу их потребностям.\n\n- 4000+\n\n\n\nДоговоров\n\n- более 1500+\n\n\n\nПартнеров\n\n- 32 млрд+\n\n\n\nСтоимость договоров лизинга\n\n- 100+\n\n\n\nМеждународных контрактов\n\n\nВаше имя\n\nЖелаемый срок лизинга, мес\n\n1 год3 лет5 лет\n\nСтоимость имущества, руб\n\n100 000 ₽100 000 000 ₽300 000 000 ₽\n\nТелефон\n\nИНН\n\nАвансовый платёж, %\n\n0%25%49%\n\nЭлектронная почта\n\nСтавка удорожания 15%\n\nСроком на 3 года\n\nСумма финансирования 7 020 000 ₽\n\nЕжемесячный платёж 309 661 ₽\n\nКомментарий\n\nСогласие на обработку  [персональных данных](https://www.investl.ru/upload/iblock/063/77j17jnlutk5mjsev6mjlg33xrb7y25j.pdf)\n\nРасчёты носят ознакомительный характер и не являются офертой\n\n\\\\* \\- обязательное поле\n\nОставить заявку\n\n## Открываем новые горизонты для вашего бизнеса\n\nПрофессиональный подход\n\nИмеем большой опыт работы в сфере лизинга и предоставляем высококачественные услуги нашим Клиентам\n\nГибкие условия\n\n- подбираем лизинговые продукты для каждого клиента;\n- графики платежей и сумму первоначального взноса формируем под пожелания клиента, учитываем сезонность;\n- частично-досрочное погашение с пересчетом графиков платежей;\n- досрочный выкуп предмета лизинга ранее срока окончания договора.\n\nШирокий выбор услуг\n\n- работаем со сделками любой сложности;\n- работаем с любым предметом лизинга, в том числе бывшем в употреблении;\n- работаем с возвратным лизингом;\n- имеем опыт приобретения имущества за границей с полным комплексом необходимых мероприятий;\n- гибкие условия страхования.\n\nБыстрое оформление\n\n- большой выбор экспресс программ;\n- используем электронный документооборот;\n- оперативная оплата поставщикам.\n\nЭкспертный консалтинг\n\n- работаем с 2010 года;\n- более 4000 заключенных договоров, в том числе международных контрактов;\n- проверим контрагентов, подготовим все необходимые документы и сопроводим сделку.\n\nПоддержка клиентов\n\n- личный кабинет клиента;\n- персональные менеджеры помогают клиенту на всех этапах взаимодействия;\n- консультирование по любым вопросам, связанным с лизинговым финансированием с профессиональными сотрудниками компании.\n\n## Контакты\n\nЧелябинск\n\nАдрес:\n\n454084, г. Челябинск, проспект Победы, д. 147-A, 1 этаж\n\nТелефон:\n\n[+7 (351) 791-06-46](tel:+7 (351) 791-06-46)\n\nЭлектронная почта:\n\n[il@chelinvest.ru](mailto:il@chelinvest.ru)\n\nСанкт-Петербург-Тамбов-Нижний Новгород-Уфа-Тольятти-Краснодар-Тюмень-Челябинск-Ульяновск-\n\nСанкт-Петербург-Тамбов-Нижний Новгород-Уфа-Тольятти-Краснодар-Тюмень-Челябинск-Ульяновск-\n\nСанкт-Петербург-Тамбов-Нижний Новгород-Уфа-Тольятти-Краснодар-Тюмень-Челябинск-Ульяновск-\n\nСанкт-Петербург-Тамбов-Нижний Новгород-Уфа-Тольятти-Краснодар-Тюмень-Челябинск-Ульяновск-","size_bytes":5857},"attached_assets/content-1743056495387.md":{"content":"- [О компании](https://www.investl.ru/about/)\n\n  - [Вакансии](https://www.investl.ru/about/vacancies/)\n- [Клиентам](https://www.investl.ru/lizing/)\n\n  - [Партнеры](https://www.investl.ru/partners/)\n  - [FAQ](https://www.investl.ru/faq/)\n  - [Документы](https://www.investl.ru/leasing-legislation/)\n  - [Реализация изъятого имущества](https://www.investl.ru/realizatsiya-izyatogo-imushchestva/)\n- [Услуги](https://www.investl.ru/services/)\n\n  - [Легковые и грузовые автомобили](https://www.investl.ru/services/gruzovye-avtomobili/)\n  - [Недвижимость](https://www.investl.ru/services/nedvijimost/)\n  - [Оборудование](https://www.investl.ru/services/oborudovanie/)\n  - [Спецтехника](https://www.investl.ru/services/spectechnika/)\n- [Контакты](https://www.investl.ru/#contactsMap)\n- [Поиск](https://www.investl.ru/sitemap/#search)","size_bytes":976},"attached_assets/content-1743056902127.md":{"content":"## Города\n\n- Краснодар\n- Нижний Новгород\n- Санкт-Петербург\n- Тамбов\n- Тольятти\n- Тюмень\n- Ульяновск\n- Уфа\n- Челябинск\n\n# Вакансии\n\n- Менеджер по лизингу\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Требования:**\n\n\n\n\n\n\n\n- высшее образование;\n- опыт успешных продаж в сфере финансовых услуг от 1 года;\n\n**Обязанности:**\n\n- активный поиск и привлечение потенциальных клиентов;\n- сбор первичных документов по клиенту;\n- подготовка и заключение договоров: финансовой аренды (лизинга), купли-продажи, поручительства и т.п.;\n- контроль исполнения договора до полного погашения всех обязательств.\n\n**Условия:**\n\n- полная занятость, полный день;\n- график работы: пн . \\- пт. с 8-00 до 17-00;\n- полный социальный пакет;\n- официальное трудоустройство;\n- корпоративное обучение.\n\n- Менеджер по лизингу\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Требования:**\n\n\n\n\n\n\n\n- высшее образование;\n- опыт успешных продаж в сфере финансовых услуг от 1 года;\n\n**Обязанности:**\n\n- активный поиск и привлечение потенциальных клиентов;\n- сбор первичных документов по клиенту;\n- подготовка и заключение договоров: финансовой аренды (лизинга), купли-продажи, поручительства и т.п.;\n- контроль исполнения договора до полного погашения всех обязательств.\n\n**Условия:**\n\n- полная занятость, полный день;\n- график работы: пн . \\- пт. с 8-00 до 17-00;\n- полный социальный пакет;\n- официальное трудоустройство;\n- корпоративное обучение.\n\n- Менеджер по лизингу\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Требования:**\n\n\n\n\n\n\n\n- высшее образование;\n- опыт успешных продаж в сфере финансовых услуг от 1 года;\n\n**Обязанности:**\n\n- активный поиск и привлечение потенциальных клиентов;\n- сбор первичных документов по клиенту;\n- подготовка и заключение договоров: финансовой аренды (лизинга), купли-продажи, поручительства и т.п.;\n- контроль исполнения договора до полного погашения всех обязательств.\n\n**Условия:**\n\n- полная занятость, полный день;\n- график работы: пн . \\- пт. с 8-00 до 17-00;\n- полный социальный пакет;\n- официальное трудоустройство;\n- корпоративное обучение.\n\n- Менеджер по лизингу\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Требования:**\n\n\n\n\n\n\n\n- высшее образование;\n- опыт успешных продаж в сфере финансовых услуг от 1 года;\n\n**Обязанности:**\n\n- активный поиск и привлечение потенциальных клиентов;\n- сбор первичных документов по клиенту;\n- подготовка и заключение договоров: финансовой аренды (лизинга), купли-продажи, поручительства и т.п.;\n- контроль исполнения договора до полного погашения всех обязательств.\n\n**Условия:**\n\n- полная занятость, полный день;\n- график работы: пн . \\- пт. с 8-00 до 17-00;\n- полный социальный пакет;\n- официальное трудоустройство;\n- корпоративное обучение.\n\n- Менеджер по лизингу\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Требования:**\n\n\n\n\n\n\n\n- высшее образование;\n- опыт успешных продаж в сфере финансовых услуг от 1 года;\n\n**Обязанности:**\n\n- активный поиск и привлечение потенциальных клиентов;\n- сбор первичных документов по клиенту;\n- подготовка и заключение договоров: финансовой аренды (лизинга), купли-продажи, поручительства и т.п.;\n- контроль исполнения договора до полного погашения всех обязательств.\n\n**Условия:**\n\n- полная занятость, полный день;\n- график работы: пн . \\- пт. с 8-00 до 17-00;\n- полный социальный пакет;\n- официальное трудоустройство;\n- корпоративное обучение.\n\n- Менеджер по лизингу\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Требования:**\n\n\n\n\n\n\n\n- высшее образование;\n- опыт успешных продаж в сфере финансовых услуг от 1 года;\n\n**Обязанности:**\n\n- активный поиск и привлечение потенциальных клиентов;\n- сбор первичных документов по клиенту;\n- подготовка и заключение договоров: финансовой аренды (лизинга), купли-продажи, поручительства и т.п.;\n- контроль исполнения договора до полного погашения всех обязательств.\n\n**Условия:**\n\n- полная занятость, полный день;\n- график работы: пн . \\- пт. с 8-00 до 17-00;\n- полный социальный пакет;\n- официальное трудоустройство;\n- корпоративное обучение.\n\n- Менеджер по лизингу\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Требования:**\n\n\n\n\n\n\n\n- высшее образование;\n- опыт успешных продаж в сфере финансовых услуг от 1 года;\n\n**Обязанности:**\n\n- активный поиск и привлечение потенциальных клиентов;\n- сбор первичных документов по клиенту;\n- подготовка и заключение договоров: финансовой аренды (лизинга), купли-продажи, поручительства и т.п.;\n- контроль исполнения договора до полного погашения всех обязательств.\n\n**Условия:**\n\n- полная занятость, полный день;\n- график работы: пн . \\- пт. с 8-00 до 17-00;\n- полный социальный пакет;\n- официальное трудоустройство;\n- корпоративное обучение.\n\n- Менеджер по лизингу\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Требования:**\n\n\n\n\n\n\n\n- высшее образование;\n- опыт успешных продаж в сфере финансовых услуг от 1 года;\n\n**Обязанности:**\n\n- активный поиск и привлечение потенциальных клиентов;\n- сбор первичных документов по клиенту;\n- подготовка и заключение договоров: финансовой аренды (лизинга), купли-продажи, поручительства и т.п.;\n- контроль исполнения договора до полного погашения всех обязательств.\n\n**Условия:**\n\n- полная занятость, полный день;\n- график работы: пн . \\- пт. с 8-00 до 17-00;\n- полный социальный пакет;\n- официальное трудоустройство;\n- корпоративное обучение.\n\n- Менеджер по лизингу\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Требования:**\n\n\n\n\n\n\n\n- высшее образование;\n- опыт успешных продаж в сфере финансовых услуг от 1 года;\n\n**Обязанности:**\n\n- активный поиск и привлечение потенциальных клиентов;\n- сбор первичных документов по клиенту;\n- подготовка и заключение договоров: финансовой аренды (лизинга), купли-продажи, поручительства и т.п.;\n- контроль исполнения договора до полного погашения всех обязательств.\n\n**Условия:**\n\n- полная занятость, полный день;\n- график работы: пн . \\- пт. с 8-00 до 17-00;\n- полный социальный пакет;\n- официальное трудоустройство;\n- корпоративное обучение.\n\nВаше имя\n\nЖелаемый срок лизинга, мес\n\n1 год3 лет5 лет\n\nСтоимость имущества, руб\n\n100 000 ₽100 000 000 ₽300 000 000 ₽\n\nТелефон\n\nИНН\n\nАвансовый платёж, %\n\n0%25%49%\n\nЭлектронная почта\n\nСтавка удорожания 15%\n\nСроком на 3 года\n\nСумма финансирования 7 020 000 ₽\n\nЕжемесячный платёж 309 661 ₽\n\nКомментарий\n\nСогласие на обработку  [персональных данных](https://www.investl.ru/upload/iblock/063/77j17jnlutk5mjsev6mjlg33xrb7y25j.pdf)\n\nРасчёты носят ознакомительный характер и не являются офертой\n\n\\\\* \\- обязательное поле\n\nОставить заявку","size_bytes":10471},"attached_assets/content-1743056921413.md":{"content":"","size_bytes":0},"attached_assets/content-1743056936061.md":{"content":"","size_bytes":0},"attached_assets/content-1743056961568.md":{"content":"","size_bytes":0},"attached_assets/content-1743056962544.md":{"content":"**Лизинг**— совокупность экономических и правовых отношений, возникающих в связи с реализацией договора лизинга, в том числе приобретением предмета лизинга.\n\nФедеральный закон «О лизинге» определяет лизинг как «вид инвестиционной деятельности по приобретению имущества и передаче его на основании договора лизинга физическим или юридическим лицам за определенную плату, на определенный срок и на определенных условиях, обусловленных договором, с правом выкупа имущества лизингополучателем».\n\n**Договор лизинга** — договор, в соответствии с которым лизингодатель обязуется приобрести в собственность указанное лизингополучателем имущество у определенного им продавца и предоставить лизингополучателю это имущество за плату во временное владение и пользование для предпринимательской деятельности.\n\n**Предметом** лизинга могут быть любые непотребляемые вещи, в том числе предприятия и другие имущественные комплексы, здания, сооружения, оборудование, транспортные средства и другое движимое и недвижимое имущество, используемое для предпринимательской деятельности.\n\n**В лизинг не могут передаваться** земельные участки и другие природные объекты, а также имущество, которое федеральными законами запрещено для свободного обращения.\n\nПрямые участники лизинговой сделки, т. е. субъекты лизинга — Лизингодатель, Лизингополучатель, Продавец (поставщик).\n\nКосвенные участники лизинговой сделки: банки, кредитующие лизингодателя, поручители, залогодатели, страховые компании.\n\n**Лизингодатель**— физическое или юридическое лицо, которое за счет привлеченных или собственных средств приобретает в ходе лизинговой сделки в собственность имущество и предоставляет его в качестве предмета лизинга лизингополучателю за определенную плату на определенный срок и на определенных условиях во временное владение и пользование с переходом или без перехода к лизингополучателю права собственности на предмет лизинга.\n\n**Лизингополучатель**(пользователь) — Юридические лица и индивидуальные предприниматели зарегистрированные на территории РФ, со сроком ведение бизнеса не менее 24 месяцев.\n\n**Продавец**(поставщик) — физическое или юридическое лицо, которое в соответствии с договором купли-продажи продает лизингодателю в оговоренный срок производимое или закупаемое им имущество, являющееся предметом лизинга.","size_bytes":4246},"attached_assets/content-1743060287657.md":{"content":"![people](https://www.investl.ru/upload/iblock/364/smvscxhfbzu6yp6cvb2hp8vbk0qs07x4.png)\n\n# Легковые и грузовые автомобили\n\n[Рассчитать лизинг](https://www.investl.ru/services/gruzovye-avtomobili/#calculationForm)\n\nАванс\n\nот0%\n\nСрок договора\n\nдо5 лет\n\n![icon](https://www.investl.ru/upload/iblock/28b/35eaz1ijrfxi9l0znmlsijjxwfnlfa7a.png)\n\nРешение за один день\n\n![icon](https://www.investl.ru/upload/iblock/c65/9cqqqv457mri5kp0fb3ivu6nk5ygyi0l.png)\n\nОформление сделки онлайн, без посещения офиса\n\n![icon](https://www.investl.ru/upload/iblock/f69/186kg48rekvkrw0hqarpoadbvvt7auft.png)\n\nСопровождение клиента на всех этапах сделки\n\n![icon](https://www.investl.ru/upload/iblock/55e/j0obpla1z44z3zscjlcytnsdfd0p4p2j.png)\n\nСкидки от компаний партнеров и выгодные условия страхования\n\nЛегковые\n\n![auto](https://www.investl.ru/upload/iblock/1b6/nphcbuffhm4nf09cbfu08qzmnkyjqvxy.jpg)\n\nГрузовые\n\n![auto](https://www.investl.ru/upload/iblock/4ec/ez0qj6t8pl1uwybg293d6fpx6jwvya9e.jpg)\n\nПрицепная техника\n\n![auto](https://www.investl.ru/upload/iblock/d1c/hwvym3n6mvntpsklbiw66k0p6aooykoj.jpg)\n\nАвтобусы\n\n![auto](https://www.investl.ru/upload/iblock/754/jpj1i15q5bcaipmgp1my78ibyh46u62h.jpg)\n\n**И любые другие**\n\nМы подберем автомобиль под ваш запрос\n\n[Рассчитать лизинг](https://www.investl.ru/services/gruzovye-avtomobili/#calculationForm)\n\n- 1\n\n\n\nОставьте заявку\n\n\n\nМы свяжемся с Вами в течение часа\n\n- 2\n\n\n\nСогласуем условия сделки\n\n\n\nИ проверим документы\n\n- 3\n\n\n\nЗаключим договор\n\n\n\nИ передадим Вам имущество в пользование\n\n\n# Вопросы по лизингу легковых и грузовых автомобилей\n\n- Что делать если произошел страховой случай?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nВ данной ситуации Вам следует немедленно сообщить в компетентные органы (МЧС, отдел полиции, ГИБДД и др.), страховщику, а также Лизингодателю о наступлении страхового случая и действовать в порядке, указанном в договоре лизинга и правилах страхования.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nСтрахование транспортного средства\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nСтрахование (КАСКО) предмета лизинга осуществляет Лизингодатель после предварительного согласования тарифа с Лизингополучателем. Расходы на оплату страховой премии включаются в график лизинговых платежей. Оформление и оплату полиса ОСАГО Лизингополучатель осуществляет самостоятельно.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nОбязательно ли страхование предмета лизинга?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nДа, страхование предмета лизинга является обязательным требованием при заключении договора.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nМожно ли самостоятельно выбрать страховую компанию?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nДа, ИНВЕСТ-лизинг предоставляет выбор из широкого перечня страховых компаний-партнеров.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nВозможно ли включить сумму страховой премии в состав лизинговых платежей?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nДа, возможно. Ежегодные суммы страховой премии можно учесть в качестве единовременного платежа либо распределить в течении всего срока договора.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nМожно ли выезжать за границу РФ на автотранспорте взятом в лизинг?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nТакая возможность существует, но при условии получения письменного согласия от Лизингодателя на совершение подобных действий. Также страна выезда должна обязательно входить в перечень территорий страхового покрытия полиса КАСКО.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nМожно ли давать предмет лизинга в пользование другим людям?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nЛизингополучатель не имеет права передавать Предмет лизинга в сублизинг или в аренду, переуступать свои права и обязанности по Договору лизинга третьим лицам в течение всего срока действия Договора лизинга без письменного согласия Лизингодателя.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nМожно ли приобрести в лизинг прицепную технику без автомобиля?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nДа, это возможно. ООО «ИНВЕСТ-лизинг» осуществляет финансирование прицепной техники, в том числе бывшей в употреблении.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nКто осуществляет регистрацию автотранспорта?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nРегистрацию предмета лизинга в региональных подразделениях ГИБДД и Гостехнадзора осуществляет Лизингополучатель. Подробно о данной процедуре и порядке ее прохождения Вас ознакомит персональный менеджер нашей компании.\n\n\nВаше имя\n\nЖелаемый срок лизинга, мес\n\n1 год3 лет5 лет\n\nСтоимость имущества, руб\n\n100 000 ₽100 000 000 ₽300 000 000 ₽\n\nТелефон\n\nИНН\n\nАвансовый платёж, %\n\n0%25%49%\n\nЭлектронная почта\n\nСтавка удорожания 15%\n\nСроком на 3 года\n\nСумма финансирования 7 020 000 ₽\n\nЕжемесячный платёж 309 661 ₽\n\nКомментарий\n\nСогласие на обработку  [персональных данных](https://www.investl.ru/upload/iblock/063/77j17jnlutk5mjsev6mjlg33xrb7y25j.pdf)\n\nРасчёты носят ознакомительный характер и не являются офертой\n\n\\\\* \\- обязательное поле\n\nОставить заявку","size_bytes":7246},"attached_assets/content-1743060298524.md":{"content":"![people](https://www.investl.ru/upload/iblock/25d/jymhxnkdyq52titti1zpjw5kwbi5jn4d.png)\n\n# Недвижимость\n\n[Рассчитать лизинг](https://www.investl.ru/services/nedvijimost/#calculationForm)\n\nАванс\n\nот20%\n\nСрок договора\n\nдо5 лет\n\n![icon](https://www.investl.ru/upload/iblock/c65/9cqqqv457mri5kp0fb3ivu6nk5ygyi0l.png)\n\nОформление сделки онлайн, без посещения офиса\n\n![icon](https://www.investl.ru/upload/iblock/3d8/cjkwbdwpnd0a9nhv3x4ftkep4dt3wy9s.png)\n\nЭкспертный консалтинг\n\n![icon](https://www.investl.ru/upload/iblock/f69/186kg48rekvkrw0hqarpoadbvvt7auft.png)\n\nСопровождение клиента на всех этапах сделки\n\n![icon](https://www.investl.ru/upload/iblock/28b/35eaz1ijrfxi9l0znmlsijjxwfnlfa7a.png)\n\nБыстрые сроки рассмотрения\n\nПроизводственная недвижимость\n\n![auto](https://www.investl.ru/upload/iblock/af2/4p7z30sg1ua02f1khonoi3c75z5yhgil.jpg)\n\nКоммерческая недвижимость\n\n![auto](https://www.investl.ru/upload/iblock/636/noxjtw10spnos2p57e1md6wx1sxnw5mr.jpg)\n\n**Мы подберем недвижимость**\n\nпод ваш запрос\n\n[Рассчитать лизинг](https://www.investl.ru/services/nedvijimost/#calculationForm)\n\n- 1\n\n\n\nОставьте заявку\n\n\n\nМы свяжемся с Вами в течение часа\n\n- 2\n\n\n\nСогласуем условия сделки\n\n\n\nИ проверим документы\n\n- 3\n\n\n\nЗаключим договор\n\n\n\nИ передадим Вам имущество в пользование\n\n\n# Вопросы по лизингу недвижимости\n\n- Каков срок принятия решения о предоставлении лизинга на недвижимость?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nСтандартный срок рассмотрения заявки составляет 5 (пять) рабочих дней с момента предоставления Лизингополучателем полного перечня документов. Но, в зависимости от сложности рассматриваемой сделки, данный срок, как правило, увеличивается, и, в основном, зависит от оперативности в предоставлении документов, комментариев клиента, необходимости проведения оценки рыночной стоимости объекта, ряда других существенных факторов.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nМаксимальный срок договора лизинга недвижимости?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nСрок финансирования составляет от 1 года до 5 лет\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nКак приобрести производственный цех на условиях лизинга?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nПроцедура лизинговой сделки одинакова для любого предмета лизинга. На начальном этапе лучше всего связаться с нами удобным для Вас способом (по телефону, электронной почте, обращению через форму запроса на сайте компании либо посетить офис компании).\n\n\nПерсональный менеджер подробно проконсультирует Вас по всем интересующим вопросам, расскажет о действующих программах, поможет определиться с условиями финансирования и произведет расчет лизинговых платежей. Если Вас устроят предлагаемые условия, мы сможем перейти к следующему этапу – сбору документов для рассмотрения Вашей заявки. В случае положительного решения мы подписываем договор, Вы оплачиваете авансовый платеж и получаете имущество в пользование.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nМожно ли взять в лизинг строящееся здание?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nК сожалению, объект незавершенного строительства невозможно приобрести для дальнейшей передачи в лизинг, это не соответствует действующему законодательству.\n\n\n\nВаше имя\n\nЖелаемый срок лизинга, мес\n\n1 год3 лет5 лет\n\nСтоимость имущества, руб\n\n100 000 ₽100 000 000 ₽300 000 000 ₽\n\nТелефон\n\nИНН\n\nАвансовый платёж, %\n\n0%25%49%\n\nЭлектронная почта\n\nСтавка удорожания 15%\n\nСроком на 3 года\n\nСумма финансирования 7 020 000 ₽\n\nЕжемесячный платёж 309 661 ₽\n\nКомментарий\n\nСогласие на обработку  [персональных данных](https://www.investl.ru/upload/iblock/063/77j17jnlutk5mjsev6mjlg33xrb7y25j.pdf)\n\nРасчёты носят ознакомительный характер и не являются офертой\n\n\\\\* \\- обязательное поле\n\nОставить заявку","size_bytes":5618},"attached_assets/content-1743060351759.md":{"content":"![people](https://www.investl.ru/upload/iblock/acd/z3lpk1jtz8k5c4jtju3r941kuw3k2eug.png)\n\n# Оборудование\n\n[Рассчитать лизинг](https://www.investl.ru/services/oborudovanie/#calculationForm)\n\nАванс\n\nот10%\n\nСрок договора\n\nдо5 лет\n\n![icon](https://www.investl.ru/upload/iblock/28b/35eaz1ijrfxi9l0znmlsijjxwfnlfa7a.png)\n\nРешение за один день\n\n![icon](https://www.investl.ru/upload/iblock/c65/9cqqqv457mri5kp0fb3ivu6nk5ygyi0l.png)\n\nОформление сделки онлайн, без посещения офиса\n\n![icon](https://www.investl.ru/upload/iblock/f69/186kg48rekvkrw0hqarpoadbvvt7auft.png)\n\nСопровождение клиента на всех этапах сделки\n\n![icon](https://www.investl.ru/upload/iblock/55e/j0obpla1z44z3zscjlcytnsdfd0p4p2j.png)\n\nСкидки от компаний партнеров и выгодные условия страхования\n\nПроизводственное\n\n![auto](https://www.investl.ru/upload/iblock/34b/gxe8r8t72l5v475nn7xm112f4857q6ib.jpg)\n\nМедицинское\n\n![auto](https://www.investl.ru/upload/iblock/eb9/65r3pgru813qjuprunj9fue07jv4n3kn.jpg)\n\nТорговое\n\n![auto](https://www.investl.ru/upload/iblock/17d/7qm4fa3n09032d9rj0o9qfk6oij5m2to.jpg)\n\nСтроительное\n\n![auto](https://www.investl.ru/upload/iblock/d7c/x2rksraxqmh7zdk08cq2k8jwnc1cnr37.jpg)\n\n**И любое другое**\n\nМы подберем оборудование под Ваш запрос\n\n[Рассчитать лизинг](https://www.investl.ru/services/oborudovanie/#calculationForm)\n\n- 1\n\n\n\nОставьте заявку\n\n\n\nМы свяжемся с Вами в течение часа\n\n- 2\n\n\n\nСогласуем условия сделки\n\n\n\nИ проверим документы\n\n- 3\n\n\n\nЗаключим договор\n\n\n\nИ передадим Вам имущество в пользование\n\n\n# Вопросы по лизингу оборудования\n\n- Можно ли оформить лизинг оборудования без первоначального взноса?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nК сожалению нет. Минимальный размер авансового платежа составляет 10% от стоимости приобретаемого имущества.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nКакой будет минимальная сумма для получения оборудования?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nМинимальная сумма финансирования любого предмета лизинга в нашей компании составляет 2 млн. руб.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nСуществуют ли льготные условия получения в лизинг оборудования для малых предприятий?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nДа, такие программы существуют. Поддержка малого и среднего предпринимательства, а также крупного бизнеса реализована на федеральном и региональном уровнях. Всю актуальную информацию о действующих программах можно будет получить у персонального менеджера при обращении в нашу компанию.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nОбязательно ли страховать оборудование?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nДа, страхование предмета лизинга является обязательным требованием при заключении договора.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nМожно ли давать предмет лизинга в пользование другим людям?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nЛизингополучатель не имеет права передавать Предмет лизинга в сублизинг или в аренду, переуступать свои права и обязанности по Договору лизинга третьим лицам в течение всего срока действия Договора лизинга без письменного согласия Лизингодателя.\n\n\n\nВаше имя\n\nЖелаемый срок лизинга, мес\n\n1 год3 лет5 лет\n\nСтоимость имущества, руб\n\n100 000 ₽100 000 000 ₽300 000 000 ₽\n\nТелефон\n\nИНН\n\nАвансовый платёж, %\n\n0%25%49%\n\nЭлектронная почта\n\nСтавка удорожания 15%\n\nСроком на 3 года\n\nСумма финансирования 7 020 000 ₽\n\nЕжемесячный платёж 309 661 ₽\n\nКомментарий\n\nСогласие на обработку  [персональных данных](https://www.investl.ru/upload/iblock/063/77j17jnlutk5mjsev6mjlg33xrb7y25j.pdf)\n\nРасчёты носят ознакомительный характер и не являются офертой\n\n\\\\* \\- обязательное поле\n\nОставить заявку","size_bytes":5127},"attached_assets/content-1743060354873.md":{"content":"![people](https://www.investl.ru/upload/iblock/078/5bdepr5xrusag6puvx4ka0fvu99jjo30.png)\n\n# Спецтехника\n\n[Рассчитать лизинг](https://www.investl.ru/services/spectechnika/#calculationForm)\n\nАванс\n\nот10%до 49%\n\nСрок договора\n\nот12до 60 мес\n\n![icon](https://www.investl.ru/upload/iblock/28b/35eaz1ijrfxi9l0znmlsijjxwfnlfa7a.png)\n\nРешение за один день\n\n![icon](https://www.investl.ru/upload/iblock/c65/9cqqqv457mri5kp0fb3ivu6nk5ygyi0l.png)\n\nОформление сделки онлайн, без посещения офиса\n\n![icon](https://www.investl.ru/upload/iblock/f69/186kg48rekvkrw0hqarpoadbvvt7auft.png)\n\nСопровождение клиента на всех этапах сделки\n\n![icon](https://www.investl.ru/upload/iblock/55e/j0obpla1z44z3zscjlcytnsdfd0p4p2j.png)\n\nСкидки от компаний партнеров и выгодные условия страхования\n\nДорожно-строительная\n\n![auto](https://www.investl.ru/upload/iblock/eba/yo2qm5pxa04havvmy0pizd6ewrtg7l2v.jpg)\n\nСельскохозяйственная\n\n![auto](https://www.investl.ru/upload/iblock/0cd/xeabpd2914c8xbmk9l5imc94i5kj8hxg.jpg)\n\nКоммунальная\n\n![auto](https://www.investl.ru/upload/iblock/b09/cc1yiqgp1deupd36ob6nwv4djzn7ibyg.jpg)\n\nСкладская\n\n![auto](https://www.investl.ru/upload/iblock/af2/d60j8a9aj0nq001jyfq77nl5kei066fw.jpg)\n\n**И любая другая**\n\nМы подберем технику под Ваш запрос\n\n[Рассчитать лизинг](https://www.investl.ru/services/spectechnika/#calculationForm)\n\n- 1\n\n\n\nОставьте заявку\n\n\n\nМы свяжемся с Вами в течение часа\n\n- 2\n\n\n\nСогласуем условия сделки\n\n\n\nИ проверим документы\n\n- 3\n\n\n\nЗаключим договор\n\n\n\nИ передадим Вам имущество в пользование\n\n\n# Вопросы по лизингу спецтехники\n\n- Что делать если произошел страховой случай?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nВ данной ситуации Вам следует немедленно сообщить в компетентные органы (МЧС, отдел полиции, ГИБДД и др.), страховщику, а также Лизингодателю о наступлении страхового случая и действовать в порядке, указанном в договоре лизинга и правилах страхования.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nМожно ли давать предмет лизинга в пользование другим людям?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nЛизингополучатель не имеет права передавать Предмет лизинга в сублизинг или в аренду, переуступать свои права и обязанности по Договору лизинга третьим лицам в течение всего срока действия Договора лизинга без письменного согласия Лизингодателя.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nОбязательно ли страховать спецтехнику?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nДа, страхование предмета лизинга является обязательным требованием при заключении договора.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nКто осуществляет регистрацию автотранспорта?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nРегистрацию предмета лизинга в региональных подразделениях ГИБДД и Гостехнадзора осуществляет Лизингополучатель. Подробно о данной процедуре и порядке ее прохождения Вас ознакомит персональный менеджер нашей компании.\n\n\n\nВаше имя\n\nЖелаемый срок лизинга, мес\n\n1 год3 лет5 лет\n\nСтоимость имущества, руб\n\n100 000 ₽100 000 000 ₽300 000 000 ₽\n\nТелефон\n\nИНН\n\nАвансовый платёж, %\n\n0%25%49%\n\nЭлектронная почта\n\nСтавка удорожания 15%\n\nСроком на 3 года\n\nСумма финансирования 7 020 000 ₽\n\nЕжемесячный платёж 309 661 ₽\n\nКомментарий\n\nСогласие на обработку  [персональных данных](https://www.investl.ru/upload/iblock/063/77j17jnlutk5mjsev6mjlg33xrb7y25j.pdf)\n\nРасчёты носят ознакомительный характер и не являются офертой\n\n\\\\* \\- обязательное поле\n\nОставить заявку","size_bytes":4853},"attached_assets/content-1743070466480.md":{"content":"- Автотранспорт\n- Оборудование\n\n- - ![Логотип ООО «РБА-Челябинск»](https://www.investl.ru/upload/iblock/23b/32f48sisfs82qma8o03wuy3ryxc83ow1.png)[Переход на страницу ООО «РБА-Челябинск»](http://www.rbauto.ru/ \"Переход на страницу ООО «РБА-Челябинск»\")\n- ![Логотип ОАО «ЧКПЗ»](https://www.investl.ru/upload/iblock/7d0/gjrqudrjzha22z7tuapvejnd9l3kox57.jpg)[Переход на страницу ОАО «ЧКПЗ»](https://www.chkpz.ru/catalog/cat7/ \"Переход на страницу ОАО «ЧКПЗ»\")\n- ![Логотип ЗАО «Интертранссервис»](https://www.investl.ru/upload/iblock/bda/wcjh3umlcqg90bkxo341yp7lt7qys2dm.png)[Переход на страницу ЗАО «Интертранссервис»](http://intertransservice.ru/ \"Переход на страницу ЗАО «Интертранссервис»\")\n\n- ![Логотип ООО ТСК «УралПромИнвест»](https://www.investl.ru/upload/iblock/55b/3vfrdbcxfrniafgaa0zfmyuwz8ph1z72.png)[Переход на страницу ООО ТСК «УралПромИнвест»](http://www.ural-beton.ru/ \"Переход на страницу ООО ТСК «УралПромИнвест»\")\n- ![Логотип ООО «Гирд-Автофургон»](https://www.investl.ru/upload/iblock/4c2/s3n9ouhdpcm4qkjy1ritytzaz8upv0cl.png)[Переход на страницу ООО «Гирд-Автофургон»](http://gird.ru/ \"Переход на страницу ООО «Гирд-Автофургон»\")\n- ![Логотип ООО «Акцент-Авто М»](https://www.investl.ru/upload/iblock/5fc/pya3593mfqlhzeprawjqvyofmlnolwok.png)[Переход на страницу ООО «Акцент-Авто М»](https://avtovek.lada.ru/ \"Переход на страницу ООО «Акцент-Авто М»\")\n\n- ![Логотип Группа компаний «Грузовая Техника»](https://www.investl.ru/upload/iblock/18b/25112p55d4965w2q4z34umj6qt6xk1zc.png)[Переход на страницу Группа компаний «Грузовая Техника»](http://gruz-tehnika.ru/ \"Переход на страницу Группа компаний «Грузовая Техника»\")\n- ![Логотип ООО «Спецмаш»](https://www.investl.ru/upload/iblock/9cc/wssn48kfxwv68o0k43r4wopljbd1wiri.png)[Переход на страницу ООО «Спецмаш»](http://autospecmash.ru/ \"Переход на страницу ООО «Спецмаш»\")\n- ![Логотип ЛБР-Агромаркет](https://www.investl.ru/upload/iblock/2c6/40ctwrfq8u52v3j3cafhdl802s1vkax6.png)[Переход на страницу ЛБР-Агромаркет](http://www.lbr.ru/ \"Переход на страницу ЛБР-Агромаркет\")\n\n- ![Логотип ООО ПКФ «Политранс»](https://www.investl.ru/upload/iblock/0b4/z4uaf7mlwnx4xy6bymg7h9xsuwvfef62.png)[Переход на страницу ООО ПКФ «Политранс»](http://www.politrans.ru/ \"Переход на страницу ООО ПКФ «Политранс»\")\n- ![Логотип ООО «Русь-Агро»](https://www.investl.ru/upload/iblock/ac9/822884uk7fv8mrhnay5g3k4ws8smuqiv.png)[Переход на страницу ООО «Русь-Агро»](http://www.rusagro74.ru/ \"Переход на страницу ООО «Русь-Агро»\")\n- ![Логотип ЛУИДОР](https://www.investl.ru/upload/iblock/1dd/2chdrspgybc05mnt0iyg088e5stdtayw.png)[Переход на страницу ЛУИДОР](http://luidor-chel.ru/ \"Переход на страницу ЛУИДОР\")\n\n- ![Логотип ООО «Южуралпогрузчик»](https://www.investl.ru/upload/iblock/977/ts686ab2ys981t8wo24nq0juq6b4sbgu.png)[Переход на страницу ООО «Южуралпогрузчик»](http://uralforklift.ru/ \"Переход на страницу ООО «Южуралпогрузчик»\")\n- ![Логотип ООО «ТехВосток»](https://www.investl.ru/upload/iblock/fb1/ls05oh0ns2m8inpesuh4ohe9t0a4htqr.png)[Переход на страницу ООО «ТехВосток»](http://lgmg-mt.ru/ \"Переход на страницу ООО «ТехВосток»\")\n- ![Логотип «Грузовики и Спецтехника»](https://www.investl.ru/upload/iblock/eed/hqcue1bt914jot3hyj08510rfnxrmc3p.png)[Переход на страницу «Грузовики и Спецтехника»](https://tdgis.ru/ \"Переход на страницу «Грузовики и Спецтехника»\")\n\n- ![Логотип Тюменский завод мобильных зданий](https://www.investl.ru/upload/iblock/f7d/nyrm1mrahpwpoudch28xpc125hwrjthc.png)[Переход на страницу Тюменский завод мобильных зданий](https://toir.ru/ \"Переход на страницу Тюменский завод мобильных зданий\")\n- ![Логотип ИнтехКранСервис](https://www.investl.ru/upload/iblock/094/kcok0h93ulbnnfwl3c3j8e1sv515w56l.png)[Переход на страницу ИнтехКранСервис](http://intexkran.ru/ \"Переход на страницу ИнтехКранСервис\")\n\n- - ![Логотип Компания nanxing](https://www.investl.ru/upload/iblock/629/2jwteli6km3enszslcn40z4gfchklreb.png)[Переход на страницу Компания nanxing](http://nanxing.ru/ \"Переход на страницу Компания nanxing\")\n- ![Логотип Корпорация DMTG](https://www.investl.ru/upload/iblock/303/cn1y6esmtwpf1tyorkobyq401knpbykw.png)[Переход на страницу Корпорация DMTG](http://dmtg-stanki.ru/ \"Переход на страницу Корпорация DMTG\")\n- ![Логотип КМТ](https://www.investl.ru/upload/iblock/0e8/w0kg81sbwuv2ur2sz8tmlpxsyjcrwt8a.png)[Переход на страницу КМТ](http://kmt-stanki.ru/ \"Переход на страницу КМТ\")\n\n- ![Логотип Мир станков](https://www.investl.ru/upload/iblock/493/0rxbgzefx84r3vv11sm3m9rjdcvj7bhf.png)[Переход на страницу Мир станков](http://mir-stankov.ru/ \"Переход на страницу Мир станков\")\n- ![Логотип КАМИ](https://www.investl.ru/upload/iblock/327/i9sw1uuet29lf0zccs5l0d411pmprtca.png)[Переход на страницу КАМИ](http://stanki.ru/ \"Переход на страницу КАМИ\")\n- ![Логотип ООО «Афалина Челябинск»](https://www.investl.ru/upload/iblock/441/68b5kbccr1h79rr3br1rtiz8trfztvwi.png)[Переход на страницу ООО «Афалина Челябинск»](http://afalina.com/ \"Переход на страницу ООО «Афалина Челябинск»\")\n\n- ![Логотип ООО «Генерационное оборудование»](https://www.investl.ru/upload/iblock/a1b/0bmusjuoh7mee387ez8eai64nc8ds5et.jpg)[Переход на страницу ООО «Генерационное оборудование»](http://qlaster.ru/ \"Переход на страницу ООО «Генерационное оборудование»\")\n- ![Логотип ЗАЩ «Газовик-ПРО»](https://www.investl.ru/upload/iblock/6b6/0t13a4d15mr5ddlxghr4170t4h7pyedu.jpg)[Переход на страницу ЗАЩ «Газовик-ПРО»](http://gazovik-pro.ru/ \"Переход на страницу ЗАЩ «Газовик-ПРО»\")\n- ![Логотип ООО «Энергия пара»](https://www.investl.ru/upload/iblock/707/bhv9rwjh02qwsics4lztym4zko01af6u.png)[Переход на страницу ООО «Энергия пара»](http://www.par-ma.ru/ \"Переход на страницу ООО «Энергия пара»\")\n\n- ![Логотип ООО «Солдрим-СПб»](https://www.investl.ru/upload/iblock/d4a/2bb8w8nxmmhoxhg107n1cpsvys6vuq5d.png)[Переход на страницу ООО «Солдрим-СПб»](http://soldream-spb.com/ \"Переход на страницу ООО «Солдрим-СПб»\")\n- ![Логотип ООО «МонолитЦентр»](https://www.investl.ru/upload/iblock/594/00rinyiyyj7eor3pehu3pegbzfz68g3c.jpg)[Переход на страницу ООО «МонолитЦентр»](http://www.monolitural.ru/ \"Переход на страницу ООО «МонолитЦентр»\")\n- ![Логотип ООО «Аланта»](https://www.investl.ru/upload/iblock/f20/6xln1s86w7jvwo23oyrnh5cwsnbcejk6.png)[Переход на страницу ООО «Аланта»](http://www.alanta.ru/ \"Переход на страницу ООО «Аланта»\")\n\n- ![Логотип ООО «Челябкомпрессор»](https://www.investl.ru/upload/iblock/236/recvzc8caff9fsusvyxb2nr7hs9yg7o2.jpg)[Переход на страницу ООО «Челябкомпрессор»](http://www.kompressorov.ru/ \"Переход на страницу ООО «Челябкомпрессор»\")\n- ![Логотип ООО «Торгово Промышленный Альянс»](https://www.investl.ru/upload/iblock/2d1/nuy1583hhvxfmpq8p5t9d5527zu5hok2.jpg)[Переход на страницу ООО «Торгово Промышленный Альянс»](http://www.rosalliance.ru/ \"Переход на страницу ООО «Торгово Промышленный Альянс»\")\n- ![Логотип РусАвтоматизация](https://www.investl.ru/upload/iblock/c9b/gaoj734tnwvp3q32i4slbw71403kbs71.jpg)[Переход на страницу РусАвтоматизация](http://rusautomation.ru/ \"Переход на страницу РусАвтоматизация\")\n\n- ![Логотип ООО «РОКТЭС»](https://www.investl.ru/upload/iblock/64b/wo9vbesrk604zr2s1ift0804wc4bds6c.jpg)[Переход на страницу ООО «РОКТЭС»](http://www.roktes.ru/ \"Переход на страницу ООО «РОКТЭС»\")\n- ![Логотип ООО «Уралпромтехника»](https://www.investl.ru/upload/iblock/5eb/k26woguq169ugnrlmub9l774adhnt2yb.png)[Переход на страницу ООО «Уралпромтехника»](http://www.uralpromteh.ru/ \"Переход на страницу ООО «Уралпромтехника»\")\n- ![Логотип Завод «Стройтехника»](https://www.investl.ru/upload/iblock/453/s2bccalp5i08jkvxf1b3rtzusou0qctj.png)[Переход на страницу Завод «Стройтехника»](http://stroytec.ru/ \"Переход на страницу Завод «Стройтехника»\")\n\n- ![Логотип ООО «Сталь-Максимум»](https://www.investl.ru/upload/iblock/a8a/c9s1welh6ywry8g0rpml3y3f8ojunksf.png)[Переход на страницу ООО «Сталь-Максимум»](http://stalmaximum.ru/ \"Переход на страницу ООО «Сталь-Максимум»\")\n- ![Логотип ООО «Лазер Мастер»](https://www.investl.ru/upload/iblock/893/adrjb5qgd2ua1xysmme60772t1ifpipt.png)[Переход на страницу ООО «Лазер Мастер»](https://lazermaster.ru/ \"Переход на страницу ООО «Лазер Мастер»\")\n- ![Логотип ООО  «АМПЛИТУДА»](https://www.investl.ru/upload/iblock/74d/dcngf5io4hbvmq4p4wobc0uclokvsiqv.png)[Переход на страницу ООО  «АМПЛИТУДА»](https://eapack.ru/ \"Переход на страницу ООО  «АМПЛИТУДА»\")\n\n- ![Логотип Ledel](https://www.investl.ru/upload/iblock/b05/5bit1yxw1m3o5b3esz4lnu6anusma0lh.png)[Переход на страницу Ledel](http://ledel.ru/ \"Переход на страницу Ledel\")\n- ![Логотип ООО «НПК Групп»](https://www.investl.ru/upload/iblock/674/o0ilyoc9aiooah7cxz327wfktbft8vz1.png)[Переход на страницу ООО «НПК Групп»](https://prkom.ru/ \"Переход на страницу ООО «НПК Групп»\")\n- ![Логотип АО «Сибшванк»](https://www.investl.ru/upload/iblock/1e1/7uxeluv4rh1bbnmdifbgsqzk3flkiul6.png)[Переход на страницу АО «Сибшванк»](https://www.schwank.ru/ \"Переход на страницу АО «Сибшванк»\")\n\n- ![Логотип ООО «Энергостан»](https://www.investl.ru/upload/iblock/41b/mo0x0pdyud0atw70150aljstnypl2zvy.png)[Переход на страницу ООО «Энергостан»](https://www.energostan.ru/ \"Переход на страницу ООО «Энергостан»\")\n- ![Логотип L-CON](https://www.investl.ru/upload/iblock/344/4l4pqh1om2x9surfc4hkilmxgsko9pvw.png)[Переход на страницу L-CON](https://l-con.ru/ \"Переход на страницу L-CON\")\n- ![Логотип ЭЛКОН](https://www.investl.ru/upload/iblock/ae9/8gwq02nc5nklk62ttzwl7u4ucn2g57r1.png)[Переход на страницу ЭЛКОН](https://www.elkon.ru/ \"Переход на страницу ЭЛКОН\")\n\n- ![Логотип Группа компаний БРИЗ](https://www.investl.ru/upload/iblock/04a/zadp7pe2w7p3kemua9oa2b81ke1xyyc1.png)[Переход на страницу Группа компаний БРИЗ](https://www.brise-group.ru/ \"Переход на страницу Группа компаний БРИЗ\")\n- ![Логотип «Завод Стройтехника» РИФЕЙ](https://www.investl.ru/upload/iblock/3b1/wjddv6k2n5jmm92vh5navbwr3unmz3ow.png)[Переход на страницу «Завод Стройтехника» РИФЕЙ](https://stroytec.ru/ \"Переход на страницу «Завод Стройтехника» РИФЕЙ\")\n- ![Логотип Завод «РИР-Стандарт»](https://www.investl.ru/upload/iblock/1ee/1waupi2efdst5jiy9xe3foqeu6m57ys8.png)[Переход на страницу Завод «РИР-Стандарт»](https://rir-standart.ru/ \"Переход на страницу Завод «РИР-Стандарт»\")\n\n- 1\n\n\n\nОставьте заявку\n\n\n\nМы свяжемся с Вами в течение часа\n\n- 2\n\n\n\nСогласуем условия сделки\n\n\n\nИ проверим документы\n\n- 3\n\n\n\nЗаключим договор\n\n\n\nИ передадим Вам имущество в пользование\n\n\nВаше имя\n\nЖелаемый срок лизинга, мес\n\n1 год3 лет5 лет\n\nСтоимость имущества, руб\n\n100 000 ₽100 000 000 ₽300 000 000 ₽\n\nТелефон\n\nИНН\n\nАвансовый платёж, %\n\n0%25%49%\n\nЭлектронная почта\n\nСтавка удорожания 15%\n\nСроком на 3 года\n\nСумма финансирования 7 020 000 ₽\n\nЕжемесячный платёж 309 661 ₽\n\nКомментарий\n\nСогласие на обработку  [персональных данных](https://www.investl.ru/upload/iblock/063/77j17jnlutk5mjsev6mjlg33xrb7y25j.pdf)\n\nРасчёты носят ознакомительный характер и не являются офертой\n\n\\\\* \\- обязательное поле\n\nОставить заявку","size_bytes":15372},"attached_assets/content-1743488979964.md":{"content":"","size_bytes":0},"attached_assets/content-1743489094670.md":{"content":"","size_bytes":0},"attached_assets/content-1743489186615.md":{"content":"## Разделы\n\n- Актуальные объявления\n\n- Комплект оборудования для кафе, ресторанов\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOбoрудованиe нахoдится по aдpеcу: г. Tюмeнь, ул. Щербаковa, 117 склaд.\n\n\nКoмплект оборудовaния, 2022 г. в., б/у.\n\n\n\n\n\n###### [2 360 385 ₽](http://www.avito.ru/tyumen/oborudovanie_dlya_biznesa/komplekt_oborudovaniya_dlya_kafe_restoranov_4181529560)\n\n\n\n###### [![1.jpg](https://www.investl.ru/upload/medialibrary/52f/xel8l648fo7vymej8sg5ln5zhs1r3rn4.jpg)](https://www.avito.ru/tyumen/oborudovanie_dlya_biznesa/komplekt_oborudovaniya_dlya_kafe_restoranov_4181529560)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nКомплект фасовочно-упаковочной модели Базис\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nКомплекс фаcовoчно-упаковочной мoдeли БАЗИC включает в себя:\n\n\n\n\n\n- Конвейер ленточный отвoдящий;\n- Конвeйeр лeнтoчный, укладчик с устaновкой шибeрнoй;\n- Машинa упаковoчная Базис 50 (AРУК50);\n- Клеевая станция интегрированная;\n- Принтер каплеструйный.\n\n###### [6 380 200 ₽](http://www.avito.ru/chelyabinsk/oborudovanie_dlya_biznesa/komplekt_fasovochnoupakovochnyy_modeli_bazis_4404969092)\n\n[![](https://www.investl.ru/upload/medialibrary/71c/tx5nnzhoft8wv7uho3prq9vzhfjrwxvp.jpg)](https://www.avito.ru/chelyabinsk/oborudovanie_dlya_biznesa/komplekt_fasovochnoupakovochnyy_modeli_bazis_4404969092)\n\nВаше имя\n\nЖелаемый срок лизинга, мес\n\n1 год3 лет5 лет\n\nСтоимость имущества, руб\n\n100 000 ₽100 000 000 ₽300 000 000 ₽\n\nТелефон\n\nИНН\n\nАвансовый платёж, %\n\n0%25%49%\n\nЭлектронная почта\n\nСтавка удорожания 15%\n\nСроком на 3 года\n\nСумма финансирования 7 020 000 ₽\n\nЕжемесячный платёж 309 661 ₽\n\nКомментарий\n\nСогласие на обработку  [персональных данных](https://www.investl.ru/upload/iblock/063/77j17jnlutk5mjsev6mjlg33xrb7y25j.pdf)\n\nРасчёты носят ознакомительный характер и не являются офертой\n\n\\\\* \\- обязательное поле\n\nОставить заявку","size_bytes":2423},"attached_assets/content-1743489301626.md":{"content":"","size_bytes":0},"css/style.css":{"content":"/* General styles */\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: Arial, sans-serif;\n    line-height: 1.6;\n    color: #333;\n}\n\n.container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 0 15px;\n}\n\na {\n    text-decoration: none;\n    color: #333;\n}\n\nul {\n    list-style: none;\n}\n\n/* Header styles */\n.header {\n    padding: 20px 0;\n    background-color: #f8f8f8;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n.header__inner {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.logo {\n    font-size: 24px;\n    font-weight: bold;\n}\n\n.menu__list {\n    display: flex;\n}\n\n.menu__item {\n    margin-left: 30px;\n}\n\n.menu__link {\n    transition: color 0.3s;\n}\n\n.menu__link:hover,\n.menu__link.active {\n    color: #4285f4;\n}\n\n/* Main styles */\n.main {\n    padding: 50px 0;\n}\n\n/* Contacts section */\n.contacts__title {\n    margin-bottom: 30px;\n    text-align: center;\n}\n\n.contacts__content {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 30px;\n}\n\n.contacts__info {\n    flex: 1;\n    min-width: 300px;\n}\n\n.contacts__item {\n    margin-bottom: 25px;\n}\n\n.contacts__item-title {\n    margin-bottom: 10px;\n    font-size: 18px;\n    font-weight: bold;\n}\n\n.contacts__item-text {\n    margin-bottom: 5px;\n}\n\n/* Map container - FIXED STYLING */\n.contacts__map-container {\n    flex: 2;\n    min-width: 300px;\n    /* Set specific dimensions and ensure correct containment */\n    height: 450px;\n    position: relative;\n    overflow: hidden; /* Prevent map from overflowing */\n    border-radius: 8px;\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n}\n\n.contacts__map {\n    /* Make the map fill the entire container properly */\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100% !important; /* !important to override any inline styles from Google Maps */\n    height: 100% !important;\n    border: none;\n}\n\n/* Footer styles */\n.footer {\n    padding: 40px 0;\n    background-color: #f8f8f8;\n    border-top: 1px solid #e7e7e7;\n}\n\n.footer__inner {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    gap: 30px;\n}\n\n.footer__info {\n    flex: 1;\n    min-width: 250px;\n}\n\n.footer__logo {\n    display: inline-block;\n    margin-bottom: 15px;\n}\n\n.footer__nav {\n    flex: 1;\n    min-width: 250px;\n}\n\n.footer__menu-item {\n    margin-bottom: 10px;\n}\n\n.footer__menu-link {\n    transition: color 0.3s;\n}\n\n.footer__menu-link:hover {\n    color: #4285f4;\n}\n\n/* Responsive styles */\n@media (max-width: 768px) {\n    .contacts__content {\n        flex-direction: column;\n    }\n    \n    .contacts__map-container {\n        /* Adjust height for smaller screens but maintain proportions */\n        height: 350px;\n        width: 100%;\n    }\n}\n\n@media (max-width: 576px) {\n    .header__inner {\n        flex-direction: column;\n        text-align: center;\n    }\n    \n    .menu__list {\n        margin-top: 20px;\n        justify-content: center;\n    }\n    \n    .menu__item {\n        margin: 0 10px;\n    }\n    \n    .contacts__map-container {\n        /* Further reduce height for mobile */\n        height: 300px;\n    }\n}\n","size_bytes":3084},"js/map.js":{"content":"// Initialize the map\nfunction initMap() {\n    // Default coordinates (can be adjusted to actual location)\n    const coordinates = { lat: 55.7558, lng: 37.6173 }; // Moscow coordinates\n\n    // Create map options with proper zoom level and controls\n    const mapOptions = {\n        zoom: 14,\n        center: coordinates,\n        mapTypeControl: true,\n        streetViewControl: false,\n        fullscreenControl: false,\n        zoomControl: true,\n        scrollwheel: false, // Prevents accidental zooming when scrolling the page\n    };\n\n    // Create the map\n    const map = new google.maps.Map(document.getElementById('map'), mapOptions);\n\n    // Add a marker at the specified location\n    const marker = new google.maps.Marker({\n        position: coordinates,\n        map: map,\n        title: 'Наш офис'\n    });\n\n    // Make sure the map properly fills its container on window resize\n    google.maps.event.addDomListener(window, 'resize', function() {\n        const center = map.getCenter();\n        google.maps.event.trigger(map, 'resize');\n        map.setCenter(center);\n    });\n\n    // Fix for the map sometimes not displaying properly on page load\n    setTimeout(function() {\n        google.maps.event.trigger(map, 'resize');\n        map.setCenter(coordinates);\n    }, 500);\n}\n\n// Handle map initialization errors\nfunction handleMapError() {\n    const mapContainer = document.getElementById('map');\n    if (mapContainer) {\n        mapContainer.innerHTML = '<div style=\"text-align: center; padding: 20px;\">Не удалось загрузить карту. Пожалуйста, проверьте подключение к интернету или обновите страницу.</div>';\n    }\n}\n\n// Execute when the window loads\nwindow.onload = function() {\n    // Check if Google Maps API loaded successfully\n    if (typeof google === 'undefined') {\n        handleMapError();\n    }\n    \n    // Ensure map container is properly sized\n    const mapContainer = document.querySelector('.contacts__map-container');\n    if (mapContainer) {\n        // Make sure container has explicit dimensions\n        if (!mapContainer.style.height) {\n            mapContainer.style.height = '450px';\n        }\n    }\n};\n","size_bytes":2217},"server/auth.ts":{"content":"import passport from \"passport\";\nimport { Strategy as LocalStrategy } from \"passport-local\";\nimport { Express } from \"express\";\nimport session from \"express-session\";\nimport { scrypt, randomBytes, timingSafeEqual } from \"crypto\";\nimport { promisify } from \"util\";\nimport { storage } from \"./storage\";\nimport { User as SelectUser, loginSchema, registrationSchema, changePasswordSchema } from \"@shared/schema\";\nimport { ZodError } from \"zod\";\nimport { fromZodError } from \"zod-validation-error\";\nimport { validateEmailInnMatch } from \"./ftp\";\n\ndeclare global {\n  namespace Express {\n    interface User extends SelectUser {}\n  }\n}\n\nconst scryptAsync = promisify(scrypt);\n\nasync function hashPassword(password: string) {\n  const salt = randomBytes(16).toString(\"hex\");\n  const buf = (await scryptAsync(password, salt, 64)) as Buffer;\n  return `${buf.toString(\"hex\")}.${salt}`;\n}\n\nasync function comparePasswords(supplied: string, stored: string) {\n  const [hashed, salt] = stored.split(\".\");\n  const hashedBuf = Buffer.from(hashed, \"hex\");\n  const suppliedBuf = (await scryptAsync(supplied, salt, 64)) as Buffer;\n  return timingSafeEqual(hashedBuf, suppliedBuf);\n}\n\nexport function setupAuth(app: Express) {\n  const sessionSecret = process.env.SESSION_SECRET || \"investl-secret-123456\";\n\n  const sessionSettings: session.SessionOptions = {\n    secret: sessionSecret,\n    resave: false,\n    saveUninitialized: false,\n    store: storage.sessionStore,\n    cookie: {\n      secure: app.get(\"env\") === \"production\",\n      httpOnly: true,\n      maxAge: 24 * 60 * 60 * 1000 // 24 hours\n    }\n  };\n\n  app.set(\"trust proxy\", 1);\n  app.use(session(sessionSettings));\n  app.use(passport.initialize());\n  app.use(passport.session());\n\n  passport.use(\n    new LocalStrategy(\n      {\n        usernameField: \"email\",\n        passwordField: \"password\"\n      },\n      async (email, password, done) => {\n        try {\n          const user = await storage.getUserByEmail(email);\n          if (!user || !(await comparePasswords(password, user.password))) {\n            return done(null, false);\n          } else {\n            return done(null, user);\n          }\n        } catch (error) {\n          return done(error);\n        }\n      }\n    )\n  );\n\n  passport.serializeUser((user, done) => done(null, user.id));\n\n  passport.deserializeUser(async (id: number, done) => {\n    try {\n      const user = await storage.getUser(id);\n      done(null, user);\n    } catch (error) {\n      done(error);\n    }\n  });\n\n  // Register user\n  app.post(\"/api/register\", async (req, res, next) => {\n    try {\n      // Validate registration data\n      const validatedData = registrationSchema.parse(req.body);\n\n      // Check if user exists\n      const existingUserByEmail = await storage.getUserByEmail(validatedData.email);\n      if (existingUserByEmail) {\n        return res.status(400).json({ message: \"Пользователь с таким email уже существует\" });\n      }\n\n      const existingUserByInn = await storage.getUserByInn(validatedData.inn);\n      if (existingUserByInn) {\n        return res.status(400).json({ message: \"Пользователь с таким ИНН уже существует\" });\n      }\n\n      // Validate email and INN match in customers.xml\n      const validationResult = await validateEmailInnMatch(validatedData.email, validatedData.inn);\n      if (!validationResult.isValid) {\n        return res.status(400).json({ message: validationResult.message });\n      }\n\n      // Create username from email\n      const username = validatedData.email.split('@')[0];\n\n      // Create user\n      const user = await storage.createUser({\n        username,\n        email: validatedData.email,\n        inn: validatedData.inn,\n        password: await hashPassword(validatedData.password),\n      });\n\n      // Log in the user\n      req.login(user, (err) => {\n        if (err) return next(err);\n        // Don't send password in response\n        const { password, ...userWithoutPassword } = user;\n        res.status(201).json(userWithoutPassword);\n      });\n    } catch (error) {\n      if (error instanceof ZodError) {\n        const validationError = fromZodError(error);\n        return res.status(400).json({ \n          message: \"Ошибка валидации\", \n          errors: validationError.details \n        });\n      }\n      next(error);\n    }\n  });\n\n  // Login\n  app.post(\"/api/login\", (req, res, next) => {\n    try {\n      // Validate login data\n      loginSchema.parse(req.body);\n\n      passport.authenticate(\"local\", (err, user, info) => {\n        if (err) return next(err);\n        if (!user) {\n          return res.status(401).json({ message: \"Неверный email или пароль\" });\n        }\n\n        req.login(user, (err) => {\n          if (err) return next(err);\n          // Don't send password in response\n          const { password, ...userWithoutPassword } = user;\n          return res.json(userWithoutPassword);\n        });\n      })(req, res, next);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        const validationError = fromZodError(error);\n        return res.status(400).json({ \n          message: \"Ошибка валидации\", \n          errors: validationError.details \n        });\n      }\n      next(error);\n    }\n  });\n\n  // Logout\n  app.post(\"/api/logout\", (req, res, next) => {\n    req.logout((err) => {\n      if (err) return next(err);\n      res.sendStatus(200);\n    });\n  });\n\n  // Get current user\n  app.get(\"/api/user\", (req, res) => {\n    if (!req.isAuthenticated()) return res.sendStatus(401);\n    // Don't send password in response\n    const { password, ...userWithoutPassword } = req.user;\n    res.json(userWithoutPassword);\n  });\n\n  // Reset password request\n  app.post(\"/api/reset-password\", async (req, res) => {\n    const { email } = req.body;\n\n    const user = await storage.getUserByEmail(email);\n    if (!user) {\n      // Still return success to prevent email enumeration\n      return res.json({ success: true, message: \"Если email зарегистрирован, на него отправлены инструкции\" });\n    }\n\n    // In a real implementation, we would:\n    // 1. Generate a token\n    // 2. Save it to a database with an expiration\n    // 3. Send an email with a reset link\n\n    // For this implementation, just return success\n    res.json({ success: true, message: \"Если email зарегистрирован, на него отправлены инструкции\" });\n  });\n\n  // Change password (authenticated)\n  app.post(\"/api/change-password\", async (req, res, next) => {\n    if (!req.isAuthenticated()) {\n      return res.status(401).json({ message: \"Unauthorized\" });\n    }\n\n    try {\n      const validatedData = changePasswordSchema.parse(req.body);\n\n      const user = await storage.getUser(req.user.id);\n      if (!user) {\n        return res.status(404).json({ message: \"User not found\" });\n      }\n\n      const isValidPassword = await comparePasswords(validatedData.currentPassword, user.password);\n      if (!isValidPassword) {\n        return res.status(400).json({ message: \"Неверный текущий пароль\" });\n      }\n\n      // Update user password\n      user.password = await hashPassword(validatedData.newPassword);\n\n      res.json({ success: true, message: \"Пароль успешно изменен\" });\n    } catch (error) {\n      if (error instanceof ZodError) {\n        const validationError = fromZodError(error);\n        return res.status(400).json({ \n          message: \"Ошибка валидации\", \n          errors: validationError.details \n        });\n      }\n      next(error);\n    }\n  });\n}","size_bytes":7645},"server/db.ts":{"content":"import { drizzle } from \"drizzle-orm/neon-serverless\";\nimport { neon } from \"@neondatabase/serverless\";\nimport * as schema from \"../shared/schema\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL is not set\");\n}\n\n// Initialize Neon client\nconst sql = neon(process.env.DATABASE_URL);\n\n// Export the database connection with our schema\nexport const db = drizzle(sql, { schema });\n","size_bytes":396},"server/ftp.ts":{"content":"import { Client } from \"basic-ftp\";\nimport path from \"path\";\nimport fs from \"fs/promises\";\nimport { storage } from \"./storage\";\nimport { InsertContract, InsertAct, InsertInvoice, InsertOtherDocument, InsertPaymentSchedule } from \"@shared/schema\";\nimport { parseStringPromise } from \"xml2js\";\n\n// FTP Configuration\nconst FTP_HOST = \"95.213.131.52\";\nconst FTP_USER = \"investl_ftp\";\nconst FTP_PASSWORD = \"S2i5R9w8\";\nconst FTP_PORT = 21;\n\n// Local paths for document storage\nconst BASE_DOWNLOAD_PATH = path.join(process.cwd(), \"uploads\");\n\n// Ensure upload directories exist\nasync function ensureDirectories() {\n  const dirs = [\n    BASE_DOWNLOAD_PATH,\n    path.join(BASE_DOWNLOAD_PATH, \"contracts\"),\n    path.join(BASE_DOWNLOAD_PATH, \"acts\"),\n    path.join(BASE_DOWNLOAD_PATH, \"invoices\"),\n    path.join(BASE_DOWNLOAD_PATH, \"others\"),\n  ];\n\n  for (const dir of dirs) {\n    try {\n      await fs.mkdir(dir, { recursive: true });\n      console.log(`Created directory: ${dir}`);\n    } catch (error) {\n      console.log(`Directory ${dir} already exists or couldn't be created:`, error);\n    }\n  }\n}\n\n// Function to connect to FTP server\nasync function connectToFTP(): Promise<Client> {\n  const client = new Client();\n  client.ftp.verbose = process.env.NODE_ENV !== \"production\";\n\n  try {\n    await client.access({\n      host: FTP_HOST,\n      user: FTP_USER,\n      password: FTP_PASSWORD,\n      port: FTP_PORT,\n      secure: false\n    });\n\n    console.log(\"Successfully connected to FTP server\");\n    return client;\n  } catch (error) {\n    console.error(\"Failed to connect to FTP server:\", error);\n    client.close();\n    throw new Error(`Failed to connect to FTP server: ${(error as Error).message}`);\n  }\n}\n\n// Function to get user INN and email\nasync function getUserData(userId: number): Promise<{inn: string | null, email: string | null}> {\n  const user = await storage.getUser(userId);\n  return {\n    inn: user?.inn || null,\n    email: user?.email || null\n  };\n}\n\n// Function to categorize documents based on filename and folder name\nfunction categorizeDocument(fileName: string, folderName?: string): 'contract' | 'act' | 'invoice' | 'other' {\n  const lowerFileName = fileName.toLowerCase();\n  const lowerFolderName = folderName?.toLowerCase() || '';\n\n  // Check folder name first for more accurate categorization\n  if (lowerFolderName.includes('akt') || lowerFolderName.includes('акт')) {\n    return 'act';\n  } else if (lowerFolderName.includes('dogovor') || lowerFolderName.includes('договор') || lowerFolderName.includes('dopsoglashenie')) {\n    return 'contract';\n  } else if (lowerFolderName.includes('schet') || lowerFolderName.includes('счет') || lowerFolderName.includes('счёт')) {\n    return 'invoice';\n  }\n\n  // Fallback to filename check\n  if (lowerFileName.includes('договор') || lowerFileName.includes('contract') || lowerFileName.includes('dopsoglashenie')) {\n    return 'contract';\n  } else if (lowerFileName.includes('акт') || lowerFileName.includes('act') || lowerFileName.includes('akt')) {\n    return 'act';\n  } else if (lowerFileName.includes('счет') || lowerFileName.includes('invoice') || lowerFileName.includes('счёт') || lowerFileName.includes('schet')) {\n    return 'invoice';\n  }\n\n  return 'other';\n}\n\n// Function to extract contract number from path\nfunction extractContractNumber(folderPath: string): string {\n  const parts = folderPath.split('/');\n  return parts[parts.length - 1] || 'unknown';\n}\n\n// Function to get proper document display name\nfunction getDocumentDisplayName(folderName: string, fileName: string): string {\n  const lowerFolderName = folderName.toLowerCase();\n  const lowerFileName = fileName.toLowerCase();\n\n  // Check folder name patterns first\n  if (lowerFolderName === 'akt_priema_peredachi_lizinga') {\n    return 'АПП лизинга';\n  } else if (lowerFolderName === 'akt_priema_peredachi_postavki') {\n    return 'АПП поставки';\n  } else if (lowerFolderName === 'akt_vypolnenyh_rabot') {\n    return 'Акт работ';\n  } else if (lowerFolderName === 'akt') {\n    // Changed from 'Акт' to '№ Договора' as per user request for 'Акты' page.\n    // However, this function is general. The actual change for the \"Акты\" page will be in the data preparation for display.\n    return '№ Договора';\n  } else if (lowerFolderName === 'dogovor_lizinga') {\n    return 'Договор лизинга';\n  } else if (lowerFolderName === 'dogovor_poruchitelstva') {\n    return 'Договор поручительства';\n  } else if (lowerFolderName === 'dogovor_postavki') {\n    return 'Договор поставки';\n  } else if (lowerFolderName === 'dogovor_zaloga') {\n    return 'Договор залога';\n  } else if (lowerFolderName === 'strahovoy_polis') {\n    return 'Полис';\n  } else if (lowerFolderName === 'schet_faktura') {\n    return 'Счёт фактура';\n  } else if (lowerFolderName === 'schet_na_oplatu') {\n    return 'Счёт на оплату';\n  }\n\n  // Check for numbered documents\n  const dopsoglashenieMatch = lowerFolderName.match(/dopsoglashenie_(\\d+)/);\n  if (dopsoglashenieMatch) {\n    return `Доп. соглашение ${dopsoglashenieMatch[1]}`;\n  }\n\n  const schetMatch = lowerFolderName.match(/schet_(\\d+)/);\n  if (schetMatch) {\n    return `Счёт ${schetMatch[1]}`;\n  }\n\n  // Check filename patterns for additional numbered documents\n  const fileNameDopsoglashenieMatch = lowerFileName.match(/dopsoglashenie_(\\d+)/);\n  if (fileNameDopsoglashenieMatch) {\n    return `Доп. соглашение ${fileNameDopsoglashenieMatch[1]}`;\n  }\n\n  const fileNameSchetMatch = lowerFileName.match(/schet_(\\d+)/);\n  if (fileNameSchetMatch) {\n    return `Счёт ${fileNameSchetMatch[1]}`;\n  }\n\n  // Check for PTS/PSM\n  if (lowerFileName.includes('pts') || lowerFileName.includes('psm')) {\n    return 'ПТС/ПСМ';\n  }\n\n  // Fallback to original folder name\n  return folderName;\n}\n\n// Function to load customer data and payment schedules from XML\nasync function loadCustomerDataAndPaymentSchedules(userId: number, userINN: string, userEmail: string): Promise<void> {\n  const client = await connectToFTP();\n\n  try {\n    // Download customers.xml file\n    const localXmlPath = path.join(BASE_DOWNLOAD_PATH, 'customers.xml');\n    await client.downloadTo(localXmlPath, '/customers.xml');\n\n    // Parse XML file\n    const xmlContent = await fs.readFile(localXmlPath, 'utf8');\n    const result = await parseStringPromise(xmlContent);\n\n    // Find customer data by INN or Email\n    if (result.ДанныеПоКлиенту) {\n      const customersData = Array.isArray(result.ДанныеПоКлиенту) ? result.ДанныеПоКлиенту : [result.ДанныеПоКлиенту];\n\n      for (const customerData of customersData) {\n        const customerINN = customerData.ИНН?.[0];\n        const customerEmail = customerData.Email?.[0];\n        \n        if ((customerINN === userINN) || (customerEmail === userEmail)) {\n          // Auto-populate company information\n          if (customerData.НаименованиеПолное?.[0]) {\n            const companyData = {\n              userId,\n              name: customerData.НаименованиеПолное[0],\n              inn: customerINN || userINN,\n              kpp: customerData.КПП?.[0] || '',\n              ogrn: customerData.ОГРН?.[0] || '',\n              legalAddress: customerData.ЮрАдрес?.[0] || ''\n            };\n\n            try {\n              const existingCompany = await storage.getCompanyByUserId(userId);\n              if (existingCompany) {\n                await storage.updateCompany(existingCompany.id, companyData);\n              } else {\n                await storage.createCompany(companyData);\n              }\n            } catch (error) {\n              console.error(\"Error updating company data:\", error);\n            }\n          }\n\n          // Auto-populate contact information\n          if (customerData.МенеджерФИО?.[0] || customerData.Email?.[0] || customerData.Телефон?.[0]) {\n            const contactData = {\n              userId,\n              name: customerData.МенеджерФИО?.[0] || '',\n              managerEmail: customerData.МенеджерEmail?.[0] || '',\n              email: customerData.Email?.[0] || userEmail,\n              phone: customerData.Телефон?.[0] || ''\n            };\n\n            try {\n              const existingContact = await storage.getContactByUserId(userId);\n              if (existingContact) {\n                await storage.updateContact(existingContact.id, contactData);\n              } else {\n                await storage.createContact(contactData);\n              }\n            } catch (error) {\n              console.error(\"Error updating contact data:\", error);\n            }\n          }\n\n          // Process contracts for this customer\n          if (customerData.Договоры?.[0]?.Договор) {\n            const contracts = Array.isArray(customerData.Договоры[0].Договор) ? customerData.Договоры[0].Договор : [customerData.Договоры[0].Договор];\n\n            for (const contract of contracts) {\n              const contractNumber = contract.Номер?.[0] || 'unknown';\n              const contractDate = contract.Дата?.[0] || new Date().toISOString();\n\n              // Process payment schedule (ГрафикПлатежей)\n              if (contract.ГрафикПлатежей?.[0]?.Платеж) {\n                const payments = Array.isArray(contract.ГрафикПлатежей[0].Платеж) ? contract.ГрафикПлатежей[0].Платеж : [contract.ГрафикПлатежей[0].Платеж];\n\n                for (let i = 0; i < payments.length; i++) {\n                  const payment = payments[i];\n                  const paymentSchedule: InsertPaymentSchedule = {\n                    userId,\n                    contractNumber,\n                    paymentNumber: i + 1,\n                    paymentDate: new Date(payment.Дата?.[0] || contractDate),\n                    amount: parseFloat(payment.Сумма?.[0] || '0')\n                  };\n\n                  try {\n                    await storage.createPaymentSchedule(paymentSchedule);\n                  } catch (error) {\n                    console.error(\"Error creating payment schedule:\", error);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // Clean up temporary XML file\n    await fs.unlink(localXmlPath);\n  } catch (error) {\n    console.error(\"Error loading customer data and payment schedules:\", error);\n  } finally {\n    client.close();\n  }\n}\n\n// Main function to fetch documents from FTP\nexport async function fetchDocumentsFromFTP(userId: number): Promise<any[]> {\n  await ensureDirectories();\n\n  const userData = await getUserData(userId);\n  if (!userData.inn && !userData.email) {\n    throw new Error(\"User INN or email not found. Please update your profile with INN information.\");\n  }\n\n  const client = await connectToFTP();\n  const documents: any[] = [];\n\n  try {\n    // First load customer data and payment schedules\n    await loadCustomerDataAndPaymentSchedules(userId, userData.inn || '', userData.email || '');\n\n    // Navigate to user's INN folder (skip if no INN available)\n    if (!userData.inn) {\n      console.log(\"No INN available, skipping document folder navigation\");\n      return documents;\n    }\n    \n    const userPath = `/docs/${userData.inn}`;\n    console.log(`Navigating to user path: ${userPath}`);\n\n    try {\n      await client.cd(userPath);\n    } catch (error) {\n      console.log(`User path ${userPath} not found`);\n      throw new Error(`Documents folder for INN ${userData.inn} not found on FTP server`);\n    }\n\n    // List contract folders\n    const contractFolders = await client.list();\n\n    for (const folder of contractFolders) {\n      if (folder.type === 2) { // 2 = directory\n        const contractNumber = folder.name;\n        const contractPath = `${userPath}/${contractNumber}`;\n\n        await client.cd(contractPath);\n\n        // List document type folders\n        const docTypeFolders = await client.list();\n\n        for (const docTypeFolder of docTypeFolders) {\n          if (docTypeFolder.type === 2) {\n            const docTypePath = `${contractPath}/${docTypeFolder.name}`;\n            await client.cd(docTypePath);\n\n            // List actual documents\n            const documentFiles = await client.list();\n\n            for (const file of documentFiles) {\n              if (file.type === 1) { // 1 = file\n                const category = categorizeDocument(file.name, docTypeFolder.name);\n                const folderName = category === 'other' ? 'others' : category + 's';\n                const localPath = path.join(\n                  BASE_DOWNLOAD_PATH,\n                  folderName,\n                  `${contractNumber}_${file.name}`\n                );\n\n                try {\n                  // Download the file\n                  await client.downloadTo(localPath, file.name);\n                  console.log(`Downloaded: ${file.name} to ${localPath} (category: ${category})`);\n\n                  // Generate proper document name based on folder and file\n                  // If the folder is 'akt', we want to display '№ Договора' as per user request.\n                  // However, the categorizeDocument function already returns 'contract' for some cases\n                  // and the display logic below will use the contractNumber.\n                  // For 'act' category, we will directly use contractNumber for display in the 'Акты' table.\n                  let documentDisplayName = getDocumentDisplayName(docTypeFolder.name, file.name);\n                  if (category === 'act') {\n                    // For acts, the primary identifier is the contract number, not a derived name.\n                    documentDisplayName = contractNumber;\n                  }\n\n                  // Create database entry based on document type\n                  switch (category) {\n                    case 'contract':\n                      const contract: InsertContract = {\n                        userId,\n                        number: contractNumber,\n                        date: new Date(), // Consider getting a more accurate date if available\n                        type: documentDisplayName,\n                        amount: 0, // Placeholder, needs to be fetched or calculated\n                        status: \"Активен\",\n                        filePath: localPath\n                      };\n                      const savedContract = await storage.createContract(contract);\n                      documents.push({ ...savedContract, category: 'contract' });\n                      break;\n\n                    case 'act':\n                      const act: InsertAct = {\n                        userId,\n                        // Changed from `${contractNumber}-ACT-${Date.now()}` to just contractNumber for the \"№ Договора\" requirement\n                        number: contractNumber,\n                        date: new Date(), // Consider getting a more accurate date if available\n                        type: documentDisplayName, // This will be '№ Договора' for acts from 'akt' folders\n                        contractNumber,\n                        amount: 0, // Placeholder, needs to be fetched or calculated\n                        filePath: localPath\n                      };\n                      const savedAct = await storage.createAct(act);\n                      documents.push({ ...savedAct, category: 'act' });\n                      break;\n\n                    case 'invoice':\n                      const invoice: InsertInvoice = {\n                        userId,\n                        number: `${contractNumber}-INV-${Date.now()}`, // Keep original invoice numbering\n                        date: new Date(), // Consider getting a more accurate date if available\n                        contractNumber,\n                        amount: 0, // Placeholder, needs to be fetched or calculated\n                        status: \"Выставлен\",\n                        filePath: localPath\n                      };\n                      const savedInvoice = await storage.createInvoice(invoice);\n                      documents.push({ ...savedInvoice, category: 'invoice' });\n                      break;\n\n                    default:\n                      const otherDoc: InsertOtherDocument = {\n                        userId,\n                        name: documentDisplayName,\n                        date: new Date(), // Consider getting a more accurate date if available\n                        description: `${documentDisplayName} - ${contractNumber}`,\n                        fileSize: file.size,\n                        fileType: path.extname(file.name).toLowerCase(),\n                        filePath: localPath\n                      };\n                      const savedOtherDoc = await storage.createOtherDocument(otherDoc);\n                      documents.push({ ...savedOtherDoc, category: 'other' });\n                      break;\n                  }\n                } catch (downloadError) {\n                  console.error(`Failed to download ${file.name}:`, downloadError);\n                }\n              }\n            }\n            // Return to contract folder\n            await client.cd('..');\n          }\n        }\n\n        // Return to user folder\n        await client.cd('..');\n      }\n    }\n\n    // Add test payment schedules creation\n    // This section is added to fulfill the requirement of populating \"График платежей\" with test data\n    // if no existing payments are found for a contract.\n    const contracts = await storage.getContractsByUserId(userId);\n    for (const contract of contracts) {\n      // Check if there are already payments for this contract\n      const existingPayments = await storage.getPaymentSchedulesByContract(userId, contract.number);\n      if (existingPayments.length === 0) {\n        // Create several test payments\n        const baseDate = new Date();\n        for (let i = 1; i <= 12; i++) {\n          const paymentDate = new Date(baseDate);\n          paymentDate.setMonth(baseDate.getMonth() + i);\n\n          await storage.createPaymentSchedule({\n            userId: userId,\n            paymentNumber: i,\n            paymentDate: paymentDate,\n            contractNumber: contract.number,\n            // Ensure amount is a number, default to 0 if calculation fails\n            amount: typeof contract.amount === 'number' ? Math.round(contract.amount / 12) : 0\n          });\n        }\n      }\n    }\n\n    return documents;\n  } catch (error) {\n    console.error(\"Error fetching documents from FTP:\", error);\n    throw new Error(`Error fetching documents: ${(error as Error).message}`);\n  } finally {\n    client.close();\n  }\n}\n\n// Export function to load only customer data (for profile auto-population)\nexport async function loadCustomerProfileData(userId: number): Promise<void> {\n  const userData = await getUserData(userId);\n  if (!userData.inn && !userData.email) {\n    console.log(\"User INN or email not found, skipping customer data load\");\n    return;\n  }\n\n  try {\n    await loadCustomerDataAndPaymentSchedules(userId, userData.inn || '', userData.email || '');\n  } catch (error) {\n    console.error(\"Error loading customer profile data:\", error);\n    throw error;\n  }\n}\n\n// Function to validate email and INN match in customers.xml\nexport async function validateEmailInnMatch(email: string, inn: string): Promise<{ isValid: boolean; message?: string }> {\n  const client = await connectToFTP();\n\n  try {\n    // Download customers.xml file\n    const localXmlPath = path.join(BASE_DOWNLOAD_PATH, 'customers.xml');\n    await client.downloadTo(localXmlPath, '/customers.xml');\n\n    // Parse XML file\n    const xmlContent = await fs.readFile(localXmlPath, 'utf8');\n    const result = await parseStringPromise(xmlContent);\n\n    // Check if either email or INN exists in XML\n    if (result.ДанныеПоКлиенту) {\n      const customersData = Array.isArray(result.ДанныеПоКлиенту) ? result.ДанныеПоКлиенту : [result.ДанныеПоКлиенту];\n      \n      let emailFound = false;\n      let innFound = false;\n      let matchingRecord = null;\n\n      for (const customerData of customersData) {\n        const customerINN = customerData.ИНН?.[0];\n        const customerEmail = customerData.Email?.[0];\n        \n        if (customerEmail === email) {\n          emailFound = true;\n          matchingRecord = customerData;\n        }\n        \n        if (customerINN === inn) {\n          innFound = true;\n          if (!matchingRecord) {\n            matchingRecord = customerData;\n          }\n        }\n      }\n\n      // If email is found in XML but with different INN\n      if (emailFound && matchingRecord) {\n        const xmlINN = matchingRecord.ИНН?.[0];\n        if (xmlINN && xmlINN !== inn) {\n          return {\n            isValid: false,\n            message: `Этот email зарегистрирован с ИНН ${xmlINN} в базе данных. Для регистрации с ИНН ${inn} используйте другой email.`\n          };\n        }\n      }\n\n      // If INN is found in XML but with different email\n      if (innFound && matchingRecord) {\n        const xmlEmail = matchingRecord.Email?.[0];\n        if (xmlEmail && xmlEmail !== email) {\n          return {\n            isValid: false,\n            message: `Этот ИНН зарегистрирован с email ${xmlEmail} в базе данных. Для регистрации с email ${email} используйте другой ИНН.`\n          };\n        }\n      }\n    }\n\n    return { isValid: true };\n  } catch (error) {\n    console.error(\"Error validating email/INN match:\", error);\n    // In case of error, allow registration (don't block users due to XML issues)\n    return { isValid: true };\n  } finally {\n    client.close();\n  }\n}\n\n// Function to download a specific document\nexport async function downloadDocument(userId: number, filePath: string): Promise<Buffer> {\n  try {\n    const fileBuffer = await fs.readFile(filePath);\n    return fileBuffer;\n  } catch (error) {\n    console.error(\"Error reading document file:\", error);\n    throw new Error(\"Document file not found or cannot be read\");\n  }\n}","size_bytes":22492},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic } from \"./vite\";\nimport { createServer } from \"http\";\nimport session from \"express-session\";\nimport passport from \"passport\";\nimport fileUpload from \"express-fileupload\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\n// File upload configuration\napp.use(fileUpload({\n  limits: { fileSize: 50 * 1024 * 1024 }, // 50MB max file size\n  abortOnLimit: true\n}));\n\n// Session configuration\napp.use(session({\n  secret: process.env.SESSION_SECRET || 'your-secret-key',\n  resave: false,\n  saveUninitialized: false,\n  cookie: {\n    secure: false, // Set to true in production with HTTPS\n    maxAge: 24 * 60 * 60 * 1000 // 24 hours\n  }\n}));\n\napp.use(passport.initialize());\napp.use(passport.session());\n\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      console.log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on port 5000\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT!) || 5000;\n  server.listen(port, '0.0.0.0', () => {\n    console.log(`serving on port ${port}`);\n  });\n})();","size_bytes":2550},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { setupAuth } from \"./auth\";\nimport { storage } from \"./storage\";\nimport { fetchDocumentsFromFTP, downloadDocument, loadCustomerProfileData, validateEmailInnMatch } from \"./ftp\";\nimport nodemailer from \"nodemailer\";\nimport { Request, Response } from 'express';\nimport axios from 'axios';\nimport * as cheerio from 'cheerio';\nimport path from 'path'; // Import path module for basename\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Health check route\n  app.get(\"/api/health\", (req, res) => {\n    res.json({ status: \"ok\", timestamp: new Date().toISOString() });\n  });\n\n  // Setup authentication routes\n  setupAuth(app);\n\n  // Company profile\n  app.get(\"/api/company\", async (req, res) => {\n    if (!req.isAuthenticated()) return res.status(401).json({ message: \"Unauthorized\" });\n\n    const company = await storage.getCompanyByUserId(req.user.id);\n    if (!company) {\n      return res.json(null);\n    }\n\n    res.json(company);\n  });\n\n  app.post(\"/api/company\", async (req, res) => {\n    if (!req.isAuthenticated()) return res.status(401).json({ message: \"Unauthorized\" });\n\n    const existingCompany = await storage.getCompanyByUserId(req.user.id);\n    if (existingCompany) {\n      const updatedCompany = await storage.updateCompany(existingCompany.id, {\n        ...req.body,\n        userId: req.user.id,\n      });\n      return res.json(updatedCompany);\n    }\n\n    const company = await storage.createCompany({\n      ...req.body,\n      userId: req.user.id,\n    });\n\n    res.status(201).json(company);\n  });\n\n  // User profile update\n  app.put(\"/api/user\", async (req, res) => {\n    if (!req.isAuthenticated()) return res.status(401).json({ message: \"Unauthorized\" });\n\n    const { inn, email } = req.body;\n\n    if (inn) {\n      // Check if INN is already used by another user\n      const existingInn = await storage.getUserByInn(inn);\n      if (existingInn && existingInn.id !== req.user.id) {\n        return res.status(400).json({ message: \"INN already registered by another user\" });\n      }\n    }\n\n    // Validate email and INN match in customers.xml if both are provided\n    if (inn && email) {\n      try {\n        const validationResult = await validateEmailInnMatch(email, inn);\n        if (!validationResult.isValid) {\n          return res.status(400).json({ message: validationResult.message });\n        }\n      } catch (error) {\n        console.error(\"Error validating email/INN match:\", error);\n        // Continue with update even if validation fails to not block legitimate updates\n      }\n    }\n\n    const currentUser = await storage.getUser(req.user.id);\n    if (!currentUser) {\n      return res.status(404).json({ message: \"User not found\" });\n    }\n\n    // Update user with new data\n    const updatedUser = {\n      ...currentUser,\n      ...req.body,\n      id: req.user.id, // Ensure ID doesn't change\n      password: currentUser.password, // Keep existing password\n      createdAt: currentUser.createdAt, // Keep creation date\n    };\n\n    // Update user using storage method\n    await storage.updateUser(req.user.id, updatedUser);\n\n    // Return user without password\n    const { password, ...userWithoutPassword } = updatedUser;\n    res.json(userWithoutPassword);\n  });\n\n  // Contact information\n  app.get(\"/api/contact\", async (req, res) => {\n    if (!req.isAuthenticated()) return res.status(401).json({ message: \"Unauthorized\" });\n\n    const contact = await storage.getContactByUserId(req.user.id);\n    if (!contact) {\n      return res.json(null);\n    }\n\n    res.json(contact);\n  });\n\n  app.post(\"/api/contact\", async (req, res) => {\n    if (!req.isAuthenticated()) return res.status(401).json({ message: \"Unauthorized\" });\n\n    const existingContact = await storage.getContactByUserId(req.user.id);\n    if (existingContact) {\n      const updatedContact = await storage.updateContact(existingContact.id, {\n        ...req.body,\n        userId: req.user.id,\n      });\n      return res.json(updatedContact);\n    }\n\n    const contact = await storage.createContact({\n      ...req.body,\n      userId: req.user.id,\n    });\n\n    res.status(201).json(contact);\n  });\n\n  // Load customer profile data from XML\n  app.post(\"/api/load-customer-data\", async (req, res) => {\n    if (!req.isAuthenticated()) return res.status(401).json({ message: \"Unauthorized\" });\n\n    try {\n      await loadCustomerProfileData(req.user.id);\n      res.json({ success: true, message: \"Customer data loaded successfully\" });\n    } catch (error) {\n      console.error(\"Error loading customer data:\", error);\n      res.status(500).json({ \n        success: false, \n        message: \"Failed to load customer data\", \n        error: (error as Error).message \n      });\n    }\n  });\n\n  // Contracts\n  app.get(\"/api/contracts\", async (req, res) => {\n    if (!req.isAuthenticated()) return res.status(401).json({ message: \"Unauthorized\" });\n\n    const contracts = await storage.getContractsByUserId(req.user.id);\n    res.json(contracts);\n  });\n\n  app.get(\"/api/contracts/:id\", async (req, res) => {\n    if (!req.isAuthenticated()) return res.status(401).json({ message: \"Unauthorized\" });\n\n    const contract = await storage.getContractById(parseInt(req.params.id));\n    if (!contract) {\n      return res.status(404).json({ message: \"Contract not found\" });\n    }\n\n    if (contract.userId !== req.user.id) {\n      return res.status(403).json({ message: \"Forbidden\" });\n    }\n\n    res.json(contract);\n  });\n\n  // Acts\n  app.get(\"/api/acts\", async (req, res) => {\n    if (!req.isAuthenticated()) return res.status(401).json({ message: \"Unauthorized\" });\n\n    const acts = await storage.getActsByUserId(req.user.id);\n    res.json(acts);\n  });\n\n  app.get(\"/api/acts/:id\", async (req, res) => {\n    if (!req.isAuthenticated()) return res.status(401).json({ message: \"Unauthorized\" });\n\n    const act = await storage.getActById(parseInt(req.params.id));\n    if (!act) {\n      return res.status(404).json({ message: \"Act not found\" });\n    }\n\n    if (act.userId !== req.user.id) {\n      return res.status(403).json({ message: \"Forbidden\" });\n    }\n\n    res.json(act);\n  });\n\n  // Request reconciliation act\n  app.post(\"/api/acts/request-reconciliation\", async (req, res) => {\n    if (!req.isAuthenticated()) return res.status(401).json({ message: \"Unauthorized\" });\n\n    // In a real implementation, this would trigger an email to the company\n    // and potentially create a task in their CRM system\n\n    // For now, just return success\n    res.json({ success: true, message: \"Запрос на акт сверки успешно отправлен\" });\n  });\n\n  // Invoices\n  app.get(\"/api/invoices\", async (req, res) => {\n    if (!req.isAuthenticated()) return res.status(401).json({ message: \"Unauthorized\" });\n\n    const invoices = await storage.getInvoicesByUserId(req.user.id);\n    res.json(invoices);\n  });\n\n  app.get(\"/api/invoices/:id\", async (req, res) => {\n    if (!req.isAuthenticated()) return res.status(401).json({ message: \"Unauthorized\" });\n\n    const invoice = await storage.getInvoiceById(parseInt(req.params.id));\n    if (!invoice) {\n      return res.status(404).json({ message: \"Invoice not found\" });\n    }\n\n    if (invoice.userId !== req.user.id) {\n      return res.status(403).json({ message: \"Forbidden\" });\n    }\n\n    res.json(invoice);\n  });\n\n  // Payment Schedules\n  app.get(\"/api/payment-schedules\", async (req, res) => {\n    if (!req.isAuthenticated()) return res.status(401).send(\"Unauthorized\");\n\n    const contractNumber = req.query.contractNumber as string;\n    let paymentSchedules: PaymentSchedule[];\n\n    if (contractNumber && contractNumber !== \"all\") {\n      paymentSchedules = await storage.getPaymentSchedulesByContract(req.user!.id, contractNumber);\n    } else {\n      paymentSchedules = await storage.getPaymentSchedulesByUserId(req.user!.id);\n    }\n\n    res.json(paymentSchedules);\n  });\n\n  // Other Documents\n  app.get(\"/api/other-documents\", async (req, res) => {\n    if (!req.isAuthenticated()) return res.status(401).json({ message: \"Unauthorized\" });\n\n    const documents = await storage.getOtherDocumentsByUserId(req.user.id);\n    res.json(documents);\n  });\n\n  app.get(\"/api/other-documents/:id\", async (req, res) => {\n    if (!req.isAuthenticated()) return res.status(401).json({ message: \"Unauthorized\" });\n\n    const document = await storage.getOtherDocumentById(parseInt(req.params.id));\n    if (!document) {\n      return res.status(404).json({ message: \"Document not found\" });\n    }\n\n    if (document.userId !== req.user.id) {\n      return res.status(403).json({ message: \"Forbidden\" });\n    }\n\n    res.json(document);\n  });\n\n  // FTP Documents Sync\n  app.post(\"/api/sync-documents\", async (req, res) => {\n    if (!req.isAuthenticated()) return res.status(401).json({ message: \"Unauthorized\" });\n\n    try {\n      const documents = await fetchDocumentsFromFTP(req.user.id);\n      res.json({\n        success: true,\n        count: documents.length,\n        message: `Documents synchronized successfully. Found ${documents.length} documents.`\n      });\n    } catch (error) {\n      console.error(\"Error syncing documents:\", error);\n      res.status(500).json({\n        success: false,\n        message: error instanceof Error ? error.message : \"Unknown error occurred\"\n      });\n    }\n  });\n\n  // Download Document\n  app.get(\"/api/download-document/:type/:id\", async (req, res) => {\n    if (!req.isAuthenticated()) return res.status(401).json({ message: \"Unauthorized\" });\n\n    const { type, id } = req.params;\n\n    try {\n      let document;\n\n      switch (type) {\n        case 'contract':\n          document = await storage.getContractById(parseInt(id));\n          break;\n        case 'act':\n          document = await storage.getActById(parseInt(id));\n          break;\n        case 'invoice':\n          document = await storage.getInvoiceById(parseInt(id));\n          break;\n        case 'other':\n          document = await storage.getOtherDocumentById(parseInt(id));\n          break;\n        default:\n          return res.status(400).json({ message: \"Invalid document type\" });\n      }\n\n      if (!document) {\n        return res.status(404).json({ message: \"Document not found\" });\n      }\n\n      if (document.userId !== req.user.id) {\n        return res.status(403).json({ message: \"Forbidden\" });\n      }\n\n      const fileBuffer = await downloadDocument(req.user.id, document.filePath);\n      const fileName = path.basename(document.filePath);\n\n      res.set({\n        'Content-Type': 'application/octet-stream',\n        'Content-Disposition': `attachment; filename=\"${encodeURIComponent(fileName)}\"`,\n        'Content-Length': fileBuffer.length\n      });\n\n      res.send(fileBuffer);\n    } catch (error) {\n      console.error(\"Error downloading document:\", error);\n      res.status(500).json({\n        success: false,\n        message: error instanceof Error ? error.message : \"Error downloading document\"\n      });\n    }\n  });\n\n  // Application submission\n  app.post(\"/api/send-application\", async (req, res) => {\n    try {\n      const { name, phone, email, serviceType, recipientEmail, comment, equipment, property, vehicle } = req.body;\n\n      // Validate required fields\n      if (!name || !phone || !email || !serviceType) {\n        return res.status(400).json({ success: false, message: 'Пожалуйста, заполните все обязательные поля (Имя, Телефон, Email, Тип услуги)' });\n      }\n\n      // Create transporter for sending email\n      const transporter = nodemailer.createTransporter({\n        service: 'yandex',\n        auth: {\n          user: process.env.EMAIL_USER || 'inv.lizing@yandex.ru',\n          pass: process.env.EMAIL_PASS || 'your-email-password' // Replace with your actual email password or use environment variables\n        }\n      });\n\n      // Determine service detail for email\n      let serviceDetail = '';\n      if (equipment) serviceDetail = equipment;\n      if (property) serviceDetail = property;\n      if (vehicle) serviceDetail = vehicle;\n\n      const emailText = `\nНовая заявка на лизинг\n\nТип услуги: ${serviceType}\nДетали: ${serviceDetail || 'Не указано'}\n\nКонтактная информация:\nИмя: ${name}\nТелефон: ${phone}\nEmail: ${email}\n\nКомментарий: ${comment || 'Не указан'}\n\nДата подачи: ${new Date().toLocaleString('ru-RU')}\n      `;\n\n      const mailOptions = {\n        from: process.env.EMAIL_USER || 'inv.lizing@yandex.ru',\n        to: recipientEmail || 'inv.lizing@yandex.ru', // Use provided recipient or default to inv.lizing@yandex.ru\n        subject: `Новая заявка на лизинг - ${serviceType}`,\n        text: emailText\n      };\n\n      await transporter.sendMail(mailOptions);\n\n      res.json({ success: true, message: 'Заявка успешно отправлена' });\n    } catch (error) {\n      console.error('Error sending application:', error);\n      res.status(500).json({ success: false, message: 'Ошибка при отправке заявки' });\n    }\n  });\n\n  // Partnership proposal submission\n  app.post(\"/api/send-partnership\", async (req, res) => {\n    try {\n      const { companyName, contactPerson, phone, email, description } = req.body;\n      const proposal = req.files?.proposal;\n\n      // Validate required fields\n      if (!companyName || !contactPerson || !phone || !email || !proposal) {\n        return res.status(400).json({ success: false, message: 'Пожалуйста, заполните все обязательные поля и прикрепите коммерческое предложение' });\n      }\n\n      const emailText = `\nНовая заявка на партнерство\n\nИнформация о компании:\nНазвание компании: ${companyName}\nКонтактное лицо: ${contactPerson}\nТелефон: ${phone}\nEmail: ${email}\n\nОписание деятельности: ${description || 'Не указано'}\n\nДата подачи: ${new Date().toLocaleString('ru-RU')}\n      `;\n\n      const mailOptions = {\n        from: process.env.EMAIL_USER || 'inv.lizing@yandex.ru',\n        to: 'inv.lizing@yandex.ru',\n        subject: `Новая заявка на партнерство - ${companyName}`,\n        text: emailText,\n        attachments: [\n          {\n            filename: proposal.name,\n            content: proposal.data\n          }\n        ]\n      };\n\n      await transporter.sendMail(mailOptions);\n\n      res.json({ success: true, message: 'Коммерческое предложение успешно отправлено' });\n    } catch (error) {\n      console.error('Error sending partnership proposal:', error);\n      res.status(500).json({ success: false, message: 'Ошибка при отправке предложения' });\n    }\n  });\n\n  // Resume submission\n  app.post(\"/api/send-resume\", async (req, res) => {\n    try {\n      const { fullName, phone, email, city, position } = req.body;\n      const resume = req.files?.resume;\n\n      // Validate required fields\n      if (!fullName || !phone || !email || !city || !position || !resume) {\n        return res.status(400).json({ success: false, message: 'Пожалуйста, заполните все обязательные поля и прикрепите резюме' });\n      }\n\n      // Create transporter for sending email\n      const transporter = nodemailer.createTransporter({\n        service: 'yandex',\n        auth: {\n          user: process.env.EMAIL_USER || 'inv.lizing@yandex.ru',\n          pass: process.env.EMAIL_PASS || 'your-email-password'\n        }\n      });\n\n      const emailText = `\nНовый отклик на вакансию\n\nПозиция: ${position}\nГород: ${city}\n\nКонтактная информация:\nФИО: ${fullName}\nТелефон: ${phone}\nEmail: ${email}\n\nДата подачи: ${new Date().toLocaleString('ru-RU')}\n      `;\n\n      const mailOptions = {\n        from: process.env.EMAIL_USER || 'inv.lizing@yandex.ru',\n        to: 'inv.lizing@yandex.ru',\n        subject: `Новый отклик на вакансию \"${position}\" в городе ${city}`,\n        text: emailText,\n        attachments: [\n          {\n            filename: resume.name,\n            content: resume.data\n          }\n        ]\n      };\n\n      await transporter.sendMail(mailOptions);\n\n      res.json({ success: true, message: 'Резюме успешно отправлено' });\n    } catch (error) {\n      console.error('Error sending resume:', error);\n      res.status(500).json({ success: false, message: 'Ошибка при отправке резюме' });\n    }\n  });\n\n  // Avito parser route\n  app.get('/api/avito-listings', async (req: Request, res: Response) => {\n    try {\n      const avitoUrl = 'https://www.avito.ru/brands/7b481004eeeab4f290fcee41e3f027e2/all/business360/oborudovanie_dlya_biznesa?gdlkerfdnwq=101&iid=4404969092&page_from=from_item_card_button&params%5B156912%5D=3266344&sellerId=9baab47702a415bd69b22137bf48db28';\n\n      const response = await axios.get(avitoUrl, {\n        headers: {\n          'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'\n        }\n      });\n\n      const $ = cheerio.load(response.data);\n      const listings: any[] = [];\n\n      // Парсим объявления\n      $('[data-marker=\"item\"]').each((index, element) => {\n        const title = $(element).find('[data-marker=\"item-title\"]').text().trim();\n        const price = $(element).find('[data-marker=\"item-price\"]').text().trim();\n        const imageUrl = $(element).find('img').attr('src') || '';\n        const itemUrl = $(element).find('[data-marker=\"item-title\"] a').attr('href') || '';\n        const description = $(element).find('[data-marker=\"item-specific-params\"]').text().trim();\n\n        if (title && price) {\n          listings.push({\n            title,\n            price,\n            imageUrl: imageUrl.startsWith('//') ? 'https:' + imageUrl : imageUrl,\n            avitoUrl: itemUrl.startsWith('//') ? 'https:' + itemUrl : itemUrl.startsWith('/') ? 'https://www.avito.ru' + itemUrl : itemUrl,\n            description: description || 'Подробности на странице объявления'\n          });\n        }\n      });\n\n      // Если парсинг не сработал, возвращаем статичные данные\n      if (listings.length === 0) {\n        listings.push(\n          {\n            title: \"Комплект оборудования для кафе, ресторанов\",\n            price: \"2 360 385 ₽\",\n            description: \"Оборудование находится по адресу: г. Тюмень, ул. Щербакова, 117 склад. Комплект оборудования, 2022 г. в., б/у.\",\n            imageUrl: \"https://investl.ru/upload/medialibrary/52f/xel8l648fo7vymej8sg5ln5zhs1r3rn4.jpg\",\n            avitoUrl: \"http://www.avito.ru/tyumen/oborudovanie_dlya_biznesa/komplekt_oborudovaniya_dlya_kafe_restoranov_4181529560\"\n          },\n          {\n            title: \"Комплект фасовочно-упаковочной модели Базис\",\n            price: \"6 380 200 ₽\",\n            description: \"Комплекс фасовочно-упаковочной модели БАЗИС включает в себя: конвейер ленточный отводящий, конвейер ленточный, укладчик с установкой шиберной, машину упаковочную Базис 50 (АРУК50), клеевую станцию интегрированную, принтер каплеструйный.\",\n            imageUrl: \"https://investl.ru/upload/medialibrary/71c/tx5nnzhoft8wv7uho3prq9vzhfjrwxvp.jpg\",\n            avitoUrl: \"http://www.avito.ru/chelyabinsk/oborudovanie_dlya_biznesa/komplekt_fasovochnoupakovochnyy_modeli_bazis_4404969092\"\n          }\n        );\n      }\n\n      res.json({ listings });\n    } catch (error) {\n      console.error('Error parsing Avito:', error);\n      // В случае ошибки возвращаем статичные данные\n      res.json({\n        listings: [\n          {\n            title: \"Комплект оборудования для кафе, ресторанов\",\n            price: \"2 360 385 ₽\",\n            description: \"Оборудование находится по адресу: г. Тюмень, ул. Щербакова, 117 склад. Комплект оборудования, 2022 г. в., б/у.\",\n            imageUrl: \"https://investl.ru/upload/medialibrary/52f/xel8l648fo7vymej8sg5ln5zhs1r3rn4.jpg\",\n            avitoUrl: \"http://www.avito.ru/tyumen/oborudovanie_dlya_biznesa/komplekt_oborudovaniya_dlya_kafe_restoranov_4181529560\"\n          },\n          {\n            title: \"Комплект фасовочно-упаковочной модели Базис\",\n            price: \"6 380 200 ₽\",\n            description: \"Комплекс фасовочно-упаковочной модели БАЗИС включает в себя: конвейер ленточный отводящий, конвейер ленточный, укладчик с установкой шиберной, машину упаковочную Базис 50 (АРУК50), клеевую станцию интегрированную, принтер каплеструйный.\",\n            imageUrl: \"https://investl.ru/upload/medialibrary/71c/tx5nnzhoft8wv7uho3prq9vzhfjrwxvp.jpg\",\n            avitoUrl: \"http://www.avito.ru/chelyabinsk/oborudovanie_dlya_biznesa/komplekt_fasovochnoupakovochnyy_modeli_bazis_4404969092\"\n          }\n        ]\n      });\n    }\n  });\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}","size_bytes":21891},"server/storage.ts":{"content":"import { users, companies, contacts, contracts, acts, invoices, paymentSchedules, otherDocuments } from \"@shared/schema\";\nimport type {\n  User, InsertUser, Company, InsertCompany, Contact, InsertContact,\n  Contract, InsertContract, Act, InsertAct, Invoice, InsertInvoice,\n  PaymentSchedule, InsertPaymentSchedule, OtherDocument, InsertOtherDocument\n} from \"@shared/schema\";\nimport session from \"express-session\";\nimport createMemoryStore from \"memorystore\";\n\nconst MemoryStore = createMemoryStore(session);\n\nexport interface IStorage {\n  // User operations\n  getUser(id: number): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  getUserByEmail(email: string): Promise<User | undefined>;\n  getUserByInn(inn: string): Promise<User | undefined>;\n  getUserById(id: number): Promise<User | undefined>; // Added method\n  createUser(user: InsertUser): Promise<User>;\n\n  // Company operations\n  getCompanyByUserId(userId: number): Promise<Company | undefined>;\n  createCompany(company: InsertCompany): Promise<Company>;\n  updateCompany(id: number, company: Partial<Company>): Promise<Company | undefined>;\n\n  // Contact operations\n  getContactByUserId(userId: number): Promise<Contact | undefined>;\n  createContact(contact: InsertContact): Promise<Contact>;\n  updateContact(id: number, contact: Partial<Contact>): Promise<Contact | undefined>;\n\n  // Contract operations\n  getContractsByUserId(userId: number): Promise<Contract[]>;\n  getContractById(id: number): Promise<Contract | undefined>;\n  createContract(contract: InsertContract): Promise<Contract>;\n\n  // Act operations\n  getActsByUserId(userId: number): Promise<Act[]>;\n  getActById(id: number): Promise<Act | undefined>;\n  createAct(act: InsertAct): Promise<Act>;\n\n  // Invoice operations\n  getInvoicesByUserId(userId: number): Promise<Invoice[]>;\n  getInvoiceById(id: number): Promise<Invoice | undefined>;\n  createInvoice(invoice: InsertInvoice): Promise<Invoice>;\n\n  // Payment Schedule operations\n  getPaymentSchedulesByUserId(userId: number): Promise<PaymentSchedule[]>;\n  getPaymentSchedulesByContract(userId: number, contractNumber: string): Promise<PaymentSchedule[]>;\n  createPaymentSchedule(paymentSchedule: InsertPaymentSchedule): Promise<PaymentSchedule>;\n\n  // Other Documents operations\n  getOtherDocumentsByUserId(userId: number): Promise<OtherDocument[]>;\n  getOtherDocumentById(id: number): Promise<OtherDocument | undefined>;\n  createOtherDocument(document: InsertOtherDocument): Promise<OtherDocument>;\n\n  // Session store\n  sessionStore: session.SessionStore;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<number, User>;\n  private companies: Map<number, Company>;\n  private contacts: Map<number, Contact>;\n  private contracts: Map<number, Contract>;\n  private acts: Map<number, Act>;\n  private invoices: Map<number, Invoice>;\n  private paymentSchedules: Map<number, PaymentSchedule>;\n  private otherDocuments: Map<number, OtherDocument>;\n\n  currentUserId: number;\n  currentCompanyId: number;\n  currentContactId: number;\n  currentContractId: number;\n  currentActId: number;\n  currentInvoiceId: number;\n  currentPaymentScheduleId: number;\n  currentOtherDocumentId: number;\n\n  sessionStore: session.SessionStore;\n\n  constructor() {\n    this.users = new Map();\n    this.companies = new Map();\n    this.contacts = new Map();\n    this.contracts = new Map();\n    this.acts = new Map();\n    this.invoices = new Map();\n    this.paymentSchedules = new Map();\n    this.otherDocuments = new Map();\n\n    this.currentUserId = 1;\n    this.currentCompanyId = 1;\n    this.currentContactId = 1;\n    this.currentContractId = 1;\n    this.currentActId = 1;\n    this.currentInvoiceId = 1;\n    this.currentPaymentScheduleId = 1;\n    this.currentOtherDocumentId = 1;\n\n    this.sessionStore = new MemoryStore({\n      checkPeriod: 86400000, // Clear expired sessions every 24h\n    });\n  }\n\n  // User operations\n  async getUser(id: number): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async getUserByEmail(email: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.email === email,\n    );\n  }\n\n  async getUserByInn(inn: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.inn === inn,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = this.currentUserId++;\n    const newUser: User = {\n      ...insertUser,\n      id,\n      createdAt: new Date(),\n      inn: insertUser.inn || null\n    };\n    this.users.set(id, newUser);\n    return newUser;\n  }\n\n  async getUserById(id: number): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  // Company operations\n  async getCompanyByUserId(userId: number): Promise<Company | undefined> {\n    return Array.from(this.companies.values()).find(\n      (company) => company.userId === userId,\n    );\n  }\n\n  async createCompany(company: InsertCompany): Promise<Company> {\n    const id = this.currentCompanyId++;\n    const newCompany: Company = { ...company, id };\n    this.companies.set(id, newCompany);\n    return newCompany;\n  }\n\n  async updateCompany(id: number, companyUpdate: Partial<Company>): Promise<Company | undefined> {\n    const company = this.companies.get(id);\n    if (!company) return undefined;\n\n    const updatedCompany = { ...company, ...companyUpdate };\n    this.companies.set(id, updatedCompany);\n    return updatedCompany;\n  }\n\n  // Contact operations\n  async getContactByUserId(userId: number): Promise<Contact | undefined> {\n    return Array.from(this.contacts.values()).find(\n      (contact) => contact.userId === userId,\n    );\n  }\n\n  async createContact(contact: InsertContact): Promise<Contact> {\n    const id = this.currentContactId++;\n    const newContact: Contact = { ...contact, id };\n    this.contacts.set(id, newContact);\n    return newContact;\n  }\n\n  async updateContact(id: number, contactUpdate: Partial<Contact>): Promise<Contact | undefined> {\n    const contact = this.contacts.get(id);\n    if (!contact) return undefined;\n\n    const updatedContact = { ...contact, ...contactUpdate };\n    this.contacts.set(id, updatedContact);\n    return updatedContact;\n  }\n\n  // Contract operations\n  async getContractsByUserId(userId: number): Promise<Contract[]> {\n    return Array.from(this.contracts.values()).filter(\n      (contract) => contract.userId === userId,\n    );\n  }\n\n  async getContractById(id: number): Promise<Contract | undefined> {\n    return this.contracts.get(id);\n  }\n\n  async createContract(contract: InsertContract): Promise<Contract> {\n    const id = this.currentContractId++;\n    const newContract: Contract = { ...contract, id };\n    this.contracts.set(id, newContract);\n    return newContract;\n  }\n\n  // Act operations\n  async getActsByUserId(userId: number): Promise<Act[]> {\n    return Array.from(this.acts.values()).filter(\n      (act) => act.userId === userId,\n    );\n  }\n\n  async getActById(id: number): Promise<Act | undefined> {\n    return this.acts.get(id);\n  }\n\n  async createAct(act: InsertAct): Promise<Act> {\n    const id = this.currentActId++;\n    const newAct: Act = { ...act, id };\n    this.acts.set(id, newAct);\n    return newAct;\n  }\n\n  // Invoice operations\n  async getInvoicesByUserId(userId: number): Promise<Invoice[]>{\n    return Array.from(this.invoices.values()).filter(\n      (invoice) => invoice.userId === userId,\n    );\n  }\n\n  async getInvoiceById(id: number): Promise<Invoice | undefined> {\n    return this.invoices.get(id);\n  }\n\n  async createInvoice(invoice: InsertInvoice): Promise<Invoice> {\n    const id = this.currentInvoiceId++;\n    const newInvoice: Invoice = { ...invoice, id };\n    this.invoices.set(id, newInvoice);\n    return newInvoice;\n  }\n\n  // Payment Schedule operations\n  async getPaymentSchedulesByUserId(userId: number): Promise<PaymentSchedule[]> {\n    return Array.from(this.paymentSchedules.values()).filter(\n      (paymentSchedule) => paymentSchedule.userId === userId,\n    );\n  }\n\n  async getPaymentSchedulesByContract(userId: number, contractNumber: string): Promise<PaymentSchedule[]> {\n    return Array.from(this.paymentSchedules.values()).filter(\n      (paymentSchedule) => paymentSchedule.userId === userId && paymentSchedule.contractNumber === contractNumber,\n    );\n  }\n\n  async createPaymentSchedule(paymentSchedule: InsertPaymentSchedule): Promise<PaymentSchedule> {\n    const id = this.currentPaymentScheduleId++;\n    const newPaymentSchedule: PaymentSchedule = { ...paymentSchedule, id };\n    this.paymentSchedules.set(id, newPaymentSchedule);\n    return newPaymentSchedule;\n  }\n\n  // Other Documents operations\n  async getOtherDocumentsByUserId(userId: number): Promise<OtherDocument[]> {\n    return Array.from(this.otherDocuments.values()).filter(\n      (document) => document.userId === userId,\n    );\n  }\n\n  async getOtherDocumentById(id: number): Promise<OtherDocument | undefined> {\n    return this.otherDocuments.get(id);\n  }\n\n  async createOtherDocument(document: InsertOtherDocument): Promise<OtherDocument> {\n    const id = this.currentOtherDocumentId++;\n    const newDocument: OtherDocument = { ...document, id };\n    this.otherDocuments.set(id, newDocument);\n    return newDocument;\n  }\n}\n\nexport const storage = new MemStorage();","size_bytes":9465},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path, { dirname } from \"path\";\nimport { fileURLToPath } from \"url\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        __dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(__dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2374},"shared/schema.ts":{"content":"import { pgTable, text, serial, integer, boolean, timestamp, real } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\n// Users table\nexport const users = pgTable(\"users\", {\n  id: serial(\"id\").primaryKey(),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n  email: text(\"email\").notNull().unique(),\n  inn: text(\"inn\").notNull().unique(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n  email: true,\n  inn: true,\n});\n\nexport type InsertUser = typeof users.$inferInsert & {\n  inn?: string | null;\n};\nexport type User = typeof users.$inferSelect;\n\n// Company table\nexport const companies = pgTable(\"companies\", {\n  id: serial(\"id\").primaryKey(),\n  userId: integer(\"user_id\").notNull().references(() => users.id),\n  name: text(\"name\").notNull(),\n  inn: text(\"inn\").notNull(),\n  kpp: text(\"kpp\"),\n  ogrn: text(\"ogrn\"),\n  legalAddress: text(\"legal_address\"),\n});\n\nexport const insertCompanySchema = createInsertSchema(companies).pick({\n  userId: true,\n  name: true,\n  inn: true,\n  kpp: true,\n  ogrn: true,\n  legalAddress: true,\n});\n\nexport type InsertCompany = z.infer<typeof insertCompanySchema>;\nexport type Company = typeof companies.$inferSelect;\n\n// Contact table\nexport const contacts = pgTable(\"contacts\", {\n  id: serial(\"id\").primaryKey(),\n  userId: integer(\"user_id\").notNull().references(() => users.id),\n  name: text(\"name\"),\n  managerEmail: text(\"manager_email\"),\n  email: text(\"email\"),\n  phone: text(\"phone\"),\n});\n\nexport const insertContactSchema = createInsertSchema(contacts).pick({\n  userId: true,\n  name: true,\n  managerEmail: true,\n  email: true,\n  phone: true,\n});\n\nexport type InsertContact = z.infer<typeof insertContactSchema>;\nexport type Contact = typeof contacts.$inferSelect;\n\n// Contract table\nexport const contracts = pgTable(\"contracts\", {\n  id: serial(\"id\").primaryKey(),\n  userId: integer(\"user_id\").notNull().references(() => users.id),\n  number: text(\"number\").notNull(),\n  date: timestamp(\"date\").notNull(),\n  type: text(\"type\").notNull(),\n  amount: real(\"amount\").notNull(),\n  status: text(\"status\").notNull(),\n  filePath: text(\"file_path\"),\n});\n\nexport const insertContractSchema = createInsertSchema(contracts).pick({\n  userId: true,\n  number: true,\n  date: true,\n  type: true,\n  amount: true,\n  status: true,\n  filePath: true,\n});\n\nexport type InsertContract = z.infer<typeof insertContractSchema>;\nexport type Contract = typeof contracts.$inferSelect;\n\n// Act table\nexport const acts = pgTable(\"acts\", {\n  id: serial(\"id\").primaryKey(),\n  userId: integer(\"user_id\").notNull().references(() => users.id),\n  number: text(\"number\").notNull(),\n  date: timestamp(\"date\").notNull(),\n  type: text(\"type\").notNull(),\n  contractNumber: text(\"contract_number\"),\n  amount: real(\"amount\"),\n  filePath: text(\"file_path\"),\n});\n\nexport const insertActSchema = createInsertSchema(acts).pick({\n  userId: true,\n  number: true,\n  date: true,\n  type: true,\n  contractNumber: true,\n  amount: true,\n  filePath: true,\n});\n\nexport type InsertAct = z.infer<typeof insertActSchema>;\nexport type Act = typeof acts.$inferSelect;\n\n// Invoice table\nexport const invoices = pgTable(\"invoices\", {\n  id: serial(\"id\").primaryKey(),\n  userId: integer(\"user_id\").notNull().references(() => users.id),\n  number: text(\"number\").notNull(),\n  date: timestamp(\"date\").notNull(),\n  contractNumber: text(\"contract_number\"),\n  amount: real(\"amount\").notNull(),\n  status: text(\"status\").notNull(),\n  filePath: text(\"file_path\"),\n});\n\nexport const insertInvoiceSchema = createInsertSchema(invoices).pick({\n  userId: true,\n  number: true,\n  date: true,\n  contractNumber: true,\n  amount: true,\n  status: true,\n  filePath: true,\n});\n\nexport type InsertInvoice = z.infer<typeof insertInvoiceSchema>;\nexport type Invoice = typeof invoices.$inferSelect;\n\n// Payment Schedule table\nexport const paymentSchedules = pgTable(\"payment_schedules\", {\n  id: serial(\"id\").primaryKey(),\n  userId: integer(\"user_id\").notNull().references(() => users.id),\n  paymentNumber: integer(\"payment_number\").notNull(),\n  paymentDate: timestamp(\"payment_date\").notNull(),\n  contractNumber: text(\"contract_number\").notNull(),\n  amount: real(\"amount\").notNull(),\n});\n\nexport const insertPaymentScheduleSchema = createInsertSchema(paymentSchedules).pick({\n  userId: true,\n  paymentNumber: true,\n  paymentDate: true,\n  contractNumber: true,\n  amount: true,\n});\n\nexport type InsertPaymentSchedule = z.infer<typeof insertPaymentScheduleSchema>;\nexport type PaymentSchedule = typeof paymentSchedules.$inferSelect;\n\n// Other Documents table\nexport const otherDocuments = pgTable(\"other_documents\", {\n  id: serial(\"id\").primaryKey(),\n  userId: integer(\"user_id\").notNull().references(() => users.id),\n  name: text(\"name\").notNull(),\n  date: timestamp(\"date\").notNull(),\n  description: text(\"description\"),\n  fileSize: integer(\"file_size\"),\n  fileType: text(\"file_type\"),\n  filePath: text(\"file_path\"),\n});\n\nexport const insertOtherDocumentSchema = createInsertSchema(otherDocuments).pick({\n  userId: true,\n  name: true,\n  date: true,\n  description: true,\n  fileSize: true,\n  fileType: true,\n  filePath: true,\n});\n\nexport type InsertOtherDocument = z.infer<typeof insertOtherDocumentSchema>;\nexport type OtherDocument = typeof otherDocuments.$inferSelect;\n\n// Login schema (for validation)\nexport const loginSchema = z.object({\n  email: z.string().email(\"Неверный формат email\"),\n  password: z.string().min(1, \"Пароль обязателен\"),\n});\n\nexport type LoginData = z.infer<typeof loginSchema>;\n\n// Reset password schema\nexport const resetPasswordSchema = z.object({\n  email: z.string().email(\"Неверный формат email\"),\n});\n\nexport type ResetPasswordData = z.infer<typeof resetPasswordSchema>;\n\n// Change password schema\nexport const changePasswordSchema = z.object({\n  currentPassword: z.string().min(1, \"Текущий пароль обязателен\"),\n  newPassword: z\n    .string()\n    .min(8, \"Пароль должен содержать минимум 8 символов\")\n    .regex(/[A-Z]/, \"Пароль должен содержать хотя бы одну заглавную букву\")\n    .regex(/[0-9]/, \"Пароль должен содержать хотя бы одну цифру\")\n    .regex(/[^A-Za-z0-9]/, \"Пароль должен содержать хотя бы один специальный символ\"),\n  confirmPassword: z.string().min(1, \"Подтверждение пароля обязательно\"),\n}).refine(data => data.newPassword === data.confirmPassword, {\n  message: \"Пароли не совпадают\",\n  path: [\"confirmPassword\"],\n});\n\nexport type ChangePasswordData = z.infer<typeof changePasswordSchema>;\n\n// Registration schema with validation\nexport const registrationSchema = insertUserSchema.extend({\n  password: z\n    .string()\n    .min(8, \"Пароль должен содержать минимум 8 символов\")\n    .regex(/[A-Z]/, \"Пароль должен содержать хотя бы одну заглавную букву\")\n    .regex(/[0-9]/, \"Пароль должен содержать хотя бы одну цифру\")\n    .regex(/[^A-Za-z0-9]/, \"Пароль должен содержать хотя бы один специальный символ\"),\n  confirmPassword: z.string().min(1, \"Подтверждение пароля обязательно\"),\n  inn: z.string().min(10, \"ИНН должен содержать минимум 10 цифр\"),\n}).refine(data => data.password === data.confirmPassword, {\n  message: \"Пароли не совпадают\",\n  path: [\"confirmPassword\"],\n});\n\nexport type RegistrationData = z.infer<typeof registrationSchema>;","size_bytes":7858},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { AuthProvider } from \"./hooks/use-auth\";\nimport { ProtectedRoute } from \"./lib/protected-route\";\n\nimport NotFound from \"@/pages/not-found\";\nimport AuthPage from \"@/pages/auth-page\";\nimport HomePage from \"@/pages/home-page\";\nimport ProfilePage from \"@/pages/profile-page\";\nimport ContractsPage from \"@/pages/contracts-page\";\nimport ActsPage from \"@/pages/acts-page\";\nimport InvoicesPage from \"@/pages/invoices-page\";\nimport PaymentSchedulePage from \"@/pages/payment-schedule-page\";\nimport OtherDocumentsPage from \"@/pages/other-documents-page\";\nimport ChangePasswordPage from \"@/pages/change-password-page\";\nimport MainPage from \"@/pages/main-page\";\nimport ContactsPage from \"@/pages/contacts-page\";\nimport AboutPage from \"@/pages/about-page\";\nimport PartnersPage from './pages/partners';\nimport FAQPage from \"@/pages/faq-page\";\nimport SpectechnikaPage from \"@/pages/services/spectechnika-page\";\nimport OborudovaniePage from \"@/pages/services/oborudovanie-page\";\nimport NedvijimostPage from \"@/pages/services/nedvijimost-page\";\nimport GruzovyeAvtomobiliPage from \"@/pages/services/gruzovye-avtomobili-page\";\nimport VacanciesPage from \"@/pages/clients/vacancies\";\nimport DocumentsPage from \"@/pages/clients/documents\";\nimport PropertyPage from \"@/pages/clients/property\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={MainPage} />\n      <Route path=\"/contacts\" component={ContactsPage} />\n      <Route path=\"/about\" component={AboutPage} />\n      <Route path=\"/partners\" component={PartnersPage} />\n      <Route path=\"/faq\" component={FAQPage} />\n      <Route path=\"/services/spectechnika\" component={SpectechnikaPage} />\n      <Route path=\"/services/oborudovanie\" component={OborudovaniePage} />\n      <Route path=\"/services/nedvijimost\" component={NedvijimostPage} />\n      <Route path=\"/services/gruzovye-avtomobili\" component={GruzovyeAvtomobiliPage} />\n      <Route path=\"/clients/vacancies\" component={VacanciesPage} />\n      <Route path=\"/clients/documents\" component={DocumentsPage} />\n      <Route path=\"/clients/property\" component={PropertyPage} />\n      <Route path=\"/dashboard\" component={HomePage} />\n      <Route path=\"/auth\" component={AuthPage} />\n      <ProtectedRoute path=\"/profile\" component={ProfilePage} />\n      <ProtectedRoute path=\"/contracts\" component={ContractsPage} />\n      <ProtectedRoute path=\"/acts\" component={ActsPage} />\n      <ProtectedRoute path=\"/invoices\" component={InvoicesPage} />\n      <ProtectedRoute path=\"/payment-schedule\" component={PaymentSchedulePage} />\n      <ProtectedRoute path=\"/other-documents\" component={OtherDocumentsPage} />\n      <ProtectedRoute path=\"/change-password\" component={ChangePasswordPage} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <AuthProvider>\n        <Router />\n        <Toaster />\n      </AuthProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;","size_bytes":3176},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  :root {\n    --background: 220 5% 30%; /* #474a51 */\n    --foreground: 0 0% 100%;  /* #ffffff */\n\n    --card: 42 47% 25%;\n    --card-foreground: 0 0% 100%;\n\n    --popover: 42 47% 25%;\n    --popover-foreground: 0 0% 100%;\n\n    --primary: 49.2 45.1% 50%;\n    --primary-foreground: 0 0% 100%;\n\n    --secondary: 42 47% 30%;\n    --secondary-foreground: 0 0% 100%;\n\n    --muted: 42 30% 30%;\n    --muted-foreground: 210 20% 80%;\n\n    --accent: 49.2 45.1% 50%;\n    --accent-foreground: 0 0% 100%;\n\n    --destructive: 0 62.8% 60.6%;\n    --destructive-foreground: 0 0% 100%;\n\n    --border: 42 30% 30%;\n    --input: 42 30% 30%;\n    --ring: 49.2 45.1% 50%;\n\n    --radius: 0.5rem;\n\n    --chart-1: 49.2 45.1% 50%;\n    --chart-2: 0 0% 100%;\n    --chart-3: 49.2 45.1% 60%;\n    --chart-4: 36 100% 50%;\n    --chart-5: 210 40% 98%;\n\n    --sidebar-background: 42 47% 20%;\n    --sidebar-foreground: 0 0% 100%;\n    --sidebar-primary: 49.2 45.1% 50%;\n    --sidebar-primary-foreground: 0 0% 100%;\n    --sidebar-accent: 49.2 45.1% 50%;\n    --sidebar-accent-foreground: 0 0% 100%;\n    --sidebar-border: 42 30% 30%;\n    --sidebar-ring: 49.2 45.1% 50%;\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n    overflow-x: hidden;\n  }\n\n  /* Custom scrollbar for WebKit browsers */\n  ::-webkit-scrollbar {\n    width: 6px;\n    height: 6px;\n  }\n  \n  ::-webkit-scrollbar-track {\n    background: hsl(var(--background));\n  }\n  \n  ::-webkit-scrollbar-thumb {\n    background: hsl(var(--muted));\n    border-radius: 10px;\n  }\n  \n  ::-webkit-scrollbar-thumb:hover {\n    background: hsl(var(--muted-foreground));\n  }\n}\n\n@layer utilities {\n  /* Базовые тени для стеклянных элементов */\n  .shadow-glass {\n    box-shadow: \n      0 4px 15px -1px rgba(0, 0, 0, 0.2), \n      0 2px 8px -1px rgba(0, 0, 0, 0.1), \n      0 0 0 1px rgba(255, 255, 255, 0.05) inset,\n      0 0 20px rgba(185, 160, 70, 0.1);\n  }\n\n  .shadow-glass-hover {\n    box-shadow: \n      0 10px 25px -3px rgba(0, 0, 0, 0.25), \n      0 4px 10px -2px rgba(0, 0, 0, 0.15), \n      0 0 0 1px rgba(255, 255, 255, 0.1) inset,\n      0 0 30px rgba(185, 160, 70, 0.15);\n  }\n\n  /* Основной стеклянный эффект */\n  .glass {\n    background: rgba(71, 74, 81, 0.5);\n    backdrop-filter: blur(12px);\n    -webkit-backdrop-filter: blur(12px);\n    border: 1px solid rgba(255, 255, 255, 0.08);\n    transition: all 0.3s ease;\n    box-shadow: \n      0 8px 20px rgba(0, 0, 0, 0.2),\n      0 0 0 1px rgba(255, 255, 255, 0.08) inset,\n      0 0 15px rgba(185, 160, 70, 0.08);\n  }\n\n  /* Вариации стеклянного эффекта */\n  .glass-lighter {\n    background: rgba(81, 84, 91, 0.4);\n    backdrop-filter: blur(12px);\n    -webkit-backdrop-filter: blur(12px);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n  }\n\n  .glass-darker {\n    background: rgba(51, 54, 61, 0.6);\n    backdrop-filter: blur(15px);\n    -webkit-backdrop-filter: blur(15px);\n    border: 1px solid rgba(255, 255, 255, 0.06);\n  }\n\n  /* Стеклянный эффект при наведении */\n  .glass-hover:hover {\n    background: rgba(71, 74, 81, 0.6);\n    box-shadow: \n      0 15px 30px rgba(0, 0, 0, 0.25), \n      0 0 0 1px rgba(255, 255, 255, 0.12) inset,\n      0 0 20px rgba(185, 160, 70, 0.15);\n    border: 1px solid rgba(255, 255, 255, 0.12);\n    transform: translateY(-3px);\n    transition: all 0.3s ease;\n  }\n\n  /* Подсветка золотыми акцентами */\n  .glass-gold-accent {\n    border: 1px solid rgba(185, 160, 70, 0.3);\n    box-shadow: \n      0 8px 20px rgba(0, 0, 0, 0.2),\n      0 0 30px rgba(185, 160, 70, 0.15);\n  }\n\n  .glass-gold-accent:hover {\n    border: 1px solid rgba(185, 160, 70, 0.5);\n    box-shadow: \n      0 15px 30px rgba(0, 0, 0, 0.25),\n      0 0 40px rgba(185, 160, 70, 0.25);\n  }\n\n  /* Кнопки со стеклянным эффектом */\n  .btn-glass {\n    background: rgba(71, 74, 81, 0.5);\n    backdrop-filter: blur(10px);\n    -webkit-backdrop-filter: blur(10px);\n    border: 1px solid rgba(255, 255, 255, 0.08);\n    border-radius: var(--radius);\n    transition: all 0.3s ease;\n    box-shadow: \n      0 4px 10px rgba(0, 0, 0, 0.15),\n      0 0 0 1px rgba(255, 255, 255, 0.05) inset;\n  }\n\n  .btn-glass:hover {\n    background: rgba(81, 84, 91, 0.6);\n    box-shadow: \n      0 8px 20px rgba(0, 0, 0, 0.2),\n      0 0 0 1px rgba(255, 255, 255, 0.1) inset,\n      0 0 15px rgba(185, 160, 70, 0.1);\n    transform: translateY(-2px);\n  }\n\n  /* Анимации */\n  @keyframes fadeIn {\n    from { opacity: 0; transform: translateY(10px); }\n    to { opacity: 1; transform: translateY(0); }\n  }\n  \n  .animate-fadeIn {\n    animation: fadeIn 0.3s ease forwards;\n  }\n\n  @keyframes glassPulse {\n    0% { box-shadow: 0 0 0 0 rgba(185, 160, 70, 0.4); }\n    70% { box-shadow: 0 0 0 10px rgba(185, 160, 70, 0); }\n    100% { box-shadow: 0 0 0 0 rgba(185, 160, 70, 0); }\n  }\n  \n  .animate-glass-pulse {\n    animation: glassPulse 2s infinite;\n  }\n}\n","size_bytes":5071},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/calculator.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Slider } from \"@/components/ui/slider\";\n\nexport function Calculator() {\n  const [carPrice, setCarPrice] = useState(1000000);\n  const [initialPayment, setInitialPayment] = useState(20);\n  const [leaseTerm, setLeaseTerm] = useState(36);\n  \n  // Расчет ежемесячного платежа\n  const calculateMonthlyPayment = () => {\n    const initialAmount = (carPrice * initialPayment) / 100;\n    const leasedAmount = carPrice - initialAmount;\n    const interestRate = 0.09 / 12; // 9% годовых, переведенные в месячную ставку\n    \n    // Формула расчета ежемесячного платежа\n    const payment = (leasedAmount * interestRate * Math.pow(1 + interestRate, leaseTerm)) / \n                   (Math.pow(1 + interestRate, leaseTerm) - 1);\n    \n    return Math.round(payment);\n  };\n\n  // Получаем расчетные значения\n  const monthlyPayment = calculateMonthlyPayment();\n  const initialAmount = Math.round((carPrice * initialPayment) / 100);\n  const totalAmount = initialAmount + (monthlyPayment * leaseTerm);\n\n  // Обработчики изменения параметров\n  const handleCarPriceChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseFloat(e.target.value.replace(/[^\\d]/g, \"\"));\n    setCarPrice(isNaN(value) ? 0 : value);\n  };\n\n  const handleInitialPaymentChange = (value: number[]) => {\n    setInitialPayment(value[0]);\n  };\n\n  const handleLeaseTermChange = (value: number[]) => {\n    setLeaseTerm(value[0]);\n  };\n\n  // Форматирование чисел для удобного отображения\n  const formatNumber = (num: number) => {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n  };\n\n  return (\n    <div className=\"w-full glass backdrop-blur-md p-6 rounded-xl relative overflow-hidden border border-primary/20\">\n      <h3 className=\"text-xl font-semibold mb-6 relative\">\n        Калькулятор лизинга\n        <div className=\"absolute -bottom-2 left-1/2 transform -translate-x-1/2 w-20 h-[1px] bg-gradient-to-r from-transparent via-primary/70 to-transparent\"></div>\n      </h3>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-10\">\n        {/* Левая колонка - ввод параметров */}\n        <div className=\"space-y-6\">\n          <div className=\"space-y-3\">\n            <div className=\"flex justify-between\">\n              <Label htmlFor=\"car-price\">Стоимость имущества, ₽</Label>\n              <span className=\"text-primary font-semibold\">\n                {formatNumber(carPrice)} ₽\n              </span>\n            </div>\n            <Slider\n              value={[carPrice]}\n              min={500000}\n              max={30000000}\n              step={100000}\n              onValueChange={(value) => setCarPrice(value[0])}\n              className=\"my-4\"\n            />\n            <div className=\"flex justify-between text-sm text-muted-foreground\">\n              <span>500 000 ₽</span>\n              <span>30 000 000 ₽</span>\n            </div>\n            <Input\n              id=\"car-price\"\n              value={formatNumber(carPrice)}\n              onChange={handleCarPriceChange}\n              className=\"bg-background/30 border-primary/30 mt-2\"\n            />\n          </div>\n          \n          <div className=\"space-y-3\">\n            <div className=\"flex justify-between\">\n              <Label>Первоначальный взнос, {initialPayment}%</Label>\n              <span className=\"text-primary font-semibold\">\n                {formatNumber(initialAmount)} ₽\n              </span>\n            </div>\n            <Slider\n              value={[initialPayment]}\n              min={10}\n              max={60}\n              step={1}\n              onValueChange={handleInitialPaymentChange}\n              className=\"my-4\"\n            />\n            <div className=\"flex justify-between text-sm text-muted-foreground\">\n              <span>10%</span>\n              <span>60%</span>\n            </div>\n          </div>\n          \n          <div className=\"space-y-3\">\n            <div className=\"flex justify-between\">\n              <Label>Срок лизинга, {leaseTerm} мес.</Label>\n            </div>\n            <Slider\n              value={[leaseTerm]}\n              min={12}\n              max={60}\n              step={12}\n              onValueChange={handleLeaseTermChange}\n              className=\"my-4\"\n            />\n            <div className=\"flex justify-between text-sm text-muted-foreground\">\n              <span>12 мес.</span>\n              <span>60 мес.</span>\n            </div>\n          </div>\n        </div>\n        \n        {/* Правая колонка - результаты */}\n        <div className=\"flex flex-col justify-between h-full\">\n          <div className=\"space-y-8\">\n            <div className=\"glass backdrop-blur-lg bg-background/20 p-5 rounded-xl border border-primary/20\">\n              <div className=\"text-lg text-muted-foreground mb-1\">Ежемесячный платеж</div>\n              <div className=\"text-3xl font-bold text-primary\">{formatNumber(monthlyPayment)} ₽</div>\n            </div>\n            \n            <div>\n              <div className=\"mb-4\">\n                <div className=\"text-sm text-muted-foreground mb-1\">Первоначальный взнос</div>\n                <div className=\"text-lg font-semibold\">{formatNumber(initialAmount)} ₽</div>\n              </div>\n              \n              <div className=\"mb-4\">\n                <div className=\"text-sm text-muted-foreground mb-1\">Сумма договора лизинга</div>\n                <div className=\"text-lg font-semibold\">{formatNumber(totalAmount)} ₽</div>\n              </div>\n            </div>\n          </div>\n          \n          <Button className=\"w-full mt-6\" size=\"lg\">\n            Оставить заявку на лизинг\n          </Button>\n        </div>\n      </div>\n      \n      {/* Decorative элементы */}\n      <div className=\"absolute top-10 right-10 w-20 h-20 rounded-full bg-primary/5 blur-xl\"></div>\n      <div className=\"absolute bottom-0 left-0 right-0 h-[1px] bg-gradient-to-r from-transparent via-primary/80 to-transparent\"></div>\n    </div>\n  );\n}","size_bytes":6498},"client/src/components/interactive-map.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { \n  Popover,\n  PopoverContent,\n  PopoverTrigger\n} from \"@/components/ui/popover\";\nimport { Button } from \"@/components/ui/button\";\nimport { ChevronDown } from \"lucide-react\";\n\ninterface Region {\n  id: string;\n  code: string;\n  name: string;\n  city: string;\n  address: string;\n  phone: string;\n  email: string;\n}\n\nimport { MapPin, Phone, Mail, Clock } from \"lucide-react\";\n\nexport function InteractiveMap() {\n  const [selectedRegion, setSelectedRegion] = useState<Region | null>(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [mapLoaded, setMapLoaded] = useState(false);\n\n  // Set map as loaded after component mount for animation purposes\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setMapLoaded(true);\n    }, 300);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const regions: Region[] = [\n    {\n      id: \"krasnodar\",\n      code: \"RU-KDA\",\n      name: \"Краснодарский край\",\n      city: \"Краснодар\",\n      address: \"г. Краснодар ул. Российская д. 388 офис 5\",\n      phone: \"+7 (919) 110-70-55\",\n      email: \"info@investl.ru\"\n    },\n    {\n      id: \"leningrad\",\n      code: \"RU-LEN\",\n      name: \"Ленинградская область\",\n      city: \"Санкт-Петербург\",\n      address: \"г. Санкт-Петербург, пр. Энергетиков, д. 4к1, БЦ Амбер Холл, оф. 1206\",\n      phone: \"+7 (921) 951-20-70\",\n      email: \"info@investl.ru\"\n    },\n    {\n      id: \"nn\",\n      code: \"RU-NIZ\",\n      name: \"Нижегородская область\",\n      city: \"Нижний Новгород\",\n      address: \"603040, г. Нижний Новгород, проспект Союзный, д. 45, офис 11 (этаж 4), Бизнес центр \\\"Володарский\\\"\",\n      phone: \"+7 (919) 110-70-66\",\n      email: \"info@investl.ru\"\n    },\n    {\n      id: \"tambov\",\n      code: \"RU-TAM\",\n      name: \"Тамбовская область\",\n      city: \"Тамбов\",\n      address: \"г. Тамбов, улица Мичуринская 146, оф 7\",\n      phone: \"+7 (919) 110-70-25\",\n      email: \"info@investl.ru\"\n    },\n    {\n      id: \"samara\",\n      code: \"RU-SAM\",\n      name: \"Самарская область\",\n      city: \"Тольятти\",\n      address: \"445030, Самарская обл., г. Тольятти, ул. 70 лет Октября, д.31А\",\n      phone: \"+7 (919) 110-70-15\",\n      email: \"info@investl.ru\"\n    },\n    {\n      id: \"tyumen\",\n      code: \"RU-TYU\",\n      name: \"Тюменская область\",\n      city: \"Тюмень\",\n      address: \"625007, г. Тюмень, ул. 30 лет Победы, д. 38А, офис 53\",\n      phone: \"+7 (3452) 39-34-83\",\n      email: \"info@investl.ru\"\n    },\n    {\n      id: \"ulyanovsk\",\n      code: \"RU-ULY\",\n      name: \"Ульяновская область\",\n      city: \"Ульяновск\",\n      address: \"432072, г. Ульяновск, проспект Туполева, д. 31, стр. 1 (этаж 1), Бизнес центр \\\"Взлетный\\\"\",\n      phone: \"+7 (982) 370-04-26\",\n      email: \"info@investl.ru\"\n    },\n    {\n      id: \"bashkortostan\",\n      code: \"RU-BA\",\n      name: \"Республика Башкортостан\",\n      city: \"Уфа\",\n      address: \"Республика Башкортостан, г. Уфа, ул. Кирова, д.128, корпус 2, пом.4\",\n      phone: \"+7 (919) 110-70-06\",\n      email: \"info@investl.ru\"\n    },\n    {\n      id: \"chelyabinsk\",\n      code: \"RU-CHE\",\n      name: \"Челябинская область\",\n      city: \"Челябинск\",\n      address: \"454084, г. Челябинск, проспект Победы, д. 147-A, 1 этаж\",\n      phone: \"+7 (351) 791-06-46\",\n      email: \"info@investl.ru\"\n    }\n  ];\n\n  const handleSelectRegion = (region: Region) => {\n    setSelectedRegion(region);\n    setIsOpen(false);\n  };\n\n  const defaultRegion = regions.find(r => r.id === \"krasnodar\") || regions[0];\n\n  return (\n    <div className=\"flex flex-col gap-4 items-start\">\n      <div id=\"map\" className=\"w-full glass backdrop-blur-md p-6 rounded-xl text-center relative overflow-hidden border border-primary/20\">\n        <h3 className=\"text-xl font-semibold mb-6 relative\">\n          Наши филиалы на карте России\n          <div className=\"absolute -bottom-2 left-1/2 transform -translate-x-1/2 w-20 h-[1px] bg-gradient-to-r from-transparent via-primary/70 to-transparent\"></div>\n        </h3>\n        \n        {/* Верхние блоки в ряд */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n          {/* Выпадающий список и контактная информация - слева */}\n          <div className={`glass backdrop-blur-md bg-background/20 rounded-xl p-5 border border-primary/10 shadow-lg transition-all duration-500 ${mapLoaded ? 'opacity-100 translate-y-0' : 'opacity-0 -translate-y-4'}`}>\n            <Popover open={isOpen} onOpenChange={setIsOpen}>\n              <PopoverTrigger asChild>\n                <Button variant=\"outline\" className=\"w-full justify-between bg-background/30 mb-4 border-primary/30 hover:bg-primary/10 transition-all\">\n                  {selectedRegion ? selectedRegion.city : defaultRegion.city}\n                  <ChevronDown className=\"ml-2 h-4 w-4 shrink-0 opacity-70\" />\n                </Button>\n              </PopoverTrigger>\n              <PopoverContent className=\"w-full p-0 glass backdrop-blur-md border-primary/20\" align=\"start\">\n                <div className=\"max-h-[300px] overflow-auto\">\n                  {regions.map((region) => (\n                    <Button\n                      key={region.id}\n                      variant=\"ghost\"\n                      className=\"w-full justify-start rounded-none hover:bg-primary/10 hover:text-primary-foreground transition-colors\"\n                      onClick={() => handleSelectRegion(region)}\n                    >\n                      {region.city}\n                    </Button>\n                  ))}\n                </div>\n              </PopoverContent>\n            </Popover>\n            \n            <div className=\"space-y-4 text-left\">\n              <div className=\"flex items-start gap-3 group\">\n                <MapPin className=\"h-5 w-5 mt-0.5 text-primary shrink-0 group-hover:scale-110 transition-transform\" />\n                <span className=\"text-sm text-muted-foreground\">\n                  {selectedRegion ? selectedRegion.address : defaultRegion.address}\n                </span>\n              </div>\n              <div className=\"flex items-start gap-3 group\">\n                <Phone className=\"h-5 w-5 mt-0.5 text-primary shrink-0 group-hover:scale-110 transition-transform\" />\n                <span className=\"text-sm text-muted-foreground\">\n                  {selectedRegion ? selectedRegion.phone : defaultRegion.phone}\n                </span>\n              </div>\n              <div className=\"flex items-start gap-3 group\">\n                <Mail className=\"h-5 w-5 mt-0.5 text-primary shrink-0 group-hover:scale-110 transition-transform\" />\n                <span className=\"text-sm text-muted-foreground\">\n                  {selectedRegion ? selectedRegion.email : defaultRegion.email}\n                </span>\n              </div>\n            </div>\n          </div>\n          \n          {/* Время работы - справа */}\n          <div className={`glass backdrop-blur-md bg-background/20 rounded-xl p-5 border border-primary/10 shadow-lg transition-all duration-500 delay-100 ${mapLoaded ? 'opacity-100 translate-y-0' : 'opacity-0 -translate-y-4'}`}>\n            <h4 className=\"font-medium mb-4 flex items-center text-left border-b border-primary/10 pb-2\">\n              <Clock className=\"h-5 w-5 mr-2 text-primary\" />\n              Время работы\n            </h4>\n            <div className=\"flex justify-between text-sm mb-3 px-2\">\n              <span>Понедельник - Пятница</span>\n              <span className=\"text-muted-foreground\">9:00 - 18:00</span>\n            </div>\n            <div className=\"flex justify-between text-sm px-2\">\n              <span>Суббота - Воскресенье</span>\n              <span className=\"text-muted-foreground\">Выходной</span>\n            </div>\n          </div>\n        </div>\n        \n        {/* Карта России */}\n        <div className={`h-[400px] glass backdrop-blur-lg bg-background/20 rounded-xl overflow-hidden p-6 transition-all duration-700 ${mapLoaded ? 'opacity-100' : 'opacity-0 translate-y-4'}`}>\n          <div className=\"w-full h-full flex items-center justify-center\">\n            <img \n              src=\"data:image/svg+xml,%3Csvg%20width%3D%221200%22%20height%3D%22600%22%20viewBox%3D%220%200%201200%20600%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cstyle%3E.region%7Bfill%3A%231a1a1a%3Bstroke%3A%23333%3Bstroke-width%3A1%3B%7D%3C%2Fstyle%3E%3Cg%3E%3Cpath%20class%3D%22region%22%20d%3D%22M300%2C200%20L320%2C180%20L350%2C190%20L340%2C220%20L310%2C230%20Z%22%20%2F%3E%3Cpath%20class%3D%22region%22%20d%3D%22M330%2C250%20L350%2C230%20L380%2C240%20L370%2C270%20L340%2C280%20Z%22%20%2F%3E%3Cpath%20class%3D%22region%22%20d%3D%22M280%2C350%20L300%2C330%20L330%2C340%20L320%2C370%20L290%2C380%20Z%22%20%2F%3E%3Cpath%20class%3D%22region%22%20d%3D%22M420%2C250%20L440%2C230%20L470%2C240%20L460%2C270%20L430%2C280%20Z%22%20%2F%3E%3Cpath%20class%3D%22region%22%20d%3D%22M470%2C280%20L490%2C260%20L520%2C270%20L510%2C300%20L480%2C310%20Z%22%20%2F%3E%3Cpath%20class%3D%22region%22%20d%3D%22M600%2C230%20L620%2C210%20L650%2C220%20L640%2C250%20L610%2C260%20Z%22%20%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E\" \n              alt=\"Карта России\" \n              className=\"w-full h-full object-contain\" \n            />\n          </div>\n        </div>\n        \n        {/* Decorative element - gold gradient line */}\n        <div className=\"absolute bottom-0 left-0 right-0 h-[1px] bg-gradient-to-r from-transparent via-primary/80 to-transparent\"></div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":10147},"client/src/components/services-section.tsx":{"content":"import { Link } from \"wouter\";\nimport { Card } from \"@/components/ui/card\";\nimport { ArrowRight } from \"lucide-react\";\n\ntype ServiceCardProps = {\n  title: string;\n  href: string;\n  imageUrl: string;\n};\n\nconst ServiceCard = ({ title, href, imageUrl }: ServiceCardProps) => {\n  return (\n    <Link href={href}>\n      <div className=\"block group cursor-pointer\">\n        <Card className=\"overflow-hidden glass backdrop-blur-sm bg-background/30 transition-all duration-300 group-hover:shadow-xl border-border h-full\">\n          <div className=\"relative overflow-hidden aspect-[16/9]\">\n            <img \n              src={imageUrl} \n              alt={title} \n              className=\"w-full h-full object-cover transition-transform duration-500 ease-in-out group-hover:scale-110\" \n            />\n            <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 to-transparent\"></div>\n            <div className=\"absolute bottom-0 left-0 p-4\">\n              <h3 className=\"text-xl font-semibold text-white mb-2\">{title}</h3>\n              <div className=\"flex items-center text-primary opacity-0 transform translate-x-6 group-hover:opacity-100 group-hover:translate-x-0 transition-all duration-300\">\n                Подробнее <ArrowRight className=\"ml-2 h-4 w-4\" />\n              </div>\n            </div>\n          </div>\n        </Card>\n      </div>\n    </Link>\n  );\n};\n\nexport const ServicesSection = () => {\n  const services = [\n    {\n      title: \"Спецтехника\",\n      href: \"/services/spectechnika\",\n      imageUrl: \"https://www.investl.ru/upload/iblock/98a/f010903dlnn3hpojsb78yw2bxy01p6hq.jpg\"\n    },\n    {\n      title: \"Оборудование\",\n      href: \"/services/oborudovanie\",\n      imageUrl: \"https://www.investl.ru/upload/iblock/820/ihc8bc040ttyajj79ktclack2j5zxmtx.jpg\"\n    },\n    {\n      title: \"Недвижимость\",\n      href: \"/services/nedvijimost\",\n      imageUrl: \"https://www.investl.ru/upload/iblock/231/ltsbxmgv90651vmmryronip3dn320lns.jpg\"\n    },\n    {\n      title: \"Легковые и грузовые автомобили\",\n      href: \"/services/gruzovye-avtomobili\",\n      imageUrl: \"https://www.investl.ru/upload/iblock/cdf/vjhbwdw8m9e6emeb1jocekic37t4uhpj.jpg\"\n    }\n  ];\n\n  return (\n    <section id=\"services\" className=\"py-20 relative overflow-hidden\">\n      {/* Subtle background effects for VisionOS look */}\n      <div className=\"absolute top-40 left-40 w-96 h-96 rounded-full bg-primary opacity-5 blur-3xl\"></div>\n      <div className=\"absolute bottom-40 right-40 w-96 h-96 rounded-full bg-primary opacity-5 blur-3xl\"></div>\n      \n      <div className=\"container mx-auto px-4 relative z-10\">\n        <div className=\"text-center max-w-2xl mx-auto mb-16\">\n          <h2 className=\"text-3xl md:text-4xl font-bold mb-6\">Подбираем лизинговые продукты под каждого клиента</h2>\n          <p className=\"text-muted-foreground text-lg\">\n            ООО «ИНВЕСТ-лизинг» - надежный партнер для всех, кто стремится к успешному развитию своего бизнеса. \n            Наша команда нацелена на долгосрочные партнерские отношения с клиентами и всегда идет навстречу их потребностям.\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {services.map((service, index) => (\n            <ServiceCard \n              key={index}\n              title={service.title}\n              href={service.href}\n              imageUrl={service.imageUrl}\n            />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n","size_bytes":3772},"client/src/components/simple-russia-map.tsx":{"content":"import { useState, useEffect, useRef } from 'react';\nimport '@/styles/russia-map.css';\n\ninterface Region {\n  id: string;\n  name: string;\n  code: string;\n  city: string;\n  address: string;\n  phone: string;\n  email: string;\n}\n\ninterface SimpleRussiaMapProps {\n  regions: Region[];\n  onRegionSelect: (region: Region) => void;\n}\n\nexport const SimpleRussiaMap = ({ regions, onRegionSelect }: SimpleRussiaMapProps) => {\n  const [hoveredRegion, setHoveredRegion] = useState<string | null>(null);\n  const [activeRegion, setActiveRegion] = useState<string | null>(\"krasnodar\");\n  const [isMapReady, setIsMapReady] = useState(false);\n  const mapPointsRef = useRef<HTMLDivElement>(null);\n  \n  // Initialize map with animation\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsMapReady(true);\n    }, 500);\n    return () => clearTimeout(timer);\n  }, []);\n  \n  // Add pulse effects to map points\n  useEffect(() => {\n    if (!isMapReady || !mapPointsRef.current) return;\n    \n    // Clear any existing pulse elements first\n    const existingPulses = mapPointsRef.current.querySelectorAll('.map-point-pulse');\n    existingPulses.forEach(pulse => pulse.remove());\n    \n    // Add pulse for each region with staggered delay for visual effect\n    regions.forEach((region, index) => {\n      const coordinates = getPointPosition(region.code);\n      if (!coordinates.left || !coordinates.top) return;\n      \n      const pulse = document.createElement('div');\n      pulse.className = 'map-point-pulse';\n      pulse.style.left = coordinates.left as string; \n      pulse.style.top = coordinates.top as string;\n      \n      // Add staggered animation delay\n      pulse.style.animationDelay = `${index * 0.2}s`;\n      \n      if (mapPointsRef.current) {\n        mapPointsRef.current.appendChild(pulse);\n      }\n    });\n  }, [regions, isMapReady]);\n  \n  const handleRegionHover = (code: string, isHovering: boolean) => {\n    if (isHovering) {\n      setHoveredRegion(code);\n    } else {\n      setHoveredRegion(null);\n    }\n  };\n  \n  const handleRegionClick = (code: string) => {\n    const region = regions.find(r => r.code === code);\n    if (region) {\n      setActiveRegion(region.id);\n      onRegionSelect(region);\n    }\n  };\n  \n  return (\n    <div className={`simple-russia-map-container transition-opacity duration-1000 ${isMapReady ? 'opacity-100' : 'opacity-0'}`}>      \n      <div className=\"map-container\">\n        {/* Карта России в виде точек городов */}\n        <div className=\"map-outline\">\n          <div className=\"map-background\">\n            <div className=\"map-svg-container\">\n              <div className=\"russia-map-outline glow-effect\"></div>\n            </div>\n            <div className=\"map-title\">\n              Карта филиалов\n              <div className=\"h-[1px] w-24 mx-auto mt-1 bg-gradient-to-r from-transparent via-primary/40 to-transparent\"></div>\n            </div>\n          </div>\n          \n          {/* Точки для каждого региона на карте */}\n          <div className=\"map-points\" ref={mapPointsRef}>\n            {regions.map((region, index) => (\n              <div\n                key={region.id}\n                className={`map-point ${hoveredRegion === region.code || activeRegion === region.id ? 'active' : ''}`}\n                style={{\n                  left: getPointPosition(region.code).left as string,\n                  top: getPointPosition(region.code).top as string,\n                  transitionDelay: isMapReady ? `${index * 0.05}s` : '0s'\n                }}\n                onMouseEnter={() => handleRegionHover(region.code, true)}\n                onMouseLeave={() => handleRegionHover(region.code, false)}\n                onClick={() => handleRegionClick(region.code)}\n              >\n                {hoveredRegion === region.code && (\n                  <div className=\"city-label\">\n                    {region.city}\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n          \n          {/* Add subtle panning gradient effect */}\n          <div className=\"absolute inset-0 pointer-events-none opacity-20 shimmer-effect\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Функция для определения позиции точки на карте для каждого региона\nconst getPointPosition = (code: string): React.CSSProperties => {\n  // Координаты для каждого региона (в процентах от размера контейнера)\n  const coordinates: Record<string, { left: string; top: string }> = {\n    'RU-KDA': { left: '23%', top: '75%' },     // Краснодар\n    'RU-LEN': { left: '27%', top: '26%' },     // Санкт-Петербург\n    'RU-NIZ': { left: '35%', top: '46%' },     // Нижний Новгород\n    'RU-TAM': { left: '32%', top: '53%' },     // Тамбов\n    'RU-SAM': { left: '43%', top: '56%' },     // Тольятти\n    'RU-TYU': { left: '58%', top: '43%' },     // Тюмень\n    'RU-ULY': { left: '39%', top: '54%' },     // Ульяновск\n    'RU-BA': { left: '48%', top: '52%' },      // Уфа\n    'RU-CHE': { left: '52%', top: '48%' }      // Челябинск\n  };\n  \n  return coordinates[code] || { left: '50%', top: '50%' }; // Дефолтная позиция\n};\n","size_bytes":5350},"client/src/hooks/use-auth.tsx":{"content":"import { createContext, ReactNode, useContext } from \"react\";\nimport {\n  useQuery,\n  useMutation,\n  UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { User, LoginData, RegistrationData, ResetPasswordData, ChangePasswordData } from \"@shared/schema\";\nimport { getQueryFn, apiRequest, queryClient } from \"../lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ntype AuthContextType = {\n  user: User | null;\n  isLoading: boolean;\n  error: Error | null;\n  isAuthenticated: boolean;\n  loginMutation: UseMutationResult<User, Error, LoginData>;\n  logoutMutation: UseMutationResult<void, Error, void>;\n  registerMutation: UseMutationResult<User, Error, RegistrationData>;\n  resetPasswordMutation: UseMutationResult<{ success: boolean; message: string }, Error, ResetPasswordData>;\n  changePasswordMutation: UseMutationResult<{ success: boolean; message: string }, Error, ChangePasswordData>;\n};\n\nexport const AuthContext = createContext<AuthContextType | null>(null);\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const { toast } = useToast();\n  const {\n    data: user,\n    error,\n    isLoading,\n  } = useQuery<User | undefined, Error>({\n    queryKey: [\"/api/user\"],\n    queryFn: getQueryFn({ on401: \"returnNull\" }),\n  });\n\n  const loginMutation = useMutation({\n    mutationFn: async (credentials: LoginData) => {\n      const res = await apiRequest(\"POST\", \"/api/login\", credentials);\n      return await res.json();\n    },\n    onSuccess: (user: User) => {\n      queryClient.setQueryData([\"/api/user\"], user);\n      toast({\n        title: \"Успешный вход\",\n        description: \"Вы успешно вошли в систему\",\n      });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"Ошибка входа\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const registerMutation = useMutation({\n    mutationFn: async (credentials: RegistrationData) => {\n      const res = await apiRequest(\"POST\", \"/api/register\", credentials);\n      return await res.json();\n    },\n    onSuccess: (user: User) => {\n      queryClient.setQueryData([\"/api/user\"], user);\n      toast({\n        title: \"Успешная регистрация\",\n        description: \"Вы успешно зарегистрировались и вошли в систему\",\n      });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"Ошибка регистрации\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const logoutMutation = useMutation({\n    mutationFn: async () => {\n      await apiRequest(\"POST\", \"/api/logout\");\n    },\n    onSuccess: () => {\n      queryClient.setQueryData([\"/api/user\"], null);\n      toast({\n        title: \"Выход из системы\",\n        description: \"Вы успешно вышли из системы\",\n      });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"Ошибка выхода\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const resetPasswordMutation = useMutation({\n    mutationFn: async (data: ResetPasswordData) => {\n      const res = await apiRequest(\"POST\", \"/api/reset-password\", data);\n      return await res.json();\n    },\n    onSuccess: (data) => {\n      toast({\n        title: \"Восстановление пароля\",\n        description: data.message,\n      });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"Ошибка восстановления пароля\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const changePasswordMutation = useMutation({\n    mutationFn: async (data: ChangePasswordData) => {\n      const res = await apiRequest(\"POST\", \"/api/change-password\", data);\n      return await res.json();\n    },\n    onSuccess: (data) => {\n      toast({\n        title: \"Смена пароля\",\n        description: data.message,\n      });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"Ошибка при смене пароля\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: user ?? null,\n        isLoading,\n        error,\n        isAuthenticated: !!user,\n        loginMutation,\n        logoutMutation,\n        registerMutation,\n        resetPasswordMutation,\n        changePasswordMutation,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}","size_bytes":4762},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/protected-route.tsx":{"content":"import { useAuth } from \"@/hooks/use-auth\";\nimport { Loader2 } from \"lucide-react\";\nimport { Redirect, Route } from \"wouter\";\n\nexport function ProtectedRoute({\n  path,\n  component: Component,\n}: {\n  path: string;\n  component: () => React.JSX.Element;\n}) {\n  const { user, isLoading } = useAuth();\n\n  if (isLoading) {\n    return (\n      <Route path={path}>\n        <div className=\"flex items-center justify-center min-h-screen bg-background\">\n          <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n        </div>\n      </Route>\n    );\n  }\n\n  if (!user) {\n    return (\n      <Route path={path}>\n        <Redirect to=\"/auth\" />\n      </Route>\n    );\n  }\n\n  return <Route path={path} component={Component} />;\n}\n","size_bytes":721},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method: method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey[0] as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1372},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/about-page.tsx":{"content":"import { MainLayout } from \"@/components/layout/main-layout\";\nimport { AboutSection } from \"@/components/main-site/about-section\";\n\nconst AboutPage = () => {\n  return (\n    <MainLayout>\n      <div className=\"py-16\">\n        <AboutSection />\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default AboutPage;","size_bytes":306},"client/src/pages/acts-page.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { DashboardLayout } from \"@/components/layout/dashboard-layout\";\nimport { Card } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { DataTable } from \"@/components/ui/data-table\";\nimport { Pagination } from \"@/components/ui/pagination\";\nimport { DocumentPreviewModal } from \"@/components/ui/document-preview-modal\";\nimport { apiRequest, queryClient } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useSyncDocuments } from \"@/hooks/use-sync-documents\";\nimport { Loader2, Search, Filter, Download, Eye, FileText, RefreshCw } from \"lucide-react\";\n\ninterface Act {\n  id: number;\n  userId: number;\n  number: string;\n  date: string;\n  type: string;\n  contractNumber: string;\n  amount: number;\n  filePath?: string;\n}\n\nconst ActsPage = () => {\n  const [search, setSearch] = useState(\"\");\n  const [selectedAct, setSelectedAct] = useState<Act | null>(null);\n  const [isPreviewOpen, setIsPreviewOpen] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10;\n  const { toast } = useToast();\n  \n  // Fetch acts data\n  const { data: acts, isLoading } = useQuery<Act[]>({\n    queryKey: [\"/api/acts\"],\n  });\n  \n  // Sync documents hook\n  const syncDocuments = useSyncDocuments();\n  \n  // Request reconciliation act mutation\n  const requestReconciliationMutation = useMutation({\n    mutationFn: async () => {\n      const res = await apiRequest(\"POST\", \"/api/acts/request-reconciliation\", {});\n      return await res.json();\n    },\n    onSuccess: (data) => {\n      toast({\n        title: \"Запрос отправлен\",\n        description: data.message,\n      });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"Ошибка запроса\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n  \n  // Filter acts based on search term\n  const filteredActs = acts?.filter(act => \n    act.number.toLowerCase().includes(search.toLowerCase()) ||\n    act.type.toLowerCase().includes(search.toLowerCase()) ||\n    act.contractNumber.toLowerCase().includes(search.toLowerCase())\n  ) || [];\n  \n  // Calculate pagination\n  const totalPages = Math.ceil((filteredActs?.length || 0) / itemsPerPage);\n  const paginatedActs = filteredActs.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n\n  // Handle preview\n  const handlePreview = (act: Act) => {\n    setSelectedAct(act);\n    setIsPreviewOpen(true);\n  };\n\n  // Handle download\n  const handleDownload = async (documentId: number, documentType: string) => {\n    try {\n      const response = await apiRequest(\"GET\", `/api/download-document?id=${documentId}&type=${documentType}`);\n      \n      if (!response.ok) {\n        throw new Error('Ошибка загрузки документа');\n      }\n      \n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.style.display = 'none';\n      a.href = url;\n      a.download = `Акт_${documentId}.pdf`;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n      \n      toast({\n        title: \"Успешно\",\n        description: \"Документ успешно скачан\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Ошибка\",\n        description: error instanceof Error ? error.message : \"Ошибка загрузки документа\",\n        variant: \"destructive\",\n      });\n    }\n  };\n  \n  // Format date\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ru-RU');\n  };\n  \n  // Format amount\n  const formatAmount = (amount: number) => {\n    return new Intl.NumberFormat('ru-RU').format(amount);\n  };\n\n  return (\n    <DashboardLayout>\n      <Card className=\"animate-fadeIn glass rounded-xl p-6 mb-6\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-2xl font-semibold\">Акты</h2>\n          \n          <div className=\"flex\">\n            <Button \n              variant=\"default\" \n              className=\"mr-2 flex items-center gap-2\"\n              onClick={() => requestReconciliationMutation.mutate()}\n              disabled={requestReconciliationMutation.isPending}\n            >\n              {requestReconciliationMutation.isPending ? (\n                <Loader2 className=\"h-4 w-4 animate-spin\" />\n              ) : (\n                <FileText className=\"h-4 w-4\" />\n              )}\n              Заказать акт сверки\n            </Button>\n            \n            <Button \n              variant=\"outline\" \n              className=\"flex items-center gap-2 mr-2\"\n              onClick={() => syncDocuments.mutate()}\n              disabled={syncDocuments.isPending}\n            >\n              <RefreshCw className={`h-4 w-4 ${syncDocuments.isPending ? 'animate-spin' : ''}`} />\n              {syncDocuments.isPending ? 'Синхронизация...' : 'Синхронизировать'}\n            </Button>\n            \n            <div className=\"relative mr-2\">\n              <Input\n                type=\"text\"\n                placeholder=\"Поиск...\"\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n                className=\"px-4 py-2 rounded-lg bg-background border border-border text-foreground focus:outline-none focus:ring-2 focus:ring-primary transition-all pr-10\"\n              />\n              <Search className=\"absolute right-3 top-3 h-4 w-4 text-muted-foreground\" />\n            </div>\n            \n            <Button variant=\"outline\" className=\"flex items-center gap-2\">\n              <Filter className=\"h-4 w-4\" />\n              Фильтры\n            </Button>\n          </div>\n        </div>\n        \n        {isLoading ? (\n          <div className=\"flex justify-center items-center py-12\">\n            <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n          </div>\n        ) : (\n          <>\n            <DataTable\n              headers={[\n                { id: \"contractNumber\", label: \"№ договора\", align: \"center\" },\n                { id: \"type\", label: \"Тип\", align: \"center\" },\n                { id: \"actions\", label: \"Действия\", align: \"center\" }\n              ]}\n              data={paginatedActs}\n              renderRow={(act) => (\n                <tr key={act.id} className=\"border-b border-border hover:bg-muted/40 transition-all\">\n                  <td className=\"p-3 text-center\">{act.contractNumber || act.number}</td>\n                  <td className=\"p-3 text-center\">{act.type}</td>\n                  <td className=\"p-3 text-center\">\n                    <Button \n                      variant=\"ghost\" \n                      size=\"icon\" \n                      className=\"text-primary hover:text-primary-foreground hover:bg-primary\"\n                      onClick={() => handleDownload(act.id, 'act')}\n                      aria-label=\"Скачать\"\n                    >\n                      <Download className=\"h-4 w-4\" />\n                    </Button>\n                  </td>\n                </tr>\n              )}\n            />\n            \n            {filteredActs.length > 0 ? (\n              <div className=\"mt-4 flex justify-between items-center\">\n                <p className=\"text-sm text-muted-foreground\">\n                  Показано {paginatedActs.length} из {filteredActs.length} актов\n                </p>\n                \n                <Pagination\n                  currentPage={currentPage}\n                  totalPages={totalPages}\n                  onPageChange={setCurrentPage}\n                />\n              </div>\n            ) : (\n              <div className=\"py-8 text-center text-muted-foreground\">\n                Акты не найдены\n              </div>\n            )}\n          </>\n        )}\n      </Card>\n      \n      {selectedAct && (\n        <DocumentPreviewModal\n          isOpen={isPreviewOpen}\n          onClose={() => setIsPreviewOpen(false)}\n          title={`Акт ${selectedAct.number}`}\n          documentPath={selectedAct.filePath}\n          documentName={`Акт_${selectedAct.number}.pdf`}\n        />\n      )}\n    </DashboardLayout>\n  );\n};\n\nexport default ActsPage;\n","size_bytes":8533},"client/src/pages/auth-page.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { useAuth } from \"@/hooks/use-auth\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport LoginForm from \"@/components/auth/login-form\";\nimport RegisterForm from \"@/components/auth/register-form\";\nimport ResetPasswordForm from \"@/components/auth/reset-password-form\";\n\nconst AuthPage = () => {\n  const [activeForm, setActiveForm] = useState<\"login\" | \"register\" | \"reset\">(\"login\");\n  const { user, isLoading } = useAuth();\n  const [, navigate] = useLocation();\n\n  // If user is already logged in, redirect to the dashboard\n  useEffect(() => {\n    if (user && !isLoading) {\n      navigate(\"/\");\n    }\n  }, [user, isLoading, navigate]);\n\n  return (\n    <div className=\"min-h-screen w-full flex flex-col items-center justify-center p-4 md:p-0 bg-background text-foreground\">\n      <div className=\"animate-fadeIn\">\n        {activeForm === \"login\" && (\n          <Card className=\"w-full max-w-md mx-auto bg-slate-800 border border-border mb-8 rounded-xl shadow-glass\">\n            <CardContent className=\"p-8\">\n              <div className=\"flex items-center justify-center mb-8\">\n                <h1 className=\"text-2xl font-semibold text-center\">ИНВЕСТ-лизинг</h1>\n              </div>\n              \n              <h2 className=\"text-2xl font-semibold text-center mb-6\">Вход в личный кабинет</h2>\n              \n              <LoginForm \n                onRegisterClick={() => setActiveForm(\"register\")}\n                onResetClick={() => setActiveForm(\"reset\")}\n              />\n            </CardContent>\n          </Card>\n        )}\n\n        {activeForm === \"register\" && (\n          <Card className=\"w-full max-w-md mx-auto bg-slate-800 border border-border mb-8 rounded-xl shadow-glass\">\n            <CardContent className=\"p-8\">\n              <div className=\"flex justify-between items-center mb-6\">\n                <h2 className=\"text-2xl font-semibold\">Регистрация</h2>\n                <button \n                  className=\"text-muted-foreground hover:text-foreground transition-all\" \n                  onClick={() => setActiveForm(\"login\")}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"lucide lucide-x\">\n                    <path d=\"M18 6 6 18\"></path>\n                    <path d=\"m6 6 12 12\"></path>\n                  </svg>\n                </button>\n              </div>\n              \n              <RegisterForm onLoginClick={() => setActiveForm(\"login\")} />\n            </CardContent>\n          </Card>\n        )}\n\n        {activeForm === \"reset\" && (\n          <Card className=\"w-full max-w-md mx-auto bg-slate-800 border border-border mb-8 rounded-xl shadow-glass\">\n            <CardContent className=\"p-8\">\n              <div className=\"flex justify-between items-center mb-6\">\n                <h2 className=\"text-2xl font-semibold\">Восстановление пароля</h2>\n                <button \n                  className=\"text-muted-foreground hover:text-foreground transition-all\" \n                  onClick={() => setActiveForm(\"login\")}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"lucide lucide-x\">\n                    <path d=\"M18 6 6 18\"></path>\n                    <path d=\"m6 6 12 12\"></path>\n                  </svg>\n                </button>\n              </div>\n              \n              <p className=\"text-muted-foreground mb-6\">\n                Введите ваш email, и мы отправим вам инструкции по восстановлению пароля.\n              </p>\n              \n              <ResetPasswordForm onLoginClick={() => setActiveForm(\"login\")} />\n            </CardContent>\n          </Card>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AuthPage;\n","size_bytes":4152},"client/src/pages/change-password-page.tsx":{"content":"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { DashboardLayout } from \"@/components/layout/dashboard-layout\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Eye, EyeOff } from \"lucide-react\";\nimport { useAuth } from \"@/hooks/use-auth\";\nimport { ChangePasswordData, changePasswordSchema } from \"@shared/schema\";\n\nconst ChangePasswordPage = () => {\n  const { changePasswordMutation } = useAuth();\n  const [showCurrentPassword, setShowCurrentPassword] = useState(false);\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  \n  const form = useForm<ChangePasswordData>({\n    resolver: zodResolver(changePasswordSchema),\n    defaultValues: {\n      currentPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n    },\n  });\n\n  const onSubmit = (data: ChangePasswordData) => {\n    changePasswordMutation.mutate(data, {\n      onSuccess: () => {\n        form.reset();\n      },\n    });\n  };\n\n  return (\n    <DashboardLayout>\n      <Card className=\"animate-fadeIn glass rounded-xl p-6 mb-6\">\n        <h2 className=\"text-2xl font-semibold mb-6\">Смена пароля</h2>\n        \n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"max-w-lg space-y-6\">\n            <FormField\n              control={form.control}\n              name=\"currentPassword\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Текущий пароль</FormLabel>\n                  <div className=\"relative\">\n                    <FormControl>\n                      <Input \n                        type={showCurrentPassword ? \"text\" : \"password\"} \n                        placeholder=\"Введите текущий пароль\" \n                        {...field} \n                      />\n                    </FormControl>\n                    <Button\n                      type=\"button\"\n                      variant=\"ghost\"\n                      size=\"icon\"\n                      className=\"absolute right-2 top-2 h-6 w-6\"\n                      onClick={() => setShowCurrentPassword(!showCurrentPassword)}\n                    >\n                      {showCurrentPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n                    </Button>\n                  </div>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            \n            <FormField\n              control={form.control}\n              name=\"newPassword\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Новый пароль</FormLabel>\n                  <div className=\"relative\">\n                    <FormControl>\n                      <Input \n                        type={showNewPassword ? \"text\" : \"password\"} \n                        placeholder=\"Введите новый пароль\" \n                        {...field} \n                      />\n                    </FormControl>\n                    <Button\n                      type=\"button\"\n                      variant=\"ghost\"\n                      size=\"icon\"\n                      className=\"absolute right-2 top-2 h-6 w-6\"\n                      onClick={() => setShowNewPassword(!showNewPassword)}\n                    >\n                      {showNewPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n                    </Button>\n                  </div>\n                  <div className=\"mt-2\">\n                    <div className=\"text-xs text-muted-foreground mb-1\">Требования к паролю:</div>\n                    <ul className=\"text-xs text-muted-foreground list-disc pl-5\">\n                      <li>Минимум 8 символов</li>\n                      <li>Хотя бы одна заглавная буква</li>\n                      <li>Хотя бы одна цифра</li>\n                      <li>Хотя бы один специальный символ</li>\n                    </ul>\n                  </div>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            \n            <FormField\n              control={form.control}\n              name=\"confirmPassword\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Подтверждение нового пароля</FormLabel>\n                  <div className=\"relative\">\n                    <FormControl>\n                      <Input \n                        type={showConfirmPassword ? \"text\" : \"password\"} \n                        placeholder=\"Повторите новый пароль\" \n                        {...field} \n                      />\n                    </FormControl>\n                    <Button\n                      type=\"button\"\n                      variant=\"ghost\"\n                      size=\"icon\"\n                      className=\"absolute right-2 top-2 h-6 w-6\"\n                      onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                    >\n                      {showConfirmPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n                    </Button>\n                  </div>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            \n            <Button \n              type=\"submit\" \n              disabled={changePasswordMutation.isPending}\n              className=\"w-full sm:w-auto\"\n            >\n              {changePasswordMutation.isPending ? \"Сохранение...\" : \"Сменить пароль\"}\n            </Button>\n          </form>\n        </Form>\n      </Card>\n    </DashboardLayout>\n  );\n};\n\nexport default ChangePasswordPage;\n","size_bytes":6085},"client/src/pages/contacts-page.tsx":{"content":"import { MainLayout } from \"@/components/layout/main-layout\";\nimport { ContactsSection } from \"@/components/main-site/contacts-section\";\n\nconst ContactsPage = () => {\n  return (\n    <MainLayout>\n      <div className=\"py-16\">\n        <ContactsSection />\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default ContactsPage;","size_bytes":321},"client/src/pages/contracts-page.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { DashboardLayout } from \"@/components/layout/dashboard-layout\";\nimport { Card } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { DataTable } from \"@/components/ui/data-table\";\nimport { StatusBadge } from \"@/components/ui/status-badge\";\nimport { Pagination } from \"@/components/ui/pagination\";\nimport { DocumentPreviewModal } from \"@/components/ui/document-preview-modal\";\nimport { useSyncDocuments } from \"@/hooks/use-sync-documents\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Loader2, Search, Filter, Download, Eye, RefreshCw } from \"lucide-react\";\n\ninterface Contract {\n  id: number;\n  userId: number;\n  number: string;\n  date: string;\n  type: string;\n  amount: number;\n  status: string;\n  filePath?: string;\n}\n\nconst ContractsPage = () => {\n  const [search, setSearch] = useState(\"\");\n  const [selectedContract, setSelectedContract] = useState<Contract | null>(null);\n  const [isPreviewOpen, setIsPreviewOpen] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10;\n  const { toast } = useToast();\n  \n  // Fetch contracts data\n  const { data: contracts, isLoading } = useQuery<Contract[]>({\n    queryKey: [\"/api/contracts\"],\n  });\n  \n  // Sync documents hook\n  const syncDocuments = useSyncDocuments();\n  \n  // Filter contracts based on search term\n  const filteredContracts = contracts?.filter(contract => \n    contract.number.toLowerCase().includes(search.toLowerCase()) ||\n    contract.type.toLowerCase().includes(search.toLowerCase())\n  ) || [];\n  \n  // Calculate pagination\n  const totalPages = Math.ceil((filteredContracts?.length || 0) / itemsPerPage);\n  const paginatedContracts = filteredContracts.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n\n  // Handle preview\n  const handlePreview = (contract: Contract) => {\n    setSelectedContract(contract);\n    setIsPreviewOpen(true);\n  };\n\n  // Handle download\n  const handleDownload = async (documentId: number, documentType: string) => {\n    try {\n      const response = await apiRequest(\"GET\", `/api/download-document?id=${documentId}&type=${documentType}`);\n      \n      if (!response.ok) {\n        throw new Error('Ошибка загрузки документа');\n      }\n      \n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.style.display = 'none';\n      a.href = url;\n      a.download = `Договор_${documentId}.pdf`;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n      \n      toast({\n        title: \"Успешно\",\n        description: \"Документ успешно скачан\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Ошибка\",\n        description: error instanceof Error ? error.message : \"Ошибка загрузки документа\",\n        variant: \"destructive\",\n      });\n    }\n  };\n  \n  // Format date\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ru-RU');\n  };\n  \n  // Format amount\n  const formatAmount = (amount: number) => {\n    return new Intl.NumberFormat('ru-RU').format(amount);\n  };\n\n  return (\n    <DashboardLayout>\n      <Card className=\"animate-fadeIn glass rounded-xl p-6 mb-6\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-2xl font-semibold\">Договоры</h2>\n          \n          <div className=\"flex\">\n            <div className=\"relative mr-2\">\n              <Input\n                type=\"text\"\n                placeholder=\"Поиск...\"\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n                className=\"px-4 py-2 rounded-lg bg-background border border-border text-foreground focus:outline-none focus:ring-2 focus:ring-primary transition-all pr-10\"\n              />\n              <Search className=\"absolute right-3 top-3 h-4 w-4 text-muted-foreground\" />\n            </div>\n            \n            <Button \n              variant=\"outline\" \n              className=\"flex items-center gap-2 mr-2\"\n              onClick={() => syncDocuments.mutate()}\n              disabled={syncDocuments.isPending}\n            >\n              <RefreshCw className={`h-4 w-4 ${syncDocuments.isPending ? 'animate-spin' : ''}`} />\n              {syncDocuments.isPending ? 'Синхронизация...' : 'Синхронизировать'}\n            </Button>\n            \n            <Button variant=\"outline\" className=\"flex items-center gap-2\">\n              <Filter className=\"h-4 w-4\" />\n              Фильтры\n            </Button>\n          </div>\n        </div>\n        \n        {isLoading ? (\n          <div className=\"flex justify-center items-center py-12\">\n            <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n          </div>\n        ) : (\n          <>\n            <DataTable\n              headers={[\n                { id: \"number\", label: \"№ договора\", align: \"center\" },\n                { id: \"type\", label: \"Тип\", align: \"center\" },\n                { id: \"actions\", label: \"Действия\", align: \"center\" }\n              ]}\n              data={paginatedContracts}\n              renderRow={(contract) => (\n                <tr key={contract.id} className=\"border-b border-border hover:bg-muted/40 transition-all\">\n                  <td className=\"p-3 text-center\">{contract.number}</td>\n                  <td className=\"p-3 text-center\">{contract.type}</td>\n                  <td className=\"p-3 text-center\">\n                    <Button \n                      variant=\"ghost\" \n                      size=\"icon\" \n                      className=\"text-primary hover:text-primary-foreground hover:bg-primary\"\n                      onClick={() => handleDownload(contract.id, 'contract')}\n                      aria-label=\"Скачать\"\n                    >\n                      <Download className=\"h-4 w-4\" />\n                    </Button>\n                  </td>\n                </tr>\n              )}\n            />\n            \n            {filteredContracts.length > 0 ? (\n              <div className=\"mt-4 flex justify-between items-center\">\n                <p className=\"text-sm text-muted-foreground\">\n                  Показано {paginatedContracts.length} из {filteredContracts.length} договоров\n                </p>\n                \n                <Pagination\n                  currentPage={currentPage}\n                  totalPages={totalPages}\n                  onPageChange={setCurrentPage}\n                />\n              </div>\n            ) : (\n              <div className=\"py-8 text-center text-muted-foreground\">\n                Договоры не найдены\n              </div>\n            )}\n          </>\n        )}\n      </Card>\n      \n      {selectedContract && (\n        <DocumentPreviewModal\n          isOpen={isPreviewOpen}\n          onClose={() => setIsPreviewOpen(false)}\n          title={`Договор ${selectedContract.number}`}\n          documentPath={selectedContract.filePath}\n          documentName={`Договор_${selectedContract.number}.pdf`}\n        />\n      )}\n    </DashboardLayout>\n  );\n};\n\nexport default ContractsPage;\n","size_bytes":7555},"client/src/pages/dashboard-page.tsx":{"content":"import { useLocation } from \"wouter\";\nimport { useAuth } from \"@/hooks/use-auth\";\nimport { useSyncDocuments } from \"@/hooks/use-sync-documents\";\nimport { DashboardLayout } from \"@/components/layout/dashboard-layout\";\nimport { Container } from '@/components/ui/container';\nimport { StatCard } from '@/components/ui/stat-card';\nimport { Button } from '@/components/ui/button';\nimport { FileText, Download, Calendar, CreditCard, RefreshCw } from 'lucide-react';\n\nconst DashboardPage = () => {\n  const [, navigate] = useLocation();\n  const { user } = useAuth();\n  const syncDocuments = useSyncDocuments();\n\n  // After render, if we get here, we should navigate to the profile page\n  if (typeof window !== \"undefined\") {\n    navigate(\"/profile\");\n  }\n\n  return (\n    <DashboardLayout>\n      <div className=\"animate-fadeIn glass rounded-xl p-6 mb-6\">\n        <div className=\"text-center max-w-2xl mx-auto mb-12\">\n            <h1 className=\"text-3xl md:text-4xl font-bold mb-6\">Личный кабинет</h1>\n            <p className=\"text-muted-foreground text-lg mb-6\">\n              Управляйте своими лизинговыми договорами и документами\n            </p>\n            <Button\n              onClick={() => syncDocuments.mutate()}\n              disabled={syncDocuments.isPending}\n              className=\"gap-2\"\n            >\n              <RefreshCw className={`h-4 w-4 ${syncDocuments.isPending ? 'animate-spin' : ''}`} />\n              {syncDocuments.isPending ? 'Синхронизация...' : 'Синхронизировать документы'}\n            </Button>\n          </div>\n      </div>\n    </DashboardLayout>\n  );\n};\n\nexport default DashboardPage;","size_bytes":1712},"client/src/pages/dashboard.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { StatCard } from \"@/components/ui/stat-card\";\nimport { RevenueChart } from \"@/components/dashboard/revenue-chart\";\nimport { OccupancyChart } from \"@/components/dashboard/occupancy-chart\";\nimport { PropertiesTable } from \"@/components/dashboard/properties-table\";\nimport { RecentActivity } from \"@/components/dashboard/recent-activity\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { DashboardStats, PropertyData, ActivityData, RevenueChartData, OccupancyChartData } from \"@/types\";\nimport { useState, useEffect } from \"react\";\nimport { useAutoSync } from \"@/hooks/use-auto-sync\";\n\nexport default function Dashboard() {\n  // Auto-sync documents on first login\n  useAutoSync();\n  \n  // Fetch dashboard statistics\n  const { data: stats, isLoading: statsLoading } = useQuery<DashboardStats>({\n    queryKey: ['/api/stats/dashboard'],\n  });\n\n  // Fetch properties\n  const { data: properties, isLoading: propertiesLoading } = useQuery<PropertyData[]>({\n    queryKey: ['/api/properties'],\n  });\n\n  // Fetch recent activities\n  const { data: activities, isLoading: activitiesLoading } = useQuery<ActivityData[]>({\n    queryKey: ['/api/activities/recent'],\n  });\n\n  // Fetch revenue chart data\n  const { data: revenueData, isLoading: revenueLoading } = useQuery<RevenueChartData[]>({\n    queryKey: ['/api/charts/revenue'],\n  });\n\n  // Fetch occupancy chart data\n  const { data: occupancyData, isLoading: occupancyLoading } = useQuery<OccupancyChartData>({\n    queryKey: ['/api/charts/occupancy'],\n  });\n\n  return (\n    <div className=\"p-6\">\n      {/* Header */}\n      <header className=\"mb-6\">\n        <h1 className=\"text-2xl font-bold text-slate-900 mb-2\">Dashboard</h1>\n        <p className=\"text-slate-600\">Welcome back to your investment and lease management portal.</p>\n      </header>\n      \n      {/* Stats Overview */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n        <StatCard\n          title=\"Total Properties\"\n          value={statsLoading ? \"Loading...\" : `${stats?.totalProperties || 0}`}\n          trend={statsLoading ? \"...\" : `${stats?.propertyTrend || \"0\"}`}\n          trendDirection=\"up\"\n          icon={\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-5 h-5\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 21v-8.25M15.75 21v-8.25M8.25 21v-8.25M3 9l9-6 9 6m-1.5 12V10.332A48.36 48.36 0 0012 9.75c-2.551 0-5.056.2-7.5.582V21M3 21h18M12 6.75h.008v.008H12V6.75z\" />\n            </svg>\n          }\n          iconBgColor=\"bg-emerald-50\"\n          iconTextColor=\"text-emerald-600\"\n        />\n        \n        <StatCard\n          title=\"Active Leases\"\n          value={statsLoading ? \"Loading...\" : `${stats?.activeLeases || 0}`}\n          trend={statsLoading ? \"...\" : `${stats?.leaseTrend || \"0\"}`}\n          trendDirection=\"up\"\n          icon={\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-5 h-5\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 12h3.75M9 15h3.75M9 18h3.75m3 .75H18a2.25 2.25 0 002.25-2.25V6.108c0-1.135-.845-2.098-1.976-2.192a48.424 48.424 0 00-1.123-.08m-5.801 0c-.065.21-.1.433-.1.664 0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75 2.25 2.25 0 00-.1-.664m-5.8 0A2.251 2.251 0 0113.5 2.25H15c1.012 0 1.867.668 2.15 1.586m-5.8 0c-.376.023-.75.05-1.124.08C9.095 4.01 8.25 4.973 8.25 6.108V8.25m0 0H4.875c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V9.375c0-.621-.504-1.125-1.125-1.125H8.25zM6.75 12h.008v.008H6.75V12zm0 3h.008v.008H6.75V15zm0 3h.008v.008H6.75V18z\" />\n            </svg>\n          }\n          iconBgColor=\"bg-blue-50\"\n          iconTextColor=\"text-blue-600\"\n        />\n        \n        <StatCard\n          title=\"Monthly Revenue\"\n          value={statsLoading ? \"Loading...\" : `$${stats?.monthlyRevenue?.toLocaleString() || 0}`}\n          trend={statsLoading ? \"...\" : `${stats?.revenueTrend || \"0\"}`}\n          trendDirection=\"up\"\n          icon={\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-5 h-5\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 6v12m-3-2.818l.879.659c1.171.879 3.07.879 4.242 0 1.172-.879 1.172-2.303 0-3.182C13.536 12.219 12.768 12 12 12c-.725 0-1.45-.22-2.003-.659-1.106-.879-1.106-2.303 0-3.182s2.9-.879 4.006 0l.415.33M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n          }\n          iconBgColor=\"bg-green-50\"\n          iconTextColor=\"text-green-600\"\n        />\n        \n        <StatCard\n          title=\"Occupancy Rate\"\n          value={statsLoading ? \"Loading...\" : `${stats?.occupancyRate?.toFixed(1) || 0}%`}\n          trend={statsLoading ? \"...\" : `${stats?.occupancyTrend || \"0\"}`}\n          trendDirection=\"up\"\n          icon={\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-5 h-5\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 19.128a9.38 9.38 0 002.625.372 9.337 9.337 0 004.121-.952 4.125 4.125 0 00-7.533-2.493M15 19.128v-.003c0-1.113-.285-2.16-.786-3.07M15 19.128v.106A12.318 12.318 0 018.624 21c-2.331 0-4.512-.645-6.374-1.766l-.001-.109a6.375 6.375 0 0111.964-3.07M12 6.375a3.375 3.375 0 11-6.75 0 3.375 3.375 0 016.75 0zm8.25 2.25a2.625 2.625 0 11-5.25 0 2.625 2.625 0 015.25 0z\" />\n            </svg>\n          }\n          iconBgColor=\"bg-indigo-50\"\n          iconTextColor=\"text-indigo-600\"\n        />\n      </div>\n      \n      {/* Charts Section */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8\">\n        <div className=\"lg:col-span-2\">\n          <RevenueChart \n            data={revenueData || []} \n            isLoading={revenueLoading} \n          />\n        </div>\n        \n        <div>\n          <OccupancyChart \n            data={occupancyData || { occupied: 0, vacant: 0, occupancyRate: 0 }} \n            isLoading={occupancyLoading} \n          />\n        </div>\n      </div>\n      \n      {/* Properties Section */}\n      <div className=\"mb-8\">\n        <Card>\n          <CardContent className=\"p-0\">\n            <PropertiesTable \n              properties={properties || []} \n              isLoading={propertiesLoading} \n            />\n          </CardContent>\n        </Card>\n      </div>\n      \n      {/* Recent Activity Section */}\n      <RecentActivity \n        activities={activities || []} \n        isLoading={activitiesLoading} \n      />\n    </div>\n  );\n}\n","size_bytes":6718},"client/src/pages/faq-page.tsx":{"content":"import { MainLayout } from \"@/components/layout/main-layout\";\nimport { FAQSection } from \"@/components/main-site/faq-section\";\n\nconst FAQPage = () => {\n  return (\n    <MainLayout>\n      <div className=\"py-16\">\n        <FAQSection />\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default FAQPage;","size_bytes":296},"client/src/pages/faq.tsx":{"content":"import React from 'react';\nimport { MainLayout } from \"@/components/layout/main-layout\";\nimport { Container } from \"@/components/ui/container\";\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\n\ninterface FAQItem {\n  question: string;\n  answer: string;\n}\n\nexport default function FAQPage() {\n  // Данные для FAQ\n  const generalQuestions: FAQItem[] = [\n    {\n      question: \"Что такое лизинг?\",\n      answer: \"Лизинг — это долгосрочная аренда имущества с последующим правом выкупа. По сути, это финансовый инструмент, позволяющий предприятиям и предпринимателям получить в пользование необходимое оборудование, транспорт или недвижимость без единовременной полной оплаты его стоимости.\"\n    },\n    {\n      question: \"Чем лизинг отличается от кредита?\",\n      answer: \"Основные отличия лизинга от кредита: 1) При лизинге право собственности на имущество остается у лизингодателя до окончания договора, а при кредите — сразу переходит к покупателю; 2) Лизинговые платежи полностью относятся на себестоимость, что снижает налогооблагаемую базу; 3) Для получения лизинга обычно требуется меньше документов и сроки рассмотрения заявки короче; 4) Лизинговая компания сама страхует имущество и регистрирует транспорт в ГИБДД.\"\n    },\n    {\n      question: \"Какое имущество можно приобрести в лизинг?\",\n      answer: \"В лизинг можно приобрести практически любое имущество, которое используется в предпринимательской деятельности: легковой и грузовой автотранспорт, спецтехнику, промышленное оборудование, недвижимость (офисы, склады, производственные помещения).\"\n    },\n    {\n      question: \"Какие преимущества дает лизинг для бизнеса?\",\n      answer: \"Преимущества лизинга: 1) Экономия на налогах (НДС к вычету со всей суммы договора, лизинговые платежи учитываются в расходах); 2) Минимальные первоначальные затраты (аванс от 10%); 3) Сохранение оборотных средств; 4) Ускоренная амортизация имущества; 5) Оперативное обновление основных фондов; 6) Возможность применения различных графиков платежей.\"\n    },\n    {\n      question: \"Кто может стать лизингополучателем?\",\n      answer: \"Лизингополучателем может стать юридическое лицо или индивидуальный предприниматель. ООО «ИНВЕСТ-лизинг» работает с компаниями любого масштаба: от малого бизнеса до крупных корпораций.\"\n    }\n  ];\n\n  const processQuestions: FAQItem[] = [\n    {\n      question: \"Какие документы нужны для оформления лизинга?\",\n      answer: \"Для рассмотрения заявки на лизинг требуется: 1) Анкета-заявка; 2) Учредительные документы; 3) Финансовая отчетность за последний год и текущий период; 4) Документы на предмет лизинга (договор купли-продажи, спецификация и т.д.). Точный перечень зависит от суммы сделки и будет предоставлен после обращения в компанию.\"\n    },\n    {\n      question: \"Какой минимальный/максимальный срок лизинга?\",\n      answer: \"Минимальный срок лизинга составляет 12 месяцев, максимальный — до 60 месяцев (5 лет). Для отдельных видов имущества срок может быть увеличен до 7 лет.\"\n    },\n    {\n      question: \"Какой минимальный аванс по договору лизинга?\",\n      answer: \"Минимальный аванс по договору лизинга составляет 10% от стоимости имущества. Для некоторых категорий клиентов и определенных видов имущества возможно снижение аванса до 5%.\"\n    },\n    {\n      question: \"Как быстро рассматривается заявка на лизинг?\",\n      answer: \"Рассмотрение заявки на лизинг происходит в течение 1-3 рабочих дней при предоставлении полного пакета документов. При сделках на крупные суммы или с нестандартными условиями срок может быть увеличен до 5 рабочих дней.\"\n    },\n    {\n      question: \"Можно ли досрочно выкупить предмет лизинга?\",\n      answer: \"Да, досрочный выкуп предмета лизинга возможен после оплаты 12 лизинговых платежей. При этом составляется дополнительное соглашение к договору, и рассчитывается сумма досрочного выкупа.\"\n    }\n  ];\n\n  const paymentQuestions: FAQItem[] = [\n    {\n      question: \"Какие графики платежей предлагает компания?\",\n      answer: \"ООО «ИНВЕСТ-лизинг» предлагает различные графики платежей: 1) Регулярные (ежемесячные, ежеквартальные); 2) Сезонные (с учетом сезонности бизнеса клиента); 3) Убывающие (большие платежи в начале срока, меньшие в конце); 4) Возрастающие (меньшие платежи в начале срока, увеличиваются к концу).\"\n    },\n    {\n      question: \"Что включено в лизинговый платеж?\",\n      answer: \"В лизинговый платеж включены: 1) Часть стоимости имущества; 2) Комиссия лизинговой компании; 3) Стоимость страхования имущества; 4) Транспортный налог (для транспорта); 5) Регистрация в ГИБДД (для транспорта). Дополнительно могут включаться другие услуги по согласованию.\"\n    },\n    {\n      question: \"Можно ли изменить график платежей после подписания договора?\",\n      answer: \"Да, график платежей может быть изменен по соглашению сторон. Для этого необходимо обратиться к своему менеджеру и обосновать необходимость изменения графика. Вопрос рассматривается индивидуально.\"\n    },\n    {\n      question: \"Предусмотрены ли штрафы за просрочку платежей?\",\n      answer: \"Да, за просрочку лизинговых платежей предусмотрены штрафные санкции согласно условиям договора лизинга. Обычно это неустойка в размере 0,1-0,5% от суммы просроченного платежа за каждый день просрочки.\"\n    },\n    {\n      question: \"Какие налоговые преимущества дает лизинг?\",\n      answer: \"Налоговые преимущества лизинга: 1) НДС к вычету со всей суммы договора; 2) Лизинговые платежи полностью относятся на расходы, уменьшая налогооблагаемую базу по налогу на прибыль; 3) Возможность применения ускоренной амортизации с коэффициентом до 3; 4) Экономия на налоге на имущество, так как балансодержателем часто выступает лизинговая компания.\"\n    }\n  ];\n\n  return (\n    <MainLayout>\n      <section className=\"py-20 relative\">\n        <Container>\n          <div className=\"text-center max-w-3xl mx-auto mb-12\">\n            <h1 className=\"text-3xl md:text-4xl font-bold mb-6\">Часто задаваемые вопросы</h1>\n            <p className=\"text-muted-foreground text-lg\">\n              Здесь вы найдете ответы на самые распространенные вопросы о лизинге\n            </p>\n          </div>\n          \n          <div className=\"max-w-4xl mx-auto mb-12\">\n            <h2 className=\"text-2xl font-bold mb-6\">Общие вопросы о лизинге</h2>\n            <Accordion type=\"single\" collapsible className=\"w-full\">\n              {generalQuestions.map((faq, index) => (\n                <AccordionItem key={index} value={`general-${index}`}>\n                  <AccordionTrigger className=\"text-left\">{faq.question}</AccordionTrigger>\n                  <AccordionContent>\n                    <p className=\"text-muted-foreground\">{faq.answer}</p>\n                  </AccordionContent>\n                </AccordionItem>\n              ))}\n            </Accordion>\n          </div>\n          \n          <div className=\"max-w-4xl mx-auto mb-12\">\n            <h2 className=\"text-2xl font-bold mb-6\">Оформление и процесс сделки</h2>\n            <Accordion type=\"single\" collapsible className=\"w-full\">\n              {processQuestions.map((faq, index) => (\n                <AccordionItem key={index} value={`process-${index}`}>\n                  <AccordionTrigger className=\"text-left\">{faq.question}</AccordionTrigger>\n                  <AccordionContent>\n                    <p className=\"text-muted-foreground\">{faq.answer}</p>\n                  </AccordionContent>\n                </AccordionItem>\n              ))}\n            </Accordion>\n          </div>\n          \n          <div className=\"max-w-4xl mx-auto\">\n            <h2 className=\"text-2xl font-bold mb-6\">Платежи и финансовые вопросы</h2>\n            <Accordion type=\"single\" collapsible className=\"w-full\">\n              {paymentQuestions.map((faq, index) => (\n                <AccordionItem key={index} value={`payment-${index}`}>\n                  <AccordionTrigger className=\"text-left\">{faq.question}</AccordionTrigger>\n                  <AccordionContent>\n                    <p className=\"text-muted-foreground\">{faq.answer}</p>\n                  </AccordionContent>\n                </AccordionItem>\n              ))}\n            </Accordion>\n          </div>\n          \n          <div className=\"max-w-3xl mx-auto mt-16 text-center\">\n            <h3 className=\"text-xl font-semibold mb-4\">Не нашли ответ на свой вопрос?</h3>\n            <p className=\"text-muted-foreground mb-6\">\n              Свяжитесь с нами удобным для вас способом, и наши специалисты проконсультируют вас \n              по всем интересующим вопросам\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n              <a href=\"tel:+78001001234\" className=\"text-primary font-medium hover:underline\">\n                +7 (800) 100-12-34\n              </a>\n              <span className=\"hidden sm:inline text-muted-foreground\">•</span>\n              <a href=\"mailto:info@investl.ru\" className=\"text-primary font-medium hover:underline\">\n                info@investl.ru\n              </a>\n            </div>\n          </div>\n        </Container>\n      </section>\n    </MainLayout>\n  );\n}","size_bytes":13100},"client/src/pages/home-page.tsx":{"content":"import { useEffect } from \"react\";\nimport { useLocation } from \"wouter\";\n\nconst HomePage = () => {\n  const [, navigate] = useLocation();\n\n  // Redirect to the profile page\n  useEffect(() => {\n    navigate(\"/profile\");\n  }, [navigate]);\n\n  return null;\n};\n\nexport default HomePage;\n","size_bytes":281},"client/src/pages/invoices-page.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { DashboardLayout } from \"@/components/layout/dashboard-layout\";\nimport { Card } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { DataTable } from \"@/components/ui/data-table\";\nimport { Pagination } from \"@/components/ui/pagination\";\nimport { DocumentPreviewModal } from \"@/components/ui/document-preview-modal\";\nimport { useSyncDocuments } from \"@/hooks/use-sync-documents\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Loader2, Search, Filter, Download, RefreshCw } from \"lucide-react\";\n\ninterface Invoice {\n  id: number;\n  userId: number;\n  number: string;\n  type: string;\n  contractNumber: string;\n  filePath?: string;\n}\n\nconst InvoicesPage = () => {\n  const [search, setSearch] = useState(\"\");\n  const [selectedInvoice, setSelectedInvoice] = useState<Invoice | null>(null);\n  const [isPreviewOpen, setIsPreviewOpen] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10;\n  const { toast } = useToast();\n  \n  // Fetch invoices data\n  const { data: invoices, isLoading } = useQuery<Invoice[]>({\n    queryKey: [\"/api/invoices\"],\n  });\n  \n  // Sync documents hook\n  const syncDocuments = useSyncDocuments();\n  \n  // Filter invoices based on search term\n  const filteredInvoices = invoices?.filter(invoice => \n    invoice.number.toLowerCase().includes(search.toLowerCase()) ||\n    invoice.type.toLowerCase().includes(search.toLowerCase()) ||\n    invoice.contractNumber.toLowerCase().includes(search.toLowerCase())\n  ) || [];\n  \n  // Calculate pagination\n  const totalPages = Math.ceil((filteredInvoices?.length || 0) / itemsPerPage);\n  const paginatedInvoices = filteredInvoices.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n\n  // Handle preview\n  const handlePreview = (invoice: Invoice) => {\n    setSelectedInvoice(invoice);\n    setIsPreviewOpen(true);\n  };\n\n  // Handle download\n  const handleDownload = async (documentId: number, documentType: string) => {\n    try {\n      const response = await apiRequest(\"GET\", `/api/download-document?id=${documentId}&type=${documentType}`);\n      \n      if (!response.ok) {\n        throw new Error('Ошибка загрузки документа');\n      }\n      \n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.style.display = 'none';\n      a.href = url;\n      a.download = `Счет_${documentId}.pdf`;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n      \n      toast({\n        title: \"Успешно\",\n        description: \"Документ успешно скачан\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Ошибка\",\n        description: error instanceof Error ? error.message : \"Ошибка загрузки документа\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  return (\n    <DashboardLayout>\n      <Card className=\"animate-fadeIn glass rounded-xl p-6 mb-6\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-2xl font-semibold\">Счета</h2>\n          \n          <div className=\"flex\">\n            <Button \n              variant=\"outline\" \n              className=\"flex items-center gap-2 mr-2\"\n              onClick={() => syncDocuments.mutate()}\n              disabled={syncDocuments.isPending}\n            >\n              <RefreshCw className={`h-4 w-4 ${syncDocuments.isPending ? 'animate-spin' : ''}`} />\n              {syncDocuments.isPending ? 'Синхронизация...' : 'Синхронизировать'}\n            </Button>\n            \n            <div className=\"relative mr-2\">\n              <Input\n                type=\"text\"\n                placeholder=\"Поиск...\"\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n                className=\"px-4 py-2 rounded-lg bg-background border border-border text-foreground focus:outline-none focus:ring-2 focus:ring-primary transition-all pr-10\"\n              />\n              <Search className=\"absolute right-3 top-3 h-4 w-4 text-muted-foreground\" />\n            </div>\n            \n            <Button variant=\"outline\" className=\"flex items-center gap-2\">\n              <Filter className=\"h-4 w-4\" />\n              Фильтры\n            </Button>\n          </div>\n        </div>\n        \n        {isLoading ? (\n          <div className=\"flex justify-center items-center py-12\">\n            <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n          </div>\n        ) : (\n          <>\n            <DataTable\n              headers={[\n                { id: \"number\", label: \"№ счета\", align: \"center\" },\n                { id: \"type\", label: \"Тип\", align: \"center\" },\n                { id: \"actions\", label: \"Действия\", align: \"center\" }\n              ]}\n              data={paginatedInvoices}\n              renderRow={(invoice) => (\n                <tr key={invoice.id} className=\"border-b border-border hover:bg-muted/40 transition-all\">\n                  <td className=\"p-3 text-center\">{invoice.number}</td>\n                  <td className=\"p-3 text-center\">{invoice.type}</td>\n                  <td className=\"p-3 text-center\">\n                    <Button \n                      variant=\"ghost\" \n                      size=\"icon\" \n                      className=\"text-primary hover:text-primary-foreground hover:bg-primary\"\n                      onClick={() => handleDownload(invoice.id, 'invoice')}\n                      aria-label=\"Скачать\"\n                    >\n                      <Download className=\"h-4 w-4\" />\n                    </Button>\n                  </td>\n                </tr>\n              )}\n            />\n            \n            {filteredInvoices.length > 0 ? (\n              <div className=\"mt-4 flex justify-between items-center\">\n                <p className=\"text-sm text-muted-foreground\">\n                  Показано {paginatedInvoices.length} из {filteredInvoices.length} счетов\n                </p>\n                \n                <Pagination\n                  currentPage={currentPage}\n                  totalPages={totalPages}\n                  onPageChange={setCurrentPage}\n                />\n              </div>\n            ) : (\n              <div className=\"py-8 text-center text-muted-foreground\">\n                Счета не найдены\n              </div>\n            )}\n          </>\n        )}\n      </Card>\n      \n      {selectedInvoice && (\n        <DocumentPreviewModal\n          isOpen={isPreviewOpen}\n          onClose={() => setIsPreviewOpen(false)}\n          title={`Счет ${selectedInvoice.number}`}\n          documentPath={selectedInvoice.filePath}\n          documentName={`Счет_${selectedInvoice.number}.pdf`}\n        />\n      )}\n    </DashboardLayout>\n  );\n};\n\nexport default InvoicesPage;","size_bytes":7173},"client/src/pages/leases.tsx":{"content":"import { DataTable } from \"@/components/ui/data-table\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { LeaseData } from \"@/types\";\nimport { useLocation } from \"wouter\";\nimport { format } from \"date-fns\";\n\nexport default function Leases() {\n  const [, navigate] = useLocation();\n  \n  // Fetch leases\n  const { data: leases, isLoading } = useQuery<LeaseData[]>({\n    queryKey: ['/api/leases'],\n  });\n\n  const columns = [\n    {\n      header: \"Property\",\n      accessorKey: (lease: LeaseData) => (\n        <div className=\"flex items-center\">\n          <div className=\"flex-shrink-0 h-10 w-10 bg-slate-100 rounded flex items-center justify-center\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-6 h-6 text-slate-500\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 21v-8.25M15.75 21v-8.25M8.25 21v-8.25M3 9l9-6 9 6m-1.5 12V10.332A48.36 48.36 0 0012 9.75c-2.551 0-5.056.2-7.5.582V21M3 21h18M12 6.75h.008v.008H12V6.75z\" />\n            </svg>\n          </div>\n          <div className=\"ml-4\">\n            <div className=\"text-sm font-medium text-slate-900\">{lease.propertyName}</div>\n            <div className=\"text-sm text-slate-500\">Unit {lease.unitNumber}</div>\n          </div>\n        </div>\n      ),\n    },\n    {\n      header: \"Tenant\",\n      accessorKey: \"tenantName\",\n    },\n    {\n      header: \"Monthly Rent\",\n      accessorKey: (lease: LeaseData) => {\n        return `$${lease.monthlyRent.toLocaleString()}`;\n      },\n    },\n    {\n      header: \"Period\",\n      accessorKey: (lease: LeaseData) => {\n        try {\n          const startDate = format(new Date(lease.startDate), 'MMM d, yyyy');\n          const endDate = format(new Date(lease.endDate), 'MMM d, yyyy');\n          return (\n            <div className=\"text-sm text-slate-700\">\n              <div>{startDate}</div>\n              <div className=\"text-slate-500\">to</div>\n              <div>{endDate}</div>\n            </div>\n          );\n        } catch (e) {\n          return 'Invalid date';\n        }\n      },\n    },\n    {\n      header: \"Status\",\n      accessorKey: (lease: LeaseData) => {\n        const getStatusColor = (status: string) => {\n          switch (status.toLowerCase()) {\n            case 'active':\n              return (\n                <Badge className=\"bg-green-100 text-green-800 hover:bg-green-100\">\n                  Active\n                </Badge>\n              );\n            case 'expired':\n              return (\n                <Badge className=\"bg-slate-100 text-slate-800 hover:bg-slate-100\">\n                  Expired\n                </Badge>\n              );\n            case 'terminated':\n              return (\n                <Badge className=\"bg-red-100 text-red-800 hover:bg-red-100\">\n                  Terminated\n                </Badge>\n              );\n            default:\n              return (\n                <Badge className=\"bg-slate-100 text-slate-800 hover:bg-slate-100\">\n                  {status}\n                </Badge>\n              );\n          }\n        };\n        \n        return getStatusColor(lease.status);\n      },\n    },\n    {\n      header: \"Actions\",\n      accessorKey: (lease: LeaseData) => (\n        <div>\n          <Button \n            variant=\"link\" \n            className=\"text-primary hover:text-primary/90 mr-3 p-0\"\n            onClick={() => navigate(`/leases/${lease.id}`)}\n          >\n            View\n          </Button>\n          <Button \n            variant=\"link\" \n            className=\"text-slate-600 hover:text-slate-900 p-0\"\n            onClick={() => navigate(`/leases/${lease.id}/edit`)}\n          >\n            Edit\n          </Button>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <div className=\"p-6\">\n      <header className=\"mb-6\">\n        <h1 className=\"text-2xl font-bold text-slate-900 mb-2\">Leases</h1>\n        <p className=\"text-slate-600\">Manage your lease agreements</p>\n      </header>\n\n      <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-5\">\n        <DataTable\n          data={leases || []}\n          columns={columns}\n          title=\"All Leases\"\n          actions={{\n            onAdd: () => navigate('/leases/add'),\n            addButtonLabel: \"Add Lease\"\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","size_bytes":4424},"client/src/pages/main-page.tsx":{"content":"import { MainLayout } from \"@/components/layout/main-layout\";\nimport { HeroSection } from \"@/components/main-site/hero-section\";\nimport { ServicesSection } from \"@/components/main-site/services-section\";\nimport { AdvantagesSection } from \"@/components/main-site/advantages-section\";\nimport { LeasingCalculator } from \"@/components/main-site/leasing-calculator\";\nimport { ContactsSection } from \"@/components/main-site/contacts-section\";\n\nconst MainPage = () => {\n  return (\n    <MainLayout>\n      <HeroSection />\n      <ServicesSection />\n      <AdvantagesSection />\n      <LeasingCalculator />\n      <ContactsSection />\n    </MainLayout>\n  );\n};\n\nexport default MainPage;","size_bytes":672},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { AlertCircle } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-background\">\n      <Card className=\"w-full max-w-md mx-4 bg-background/40 backdrop-blur-md border border-white/10\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex flex-col items-center text-center mb-6\">\n            <AlertCircle className=\"h-16 w-16 text-destructive mb-4\" />\n            <h1 className=\"text-3xl font-bold text-foreground\">404</h1>\n            <p className=\"text-xl mt-2 text-foreground/80\">Страница не найдена</p>\n          </div>\n\n          <p className=\"my-6 text-muted-foreground text-center\">\n            Запрашиваемая страница не существует или была перемещена по другому адресу.\n          </p>\n          \n          <div className=\"flex justify-center mt-6\">\n            <Button asChild variant=\"glass\" size=\"lg\">\n              <Link href=\"/\">Вернуться на главную</Link>\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":1317},"client/src/pages/other-documents-page.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { DashboardLayout } from \"@/components/layout/dashboard-layout\";\nimport { Card } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { DocumentCard } from \"@/components/ui/document-card\";\nimport { DocumentPreviewModal } from \"@/components/ui/document-preview-modal\";\nimport { Loader2, Search, Filter } from \"lucide-react\";\n\ninterface OtherDocument {\n  id: number;\n  userId: number;\n  name: string;\n  date: string;\n  description: string;\n  fileSize: number;\n  fileType: string;\n  filePath?: string;\n}\n\nconst OtherDocumentsPage = () => {\n  const [search, setSearch] = useState(\"\");\n  const [selectedDocument, setSelectedDocument] = useState<OtherDocument | null>(null);\n  const [isPreviewOpen, setIsPreviewOpen] = useState(false);\n  \n  // Fetch documents data\n  const { data: documents, isLoading } = useQuery<OtherDocument[]>({\n    queryKey: [\"/api/other-documents\"],\n  });\n  \n  // Filter documents based on search term\n  const filteredDocuments = documents?.filter(doc => \n    doc.name.toLowerCase().includes(search.toLowerCase()) ||\n    doc.description.toLowerCase().includes(search.toLowerCase()) ||\n    doc.fileType.toLowerCase().includes(search.toLowerCase())\n  ) || [];\n\n  // Handle preview\n  const handlePreview = (document: OtherDocument) => {\n    setSelectedDocument(document);\n    setIsPreviewOpen(true);\n  };\n  \n  // Format date\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ru-RU');\n  };\n  \n  // Format file size\n  const formatFileSize = (sizeInBytes: number) => {\n    if (sizeInBytes < 1024) {\n      return `${sizeInBytes} Б`;\n    } else if (sizeInBytes < 1024 * 1024) {\n      return `${(sizeInBytes / 1024).toFixed(1)} КБ`;\n    } else {\n      return `${(sizeInBytes / (1024 * 1024)).toFixed(1)} МБ`;\n    }\n  };\n\n  return (\n    <DashboardLayout>\n      <Card className=\"animate-fadeIn glass rounded-xl p-6 mb-6\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-2xl font-semibold\">Прочие документы</h2>\n          \n          <div className=\"flex\">\n            <div className=\"relative mr-2\">\n              <Input\n                type=\"text\"\n                placeholder=\"Поиск...\"\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n                className=\"px-4 py-2 rounded-lg bg-background border border-border text-foreground focus:outline-none focus:ring-2 focus:ring-primary transition-all pr-10\"\n              />\n              <Search className=\"absolute right-3 top-3 h-4 w-4 text-muted-foreground\" />\n            </div>\n            \n            <Button variant=\"outline\" className=\"flex items-center gap-2\">\n              <Filter className=\"h-4 w-4\" />\n              Фильтры\n            </Button>\n          </div>\n        </div>\n        \n        {isLoading ? (\n          <div className=\"flex justify-center items-center py-12\">\n            <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n          </div>\n        ) : (\n          <>\n            {filteredDocuments.length > 0 ? (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                {filteredDocuments.map(document => (\n                  <DocumentCard\n                    key={document.id}\n                    document={{\n                      id: document.id,\n                      name: document.name,\n                      date: formatDate(document.date),\n                      description: document.description,\n                      fileSize: formatFileSize(document.fileSize),\n                      fileType: document.fileType,\n                      filePath: document.filePath,\n                    }}\n                    onPreview={() => handlePreview(document)}\n                  />\n                ))}\n              </div>\n            ) : (\n              <div className=\"py-8 text-center text-muted-foreground\">\n                Документы не найдены\n              </div>\n            )}\n          </>\n        )}\n      </Card>\n      \n      {selectedDocument && (\n        <DocumentPreviewModal\n          isOpen={isPreviewOpen}\n          onClose={() => setIsPreviewOpen(false)}\n          title={selectedDocument.name}\n          documentPath={selectedDocument.filePath}\n          documentName={selectedDocument.name}\n        />\n      )}\n    </DashboardLayout>\n  );\n};\n\nexport default OtherDocumentsPage;\n","size_bytes":4615},"client/src/pages/partners-page.tsx":{"content":"import { MainLayout } from \"@/components/layout/main-layout\";\nimport { PartnersSection } from \"@/components/main-site/partners-section\";\n\nconst PartnersPage = () => {\n  return (\n    <MainLayout>\n      <div className=\"py-16\">\n        <PartnersSection />\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default PartnersPage;","size_bytes":321},"client/src/pages/partners.tsx":{"content":"\nimport React, { useState } from 'react';\nimport { MainLayout } from \"@/components/layout/main-layout\";\nimport { Container } from \"@/components/ui/container\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { motion } from \"framer-motion\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Send, Upload, Users } from \"lucide-react\";\n\n\ninterface Partner {\n  id: number;\n  name: string;\n  logo: string;\n  website?: string;\n}\n\nexport default function PartnersPage() {\n  const [partnershipForm, setPartnershipForm] = useState({\n    companyName: '',\n    contactPerson: '',\n    phone: '',\n    email: '',\n    proposal: null as File | null,\n    description: ''\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files[0]) {\n      setPartnershipForm(prev => ({\n        ...prev,\n        proposal: e.target.files![0]\n      }));\n    }\n  };\n\n  const handleSubmitPartnership = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!partnershipForm.companyName || !partnershipForm.contactPerson || !partnershipForm.phone || !partnershipForm.email || !partnershipForm.proposal) {\n      alert('Пожалуйста, заполните все обязательные поля и прикрепите коммерческое предложение');\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    try {\n      const formData = new FormData();\n      formData.append('companyName', partnershipForm.companyName);\n      formData.append('contactPerson', partnershipForm.contactPerson);\n      formData.append('phone', partnershipForm.phone);\n      formData.append('email', partnershipForm.email);\n      formData.append('description', partnershipForm.description);\n      formData.append('proposal', partnershipForm.proposal);\n\n      const response = await fetch('/api/send-partnership', {\n        method: 'POST',\n        body: formData\n      });\n\n      const result = await response.json();\n\n      if (result.success) {\n        alert('Ваше коммерческое предложение успешно отправлено!');\n        setPartnershipForm({\n          companyName: '',\n          contactPerson: '',\n          phone: '',\n          email: '',\n          proposal: null,\n          description: ''\n        });\n        setIsDialogOpen(false);\n      } else {\n        alert('Произошла ошибка при отправке предложения. Пожалуйста, попробуйте еще раз.');\n      }\n    } catch (error) {\n      console.error('Error sending partnership proposal:', error);\n      alert('Произошла ошибка при отправке предложения. Пожалуйста, попробуйте еще раз.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Партнеры - транспорт\n  const transportPartners: Partner[] = [\n    { id: 1, name: \"ООО «РБА-Челябинск»\", logo: \"https://investl.ru/upload/iblock/23b/32f48sisfs82qma8o03wuy3ryxc83ow1.png\", website: \"http://www.rbauto.ru/\" },\n    { id: 2, name: \"ОАО «ЧКПЗ»\", logo: \"https://investl.ru/upload/iblock/7d0/gjrqudrjzha22z7tuapvejnd9l3kox57.jpg\", website: \"https://www.chkpz.ru/catalog/cat7/\" },\n    { id: 3, name: \"ЗАО «Интертранссервис»\", logo: \"https://investl.ru/upload/iblock/bda/wcjh3umlcqg90bkxo341yp7lt7qys2dm.png\", website: \"http://intertransservice.ru/\" },\n    { id: 4, name: \"ООО ТСК «УралПромИнвест»\", logo: \"https://investl.ru/upload/iblock/55b/3vfrdbcxfrniafgaa0zfmyuwz8ph1z72.png\", website: \"http://www.ural-beton.ru/\" },\n    { id: 5, name: \"ООО «Гирд-Автофургон»\", logo: \"https://investl.ru/upload/iblock/4c2/s3n9ouhdpcm4qkjy1ritytzaz8upv0cl.png\", website: \"http://gird.ru/\" },\n    { id: 6, name: \"ООО «Акцент-Авто М»\", logo: \"https://investl.ru/upload/iblock/5fc/pya3593mfqlhzeprawjqvyofmlnolwok.png\", website: \"https://avtovek.lada.ru/\" },\n    { id: 7, name: \"Группа компаний «Грузовая Техника»\", logo: \"https://investl.ru/upload/iblock/18b/25112p55d4965w2q4z34umj6qt6xk1zc.png\", website: \"http://gruz-tehnika.ru/\" },\n    { id: 8, name: \"ООО «Спецмаш»\", logo: \"https://investl.ru/upload/iblock/9cc/wssn48kfxwv68o0k43r4wopljbd1wiri.png\", website: \"http://autospecmash.ru/\" },\n    { id: 9, name: \"ЛБР-Агромаркет\", logo: \"https://investl.ru/upload/iblock/2c6/40ctwrfq8u52v3j3cafhdl802s1vkax6.png\", website: \"http://www.lbr.ru/\" },\n    { id: 10, name: \"ООО ПКФ «Политранс»\", logo: \"https://investl.ru/upload/iblock/0b4/z4uaf7mlwnx4xy6bymg7h9xsuwvfef62.png\", website: \"http://www.politrans.ru/\" },\n    { id: 11, name: \"ООО «Русь-Агро»\", logo: \"https://investl.ru/upload/iblock/ac9/822884uk7fv8mrhnay5g3k4ws8smuqiv.png\", website: \"http://www.rusagro74.ru/\" },\n    { id: 12, name: \"ЛУИДОР\", logo: \"https://investl.ru/upload/iblock/1dd/2chdrspgybc05mnt0iyg088e5stdtayw.png\", website: \"http://luidor-chel.ru/\" },\n    { id: 13, name: \"ООО «Южуралпогрузчик»\", logo: \"https://investl.ru/upload/iblock/977/ts686ab2ys981t8wo24nq0juq6b4sbgu.png\", website: \"http://uralforklift.ru/\" },\n    { id: 14, name: \"ООО «ТехВосток»\", logo: \"https://investl.ru/upload/iblock/fb1/ls05oh0ns2m8inpesuh4ohe9t0a4htqr.png\", website: \"http://lgmg-mt.ru/\" },\n    { id: 15, name: \"«Грузовики и Спецтехника»\", logo: \"https://investl.ru/upload/iblock/eed/hqcue1bt914jot3hyj08510rfnxrmc3p.png\", website: \"https://tdgis.ru/\" },\n    { id: 16, name: \"Тюменский завод мобильных зданий\", logo: \"https://investl.ru/upload/iblock/f7d/nyrm1mrahpwpoudch28xpc125hwrjthc.png\", website: \"https://toir.ru/\" },\n    { id: 17, name: \"ИнтехКранСервис\", logo: \"https://investl.ru/upload/iblock/094/kcok0h93ulbnnfwl3c3j8e1sv515w56l.png\", website: \"http://intexkran.ru/\" },\n  ];\n\n  // Партнеры - оборудование\n  const equipmentPartners: Partner[] = [\n    { id: 1, name: \"Компания nanxing\", logo: \"https://investl.ru/upload/iblock/629/2jwteli6km3enszslcn40z4gfchklreb.png\", website: \"http://nanxing.ru/\" },\n    { id: 2, name: \"Корпорация DMTG\", logo: \"https://investl.ru/upload/iblock/303/cn1y6esmtwpf1tyorkobyq401knpbykw.png\", website: \"http://dmtg-stanki.ru/\" },\n    { id: 3, name: \"КМТ\", logo: \"https://investl.ru/upload/iblock/0e8/w0kg81sbwuv2ur2sz8tmlpxsyjcrwt8a.png\", website: \"http://kmt-stanki.ru/\" },\n    { id: 4, name: \"ВесТэк\", logo: \"https://investl.ru/upload/iblock/3c7/7ry7wsbsn1jyyid5kq5qxmde2rrmkmkn.png\", website: \"https://zvtvestek.ru/\" },\n    { id: 5, name: \"Мир станков\", logo: \"https://investl.ru/upload/iblock/493/0rxbgzefx84r3vv11sm3m9rjdcvj7bhf.png\", website: \"http://mir-stankov.ru/\" },\n    { id: 6, name: \"КАМИ\", logo: \"https://investl.ru/upload/iblock/327/i9sw1uuet29lf0zccs5l0d411pmprtca.png\", website: \"http://stanki.ru/\" },\n    { id: 7, name: \"ООО «Афалина Челябинск»\", logo: \"https://investl.ru/upload/iblock/441/68b5kbccr1h79rr3br1rtiz8trfztvwi.png\", website: \"http://afalina.com/\" },\n    { id: 8, name: \"ООО «Генерационное оборудование»\", logo: \"https://investl.ru/upload/iblock/a1b/0bmusjuoh7mee387ez8eai64nc8ds5et.jpg\", website: \"http://qlaster.ru/\" },\n    { id: 9, name: \"ЗАЩ «Газовик-ПРО»\", logo: \"https://investl.ru/upload/iblock/6b6/0t13a4d15mr5ddlxghr4170t4h7pyedu.jpg\", website: \"http://gazovik-pro.ru/\" },\n    { id: 10, name: \"ООО «Энергия пара»\", logo: \"https://investl.ru/upload/iblock/707/bhv9rwjh02qwsics4lztym4zko01af6u.png\", website: \"http://www.par-ma.ru/\" },\n    { id: 11, name: \"ООО «Солдрим-СПб»\", logo: \"https://investl.ru/upload/iblock/d4a/2bb8w8nxmmhoxhg107n1cpsvys6vuq5d.png\", website: \"http://soldream-spb.com/\" },\n    { id: 12, name: \"ООО «МонолитЦентр»\", logo: \"https://investl.ru/upload/iblock/594/00rinyiyyj7eor3pehu3pegbzfz68g3c.jpg\", website: \"http://www.monolitural.ru/\" },\n    { id: 13, name: \"ООО «Аланта»\", logo: \"https://investl.ru/upload/iblock/f20/6xln1s86w7jvwo23oyrnh5cwsnbcejk6.png\", website: \"http://www.alanta.ru/\" },\n    { id: 14, name: \"ООО «Челябкомпрессор»\", logo: \"https://investl.ru/upload/iblock/236/recvzc8caff9fsusvyxb2nr7hs9yg7o2.jpg\", website: \"http://www.kompressorov.ru/\" },\n    { id: 15, name: \"ООО «Торгово Промышленный Альянс»\", logo: \"https://investl.ru/upload/iblock/2d1/nuy1583hhvxfmpq8p5t9d5527zu5hok2.jpg\", website: \"http://www.rosalliance.ru/\" },\n    { id: 16, name: \"РусАвтоматизация\", logo: \"https://investl.ru/upload/iblock/c9b/gaoj734tnwvp3q32i4slbw71403kbs71.jpg\", website: \"http://rusautomation.ru/\" },\n    { id: 17, name: \"ООО «РОКТЭС»\", logo: \"https://investl.ru/upload/iblock/64b/wo9vbesrk604zr2s1ift0804wc4bds6c.jpg\", website: \"http://www.roktes.ru/\" },\n    { id: 18, name: \"ООО «Уралпромтехника»\", logo: \"https://investl.ru/upload/iblock/5eb/k26woguq169ugnrlmub9l774adhnt2yb.png\", website: \"http://www.uralpromteh.ru/\" },\n    { id: 19, name: \"Завод «Стройтехника»\", logo: \"https://investl.ru/upload/iblock/453/s2bccalp5i08jkvxf1b3rtzusou0qctj.png\", website: \"http://stroytec.ru/\" },\n    { id: 20, name: \"ООО «Сталь-Максимум»\", logo: \"https://investl.ru/upload/iblock/a8a/c9s1welh6ywry8g0rpml3y3f8ojunksf.png\", website: \"http://stalmaximum.ru/\" },\n    { id: 21, name: \"ООО «Лазер Мастер»\", logo: \"https://investl.ru/upload/iblock/893/adrjb5qgd2ua1xysmme60772t1ifpipt.png\", website: \"https://lazermaster.ru/\" },\n    { id: 22, name: \"ООО «АМПЛИТУДА»\", logo: \"https://investl.ru/upload/iblock/74d/dcngf5io4hbvmq4p4wobc0uclokvsiqv.png\", website: \"https://eapack.ru/\" },\n    { id: 23, name: \"Ledel\", logo: \"https://investl.ru/upload/iblock/b05/5bit1yxw1m3o5b3esz4lnu6anusma0lh.png\", website: \"http://ledel.ru/\" },\n    { id: 24, name: \"ООО «НПК Групп»\", logo: \"https://investl.ru/upload/iblock/674/o0ilyoc9aiooah7cxz327wfktbft8vz1.png\", website: \"https://prkom.ru/\" },\n    { id: 25, name: \"АО «Сибшванк»\", logo: \"https://investl.ru/upload/iblock/1e1/7uxeluv4rh1bbnmdifbgsqzk3flkiul6.png\", website: \"https://www.schwank.ru/\" },\n    { id: 26, name: \"ООО «Энергостан»\", logo: \"https://investl.ru/upload/iblock/41b/mo0x0pdyud0atw70150aljstnypl2zvy.png\", website: \"https://www.energostan.ru/\" },\n    { id: 27, name: \"L-CON\", logo: \"https://investl.ru/upload/iblock/344/4l4pqh1om2x9surfc4hkilmxgsko9pvw.png\", website: \"https://l-con.ru/\" },\n    { id: 28, name: \"ЭЛКОН\", logo: \"https://investl.ru/upload/iblock/ae9/8gwq02nc5nklk62ttzwl7u4ucn2g57r1.png\", website: \"https://www.elkon.ru/\" },\n    { id: 29, name: \"Группа компаний БРИЗ\", logo: \"https://investl.ru/upload/iblock/04a/zadp7pe2w7p3kemua9oa2b81ke1xyyc1.png\", website: \"https://www.brise-group.ru/\" },\n    { id: 30, name: \"«Завод Стройтехника» РИФЕЙ\", logo: \"https://investl.ru/upload/iblock/3b1/wjddv6k2n5jmm92vh5navbwr3unmz3ow.png\", website: \"https://stroytec.ru/\" },\n    { id: 31, name: \"Завод «РИР-Стандарт»\", logo: \"https://investl.ru/upload/iblock/1ee/1waupi2efdst5jiy9xe3foqeu6m57ys8.png\", website: \"https://rir-standart.ru/\" },\n  ];\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        duration: 0.5\n      }\n    }\n  };\n\n  return (\n    <MainLayout>\n      <section className=\"py-20 relative\">\n        <Container>\n          <div className=\"text-center max-w-3xl mx-auto mb-12\">\n            <h1 className=\"text-3xl md:text-4xl font-bold mb-6\">Партнёры</h1>\n            <p className=\"text-muted-foreground text-lg\">\n              Мы сотрудничаем с ведущими поставщиками автотранспорта и оборудования\n            </p>\n          </div>\n          \n          <div className=\"max-w-6xl mx-auto\">\n            <Tabs defaultValue=\"transport\" className=\"mb-12\">\n              <div className=\"flex justify-center mb-12\">\n                <TabsList>\n                  <TabsTrigger value=\"transport\">Транспорт</TabsTrigger>\n                  <TabsTrigger value=\"equipment\">Оборудование</TabsTrigger>\n                </TabsList>\n              </div>\n              \n              <TabsContent value=\"transport\">\n                <motion.div \n                  className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6\"\n                  initial=\"hidden\"\n                  animate=\"visible\"\n                  variants={containerVariants}\n                >\n                  {transportPartners.map((partner) => (\n                    <motion.div \n                      key={partner.id}\n                      variants={itemVariants}\n                      whileHover={{ scale: 1.05 }}\n                      transition={{ duration: 0.3 }}\n                    >\n                      <Card className=\"h-full\">\n                        <CardContent className=\"p-6 flex flex-col items-center justify-center h-full\">\n                          <a \n                            href={partner.website} \n                            target=\"_blank\" \n                            rel=\"noopener noreferrer\"\n                            className=\"flex flex-col items-center text-center\"\n                          >\n                            <div className=\"h-20 flex items-center justify-center mb-4\">\n                              <img \n                                src={partner.logo} \n                                alt={partner.name} \n                                className=\"max-h-full max-w-full object-contain\"\n                              />\n                            </div>\n                            <h3 className=\"text-lg font-medium mt-4\">{partner.name}</h3>\n                          </a>\n                        </CardContent>\n                      </Card>\n                    </motion.div>\n                  ))}\n                </motion.div>\n              </TabsContent>\n              \n              <TabsContent value=\"equipment\">\n                <motion.div \n                  className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-8 gap-6\"\n                  initial=\"hidden\"\n                  animate=\"visible\"\n                  variants={containerVariants}\n                >\n                  {equipmentPartners.map((partner) => (\n                    <motion.div \n                      key={partner.id}\n                      variants={itemVariants}\n                      whileHover={{ scale: 1.05 }}\n                      transition={{ duration: 0.3 }}\n                    >\n                      <Card className=\"h-full\">\n                        <CardContent className=\"p-6 flex flex-col items-center justify-center h-full\">\n                          <a \n                            href={partner.website} \n                            target=\"_blank\" \n                            rel=\"noopener noreferrer\"\n                            className=\"flex flex-col items-center text-center\"\n                          >\n                            <div className=\"h-20 flex items-center justify-center mb-4\">\n                              <img \n                                src={partner.logo} \n                                alt={partner.name} \n                                className=\"max-h-full max-w-full object-contain\"\n                              />\n                            </div>\n                            <h3 className=\"text-lg font-medium mt-4\">{partner.name}</h3>\n                          </a>\n                        </CardContent>\n                      </Card>\n                    </motion.div>\n                  ))}\n                </motion.div>\n              </TabsContent>\n            </Tabs>\n            \n            <div className=\"mt-16 text-center\">\n              <h2 className=\"text-2xl font-bold mb-6\">Станьте нашим партнером</h2>\n              <p className=\"text-muted-foreground text-lg max-w-3xl mx-auto mb-8\">\n                Мы открыты для сотрудничества с поставщиками автотранспорта, спецтехники и оборудования. \n                Предлагаем выгодные условия и индивидуальный подход к каждому партнеру.\n              </p>\n              \n              <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n                <DialogTrigger asChild>\n                  <Button size=\"lg\" className=\"text-lg px-8 py-4\">\n                    <Users className=\"mr-2 h-5 w-5\" />\n                    Стать партнером\n                  </Button>\n                </DialogTrigger>\n                <DialogContent className=\"max-w-md\">\n                  <DialogHeader>\n                    <DialogTitle>Заявка на партнерство</DialogTitle>\n                  </DialogHeader>\n                  <form onSubmit={handleSubmitPartnership} className=\"space-y-4\">\n                    <div>\n                      <Label htmlFor=\"companyName\">Название компании *</Label>\n                      <Input\n                        id=\"companyName\"\n                        value={partnershipForm.companyName}\n                        onChange={(e) => setPartnershipForm(prev => ({\n                          ...prev,\n                          companyName: e.target.value\n                        }))}\n                        required\n                      />\n                    </div>\n                    \n                    <div>\n                      <Label htmlFor=\"contactPerson\">Контактное лицо *</Label>\n                      <Input\n                        id=\"contactPerson\"\n                        value={partnershipForm.contactPerson}\n                        onChange={(e) => setPartnershipForm(prev => ({\n                          ...prev,\n                          contactPerson: e.target.value\n                        }))}\n                        required\n                      />\n                    </div>\n                    \n                    <div>\n                      <Label htmlFor=\"phone\">Телефон *</Label>\n                      <Input\n                        id=\"phone\"\n                        type=\"tel\"\n                        value={partnershipForm.phone}\n                        onChange={(e) => setPartnershipForm(prev => ({\n                          ...prev,\n                          phone: e.target.value\n                        }))}\n                        required\n                      />\n                    </div>\n                    \n                    <div>\n                      <Label htmlFor=\"email\">Email *</Label>\n                      <Input\n                        id=\"email\"\n                        type=\"email\"\n                        value={partnershipForm.email}\n                        onChange={(e) => setPartnershipForm(prev => ({\n                          ...prev,\n                          email: e.target.value\n                        }))}\n                        required\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"description\">Краткое описание деятельности</Label>\n                      <Textarea\n                        id=\"description\"\n                        value={partnershipForm.description}\n                        onChange={(e) => setPartnershipForm(prev => ({\n                          ...prev,\n                          description: e.target.value\n                        }))}\n                        placeholder=\"Опишите вашу деятельность и предлагаемое сотрудничество\"\n                        rows={3}\n                      />\n                    </div>\n                    \n                    <div>\n                      <Label htmlFor=\"proposal\">Коммерческое предложение *</Label>\n                      <div className=\"flex items-center space-x-2\">\n                        <Input\n                          id=\"proposal\"\n                          type=\"file\"\n                          accept=\".pdf,.doc,.docx\"\n                          onChange={handleFileChange}\n                          required\n                          className=\"hidden\"\n                        />\n                        <Button\n                          type=\"button\"\n                          variant=\"outline\"\n                          onClick={() => document.getElementById('proposal')?.click()}\n                          className=\"w-full\"\n                        >\n                          <Upload className=\"mr-2 h-4 w-4\" />\n                          {partnershipForm.proposal ? partnershipForm.proposal.name : 'Выберите файл'}\n                        </Button>\n                      </div>\n                    </div>\n                    \n                    <Button \n                      type=\"submit\" \n                      className=\"w-full\"\n                      disabled={isSubmitting}\n                    >\n                      {isSubmitting ? 'Отправка...' : 'Отправить предложение'}\n                    </Button>\n                  </form>\n                </DialogContent>\n              </Dialog>\n            </div>\n          </div>\n        </Container>\n      </section>\n    </MainLayout>\n  );\n}\n","size_bytes":22347},"client/src/pages/payment-schedule-page.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { DashboardLayout } from \"@/components/layout/dashboard-layout\";\nimport { Card } from \"@/components/ui/card\";\nimport { DataTable } from \"@/components/ui/data-table\";\nimport { Pagination } from \"@/components/ui/pagination\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Loader2 } from \"lucide-react\";\n\ninterface PaymentSchedule {\n  id: number;\n  userId: number;\n  paymentNumber: number;\n  paymentDate: string;\n  contractNumber: string;\n  amount: number;\n}\n\ninterface Contract {\n  id: number;\n  number: string;\n}\n\nconst PaymentSchedulePage = () => {\n  const [selectedContract, setSelectedContract] = useState<string>(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10;\n  \n  // Fetch contracts for filter dropdown\n  const { data: contracts, isLoading: isContractsLoading } = useQuery<Contract[]>({\n    queryKey: [\"/api/contracts\"],\n  });\n  \n  // Fetch payment schedules data\n  const { data: payments, isLoading: isPaymentsLoading } = useQuery<PaymentSchedule[]>({\n    queryKey: [\"/api/payment-schedules\", selectedContract ? { contractNumber: selectedContract } : {}],\n  });\n  \n  // Calculate pagination\n  const totalPages = Math.ceil((payments?.length || 0) / itemsPerPage);\n  const paginatedPayments = payments?.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  ) || [];\n  \n  \n  // Format date\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ru-RU');\n  };\n  \n  // Format amount\n  const formatAmount = (amount: number) => {\n    return new Intl.NumberFormat('ru-RU').format(amount);\n  };\n  \n  // Handle contract selection\n  const handleContractChange = (value: string) => {\n    setSelectedContract(value === \"all\" ? \"\" : value);\n    setCurrentPage(1);\n  };\n  \n  // Loading state\n  const isLoading = isContractsLoading || isPaymentsLoading;\n\n  return (\n    <DashboardLayout>\n      <Card className=\"animate-fadeIn glass rounded-xl p-6 mb-6\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-2xl font-semibold\">График платежей</h2>\n          \n          <div className=\"flex\">\n            <div className=\"relative w-64\">\n              <Select value={selectedContract} onValueChange={handleContractChange}>\n                <SelectTrigger className=\"bg-background border border-border\">\n                  <SelectValue placeholder=\"Все договоры\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">Все договоры</SelectItem>\n                  {contracts?.map(contract => (\n                    <SelectItem key={contract.id} value={contract.number}>\n                      {contract.number}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n        </div>\n        \n        {isLoading ? (\n          <div className=\"flex justify-center items-center py-12\">\n            <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n          </div>\n        ) : (\n          <>\n            <DataTable\n              headers={[\n                { id: \"paymentNumber\", label: \"№ платежа\", align: \"center\" },\n                { id: \"paymentDate\", label: \"Дата платежа\", align: \"center\" },\n                { id: \"contractNumber\", label: \"Договор\", align: \"center\" },\n                { id: \"amount\", label: \"Сумма, ₽\", align: \"center\" }\n              ]}\n              data={paginatedPayments}\n              renderRow={(payment) => (\n                <tr key={payment.id} className=\"border-b border-border hover:bg-muted/40 transition-all\">\n                  <td className=\"p-3 text-center\">{payment.paymentNumber}</td>\n                  <td className=\"p-3 text-center\">{formatDate(payment.paymentDate)}</td>\n                  <td className=\"p-3 text-center\">{payment.contractNumber}</td>\n                  <td className=\"p-3 text-center\">{formatAmount(payment.amount)}</td>\n                </tr>\n              )}\n            />\n            \n            {payments && payments.length > 0 ? (\n              <>\n                <div className=\"mt-4 flex justify-between items-center\">\n                  <p className=\"text-sm text-muted-foreground\">\n                    Показано {paginatedPayments.length} из {payments.length} платежей\n                  </p>\n                  \n                  <Pagination\n                    currentPage={currentPage}\n                    totalPages={totalPages}\n                    onPageChange={setCurrentPage}\n                  />\n                </div>\n                \n              </>\n            ) : (\n              <div className=\"py-8 text-center text-muted-foreground\">\n                График платежей не найден\n              </div>\n            )}\n          </>\n        )}\n      </Card>\n    </DashboardLayout>\n  );\n};\n\nexport default PaymentSchedulePage;\n","size_bytes":5168},"client/src/pages/profile-page.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { DashboardLayout } from \"@/components/layout/dashboard-layout\";\nimport { useState } from \"react\";\nimport { useAuth } from \"@/hooks/use-auth\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useAutoSync } from \"@/hooks/use-auto-sync\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Loader2 } from \"lucide-react\";\n\ninterface CompanyData {\n  id: number;\n  userId: number;\n  name: string;\n  inn: string;\n  kpp: string;\n  ogrn: string;\n  legalAddress: string;\n}\n\ninterface ContactData {\n  id: number;\n  userId: number;\n  name: string;\n  managerEmail: string;\n  email: string;\n  phone: string;\n}\n\nconst ProfilePage = () => {\n  const { user } = useAuth();\n  const { toast } = useToast();\n  \n  // Auto-sync documents when user first visits profile\n  useAutoSync();\n  \n  // Fetch company profile data\n  const { \n    data: company, \n    isLoading: isCompanyLoading \n  } = useQuery<CompanyData | null>({\n    queryKey: [\"/api/company\"],\n  });\n  \n  // Fetch contact information\n  const {\n    data: contact,\n    isLoading: isContactLoading\n  } = useQuery<ContactData | null>({\n    queryKey: [\"/api/contact\"],\n  });\n  \n  // Handle loading states\n  const isLoading = isCompanyLoading || isContactLoading;\n\n  return (\n    <DashboardLayout>\n      <div className=\"animate-fadeIn bg-white/10 backdrop-blur-md rounded-xl p-6 mb-6 border border-white/20 shadow-lg\">\n        <h2 className=\"text-2xl font-semibold mb-6\">Мой профиль</h2>\n        \n        {isLoading ? (\n          <div className=\"flex justify-center items-center py-12\">\n            <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <Card className=\"bg-white/10 backdrop-blur-md rounded-xl shadow-lg border border-white/20\">\n              <CardContent className=\"p-4\">\n                <h3 className=\"text-lg font-medium mb-4\">Информация о компании</h3>\n                \n                <div className=\"space-y-3\">\n                  <div>\n                    <p className=\"text-sm text-muted-foreground\">Наименование организации</p>\n                    <p className=\"font-medium\">{company?.name || \"Нет данных\"}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-muted-foreground\">ИНН</p>\n                    <p className=\"font-medium\">{company?.inn || user?.inn || \"Нет данных\"}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-muted-foreground\">КПП</p>\n                    <p className=\"font-medium\">{company?.kpp || \"Нет данных\"}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-muted-foreground\">ОГРН</p>\n                    <p className=\"font-medium\">{company?.ogrn || \"Нет данных\"}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-muted-foreground\">Юридический адрес</p>\n                    <p className=\"font-medium\">{company?.legalAddress || \"Нет данных\"}</p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"bg-white/10 backdrop-blur-md rounded-xl shadow-lg border border-white/20\">\n              <CardContent className=\"p-4\">\n                <h3 className=\"text-lg font-medium mb-4\">Контактная информация</h3>\n                \n                <div className=\"space-y-3\">\n                  <div>\n                    <p className=\"text-sm text-muted-foreground\">ФИО контактного лица</p>\n                    <p className=\"font-medium\">{contact?.name || \"Нет данных\"}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-muted-foreground\">Почта ответственного лица</p>\n                    <p className=\"font-medium\">{contact?.managerEmail || \"Нет данных\"}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-muted-foreground\">Электронная почта</p>\n                    <p className=\"font-medium\">{contact?.email || user?.email || \"Нет данных\"}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-muted-foreground\">Телефон</p>\n                    <p className=\"font-medium\">{contact?.phone || \"Нет данных\"}</p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        )}\n      </div>\n    </DashboardLayout>\n  );\n};\n\nexport default ProfilePage;\n","size_bytes":4881},"client/src/pages/properties.tsx":{"content":"import { DataTable } from \"@/components/ui/data-table\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { PropertyData } from \"@/types\";\nimport { useLocation } from \"wouter\";\n\nexport default function Properties() {\n  const [, navigate] = useLocation();\n  \n  // Fetch properties\n  const { data: properties, isLoading } = useQuery<PropertyData[]>({\n    queryKey: ['/api/properties'],\n  });\n\n  const columns = [\n    {\n      header: \"Property\",\n      accessorKey: (property: PropertyData) => (\n        <div className=\"flex items-center\">\n          <div className=\"flex-shrink-0 h-10 w-10 bg-slate-100 rounded flex items-center justify-center\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-6 h-6 text-slate-500\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 21v-8.25M15.75 21v-8.25M8.25 21v-8.25M3 9l9-6 9 6m-1.5 12V10.332A48.36 48.36 0 0012 9.75c-2.551 0-5.056.2-7.5.582V21M3 21h18M12 6.75h.008v.008H12V6.75z\" />\n            </svg>\n          </div>\n          <div className=\"ml-4\">\n            <div className=\"text-sm font-medium text-slate-900\">{property.name}</div>\n            <div className=\"text-sm text-slate-500\">{property.address}, {property.city}</div>\n          </div>\n        </div>\n      ),\n    },\n    {\n      header: \"Type\",\n      accessorKey: \"propertyType\",\n    },\n    {\n      header: \"Address\",\n      accessorKey: (property: PropertyData) => (\n        <div className=\"text-sm text-slate-700\">\n          {property.address}<br />\n          {property.city}, {property.state} {property.zipCode}\n        </div>\n      ),\n    },\n    {\n      header: \"Units\",\n      accessorKey: (property: PropertyData) => {\n        return `${property.occupiedUnits}/${property.totalUnits}`;\n      },\n    },\n    {\n      header: \"Monthly Revenue\",\n      accessorKey: (property: PropertyData) => {\n        return `$${property.monthlyRevenue.toLocaleString()}`;\n      },\n    },\n    {\n      header: \"Status\",\n      accessorKey: (property: PropertyData) => {\n        const getStatusColor = (status: string) => {\n          switch (status.toLowerCase()) {\n            case 'active':\n              return (\n                <Badge className=\"bg-green-100 text-green-800 hover:bg-green-100\">\n                  Active\n                </Badge>\n              );\n            case 'pending_maintenance':\n              return (\n                <Badge className=\"bg-yellow-100 text-yellow-800 hover:bg-yellow-100\">\n                  Pending Maintenance\n                </Badge>\n              );\n            case 'inactive':\n              return (\n                <Badge className=\"bg-red-100 text-red-800 hover:bg-red-100\">\n                  Inactive\n                </Badge>\n              );\n            default:\n              return (\n                <Badge className=\"bg-slate-100 text-slate-800 hover:bg-slate-100\">\n                  {status}\n                </Badge>\n              );\n          }\n        };\n        \n        return getStatusColor(property.status);\n      },\n    },\n    {\n      header: \"Actions\",\n      accessorKey: (property: PropertyData) => (\n        <div>\n          <Button \n            variant=\"link\" \n            className=\"text-primary hover:text-primary/90 mr-3 p-0\"\n            onClick={() => navigate(`/properties/${property.id}`)}\n          >\n            View\n          </Button>\n          <Button \n            variant=\"link\" \n            className=\"text-slate-600 hover:text-slate-900 p-0\"\n            onClick={() => navigate(`/properties/${property.id}/edit`)}\n          >\n            Edit\n          </Button>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <div className=\"p-6\">\n      <header className=\"mb-6\">\n        <h1 className=\"text-2xl font-bold text-slate-900 mb-2\">Properties</h1>\n        <p className=\"text-slate-600\">Manage your real estate portfolio</p>\n      </header>\n\n      <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-5\">\n        <DataTable\n          data={properties || []}\n          columns={columns}\n          title=\"All Properties\"\n          actions={{\n            onAdd: () => navigate('/properties/add'),\n            addButtonLabel: \"Add Property\"\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","size_bytes":4383},"client/src/pages/tenants.tsx":{"content":"import { DataTable } from \"@/components/ui/data-table\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { TenantData } from \"@/types\";\nimport { useLocation } from \"wouter\";\n\nexport default function Tenants() {\n  const [, navigate] = useLocation();\n  \n  // Fetch tenants\n  const { data: tenants, isLoading } = useQuery<TenantData[]>({\n    queryKey: ['/api/tenants'],\n  });\n\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: (tenant: TenantData) => (\n        <div className=\"flex items-center\">\n          <div className=\"flex-shrink-0 h-10 w-10 bg-slate-100 rounded-full flex items-center justify-center\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-6 h-6 text-slate-500\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 6a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0zM4.501 20.118a7.5 7.5 0 0114.998 0A17.933 17.933 0 0112 21.75c-2.676 0-5.216-.584-7.499-1.632z\" />\n            </svg>\n          </div>\n          <div className=\"ml-4\">\n            <div className=\"text-sm font-medium text-slate-900\">{tenant.name}</div>\n            <div className=\"text-sm text-slate-500\">{tenant.email}</div>\n          </div>\n        </div>\n      ),\n    },\n    {\n      header: \"Contact\",\n      accessorKey: \"phone\",\n    },\n    {\n      header: \"Type\",\n      accessorKey: (tenant: TenantData) => {\n        return tenant.type === 'individual' ? 'Individual' : 'Company';\n      },\n    },\n    {\n      header: \"Payment Status\",\n      accessorKey: (tenant: TenantData) => {\n        const getStatusColor = (status: string) => {\n          switch (status.toLowerCase()) {\n            case 'current':\n              return (\n                <Badge className=\"bg-green-100 text-green-800 hover:bg-green-100\">\n                  Current\n                </Badge>\n              );\n            case 'late':\n              return (\n                <Badge className=\"bg-yellow-100 text-yellow-800 hover:bg-yellow-100\">\n                  Late\n                </Badge>\n              );\n            case 'overdue':\n              return (\n                <Badge className=\"bg-red-100 text-red-800 hover:bg-red-100\">\n                  Overdue\n                </Badge>\n              );\n            default:\n              return (\n                <Badge className=\"bg-slate-100 text-slate-800 hover:bg-slate-100\">\n                  {status}\n                </Badge>\n              );\n          }\n        };\n        \n        return getStatusColor(tenant.paymentStatus);\n      },\n    },\n    {\n      header: \"Actions\",\n      accessorKey: (tenant: TenantData) => (\n        <div>\n          <Button \n            variant=\"link\" \n            className=\"text-primary hover:text-primary/90 mr-3 p-0\"\n            onClick={() => navigate(`/tenants/${tenant.id}`)}\n          >\n            View\n          </Button>\n          <Button \n            variant=\"link\" \n            className=\"text-slate-600 hover:text-slate-900 p-0\"\n            onClick={() => navigate(`/tenants/${tenant.id}/edit`)}\n          >\n            Edit\n          </Button>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <div className=\"p-6\">\n      <header className=\"mb-6\">\n        <h1 className=\"text-2xl font-bold text-slate-900 mb-2\">Tenants</h1>\n        <p className=\"text-slate-600\">Manage your tenant information</p>\n      </header>\n\n      <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-5\">\n        <DataTable\n          data={tenants || []}\n          columns={columns}\n          title=\"All Tenants\"\n          actions={{\n            onAdd: () => navigate('/tenants/add'),\n            addButtonLabel: \"Add Tenant\"\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","size_bytes":3849},"client/src/styles/russia-map.css":{"content":".russia-map-container {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.russia-map {\n  width: 100%;\n  max-height: 500px;\n  height: auto;\n  margin: 0 auto;\n  display: block;\n}\n\n.russia-map svg {\n  overflow: hidden !important;\n}\n\n.map-container {\n  max-width: 1182px;\n  height: 606px;\n  overflow: hidden !important;\n  margin: 0 auto;\n  position: relative;\n  border: 1px solid rgba(180, 160, 70, 0.1);\n  border-radius: 8px;\n  box-shadow: 0 5px 20px rgba(180, 160, 70, 0.1);\n}\n\n.map-point {\n  width: 8px;\n  height: 8px;\n  background-color: #b4a046;\n  border-radius: 50%;\n  position: absolute;\n  box-shadow: 0 0 10px rgba(180, 160, 70, 0.8);\n  transform: translate(-50%, -50%);\n  z-index: 2;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.map-point:hover, .map-point.active {\n  width: 12px;\n  height: 12px;\n  background-color: #c5b057;\n  box-shadow: 0 0 15px rgba(200, 180, 90, 0.9);\n}\n\n.map-point.active:before {\n  content: '';\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  background-color: rgba(200, 180, 90, 0.3);\n  border-radius: 50%;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  animation: pulse-ring 1.5s infinite;\n}\n\n@keyframes pulse-ring {\n  0% {\n    transform: translate(-50%, -50%) scale(0.8);\n    opacity: 1;\n  }\n  100% {\n    transform: translate(-50%, -50%) scale(2);\n    opacity: 0;\n  }\n}\n\n.city-label {\n  position: absolute;\n  background-color: rgba(15, 15, 20, 0.8);\n  color: white;\n  padding: 6px 12px;\n  border-radius: 4px;\n  font-size: 14px;\n  pointer-events: none;\n  white-space: nowrap;\n  transform: translateX(-50%);\n  bottom: calc(100% + 15px);\n  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));\n  opacity: 0;\n  animation: fadeIn 0.3s forwards;\n  z-index: 5;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateX(-50%) translateY(5px); }\n  to { opacity: 1; transform: translateX(-50%) translateY(0); }\n}\n\n.city-label:after {\n  content: '';\n  position: absolute;\n  top: 100%;\n  left: 50%;\n  margin-left: -8px;\n  border-width: 8px;\n  border-style: solid;\n  border-color: rgba(15, 15, 20, 0.8) transparent transparent transparent;\n  filter: drop-shadow(0 2px 2px rgba(0, 0, 0, 0.1));\n}\n\n/* Map point pulse animation */\n.map-point-pulse {\n  position: absolute;\n  border-radius: 50%;\n  transform: translate(-50%, -50%);\n  animation: pulse 3s infinite;\n  background: radial-gradient(circle, rgba(185, 160, 70, 0.6) 0%, rgba(185, 160, 70, 0) 70%);\n  box-shadow: 0 0 20px rgba(185, 160, 70, 0.3);\n  backdrop-filter: blur(4px);\n  -webkit-backdrop-filter: blur(4px);\n}\n\n@keyframes pulse {\n  0% {\n    width: 20px;\n    height: 20px;\n    opacity: 0.8;\n  }\n  \n  50% {\n    width: 50px;\n    height: 50px;\n    opacity: 0.5;\n  }\n  \n  100% {\n    width: 20px;\n    height: 20px;\n    opacity: 0.8;\n  }\n}\n\n/* Regions styling */\npath.region {\n  fill: #f5f5f5; /* Default light gray */\n  stroke: #e0e0e0;\n  stroke-width: 0.5;\n  transition: all 0.3s ease;\n}\n\npath.region.has-office {\n  fill: #e6dec8; /* Light gold/beige for regions with offices */\n}\n\npath.region:hover {\n  fill: #ece4c5; /* Lighter gold on hover */\n  filter: drop-shadow(0 0 5px rgba(180, 160, 70, 0.3));\n}\n\npath.region.active {\n  fill: #d0c28c; /* Darker gold for active region */\n  stroke: #b4a046;\n  stroke-width: 1;\n  filter: drop-shadow(0 0 8px rgba(180, 160, 70, 0.5));\n}\n\n/* Add styling for the Moscow region special highlight */\npath.region[data-region-id=\"MOW\"] {\n  fill: #d4c692; /* Special highlight for Moscow */\n}\n\npath.region[data-region-id=\"MOW\"]:hover {\n  fill: #c5b057; /* Brighter highlight on hover */\n}\n","size_bytes":3625},"client/src/types/index.ts":{"content":"export interface StatCardProps {\n  title: string;\n  value: string;\n  trend: string;\n  trendDirection: 'up' | 'down' | 'neutral';\n  icon: React.ReactNode;\n  iconBgColor: string;\n  iconTextColor: string;\n}\n\nexport interface PropertyData {\n  id: number;\n  name: string;\n  address: string;\n  city: string;\n  state: string;\n  zipCode: string;\n  propertyType: string;\n  totalUnits: number;\n  occupiedUnits: number;\n  monthlyRevenue: number;\n  status: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface LeaseData {\n  id: number;\n  propertyId: number;\n  propertyName?: string;\n  unitNumber: string;\n  tenantId: number;\n  tenantName?: string;\n  startDate: string;\n  endDate: string;\n  monthlyRent: number;\n  securityDeposit: number;\n  status: string;\n}\n\nexport interface TenantData {\n  id: number;\n  name: string;\n  email: string;\n  phone: string;\n  type: string;\n  paymentStatus: string;\n}\n\nexport interface MaintenanceRequestData {\n  id: number;\n  propertyId: number;\n  propertyName?: string;\n  unitNumber: string;\n  description: string;\n  status: string;\n  priority: string;\n  requestedBy: number;\n  requestedByName?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface TransactionData {\n  id: number;\n  leaseId: number;\n  propertyName?: string;\n  unitNumber?: string;\n  amount: number;\n  date: string;\n  type: string;\n  description: string;\n  status: string;\n}\n\nexport interface ActivityData {\n  id: number;\n  userId: number;\n  userName?: string;\n  activityType: string;\n  entityType: string;\n  entityId: number;\n  entityName?: string;\n  description: string;\n  createdAt: string;\n  timeAgo?: string;\n  icon?: React.ReactNode;\n  iconBgColor?: string;\n  iconTextColor?: string;\n}\n\nexport interface RevenueChartData {\n  month: string;\n  revenue: number;\n}\n\nexport interface OccupancyChartData {\n  occupied: number;\n  vacant: number;\n  occupancyRate: number;\n}\n\nexport interface DashboardStats {\n  totalProperties: number;\n  activeLeases: number;\n  monthlyRevenue: number;\n  occupancyRate: number;\n  propertyTrend: string;\n  leaseTrend: string;\n  revenueTrend: string;\n  occupancyTrend: string;\n}\n","size_bytes":2125},"client/src/components/auth/login-form.tsx":{"content":"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { loginSchema, LoginData } from \"@shared/schema\";\nimport { useAuth } from \"@/hooks/use-auth\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Eye, EyeOff, Loader2 } from \"lucide-react\";\n\ninterface LoginFormProps {\n  onRegisterClick: () => void;\n  onResetClick: () => void;\n}\n\nexport default function LoginForm({ onRegisterClick, onResetClick }: LoginFormProps) {\n  const { loginMutation } = useAuth();\n  const [showPassword, setShowPassword] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n\n  const form = useForm<LoginData>({\n    resolver: zodResolver(loginSchema),\n    defaultValues: {\n      email: \"\",\n      password: \"\",\n    },\n  });\n\n  const onSubmit = (data: LoginData) => {\n    loginMutation.mutate(data);\n  };\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n        <FormField\n          control={form.control}\n          name=\"email\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Email</FormLabel>\n              <FormControl>\n                <Input \n                  placeholder=\"example@mail.ru\" \n                  {...field} \n                  className=\"bg-background border-border text-foreground\"\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        \n        <FormField\n          control={form.control}\n          name=\"password\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Пароль</FormLabel>\n              <div className=\"relative\">\n                <FormControl>\n                  <Input \n                    type={showPassword ? \"text\" : \"password\"} \n                    placeholder=\"Введите пароль\" \n                    {...field} \n                    className=\"bg-background border-border text-foreground pr-10\"\n                  />\n                </FormControl>\n                <Button\n                  type=\"button\"\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  className=\"absolute right-2 top-2 h-6 w-6\"\n                  onClick={() => setShowPassword(!showPassword)}\n                >\n                  {showPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n                </Button>\n              </div>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        \n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            <Checkbox \n              id=\"remember\" \n              checked={rememberMe} \n              onCheckedChange={(checked) => setRememberMe(!!checked)} \n            />\n            <label \n              htmlFor=\"remember\" \n              className=\"text-sm font-medium text-muted-foreground cursor-pointer\"\n            >\n              Запомнить меня\n            </label>\n          </div>\n          \n          <Button \n            type=\"button\" \n            variant=\"link\" \n            className=\"p-0 text-primary hover:text-primary/90\"\n            onClick={onResetClick}\n          >\n            Забыли пароль?\n          </Button>\n        </div>\n        \n        <Button \n          type=\"submit\" \n          className=\"w-full\" \n          disabled={loginMutation.isPending}\n        >\n          {loginMutation.isPending ? (\n            <>\n              <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n              Вход...\n            </>\n          ) : (\n            \"Войти\"\n          )}\n        </Button>\n        \n        <div className=\"text-center\">\n          <p className=\"text-sm text-muted-foreground\">\n            Еще нет аккаунта?{\" \"}\n            <Button \n              type=\"button\" \n              variant=\"link\" \n              className=\"p-0 text-primary hover:text-primary/90\"\n              onClick={onRegisterClick}\n            >\n              Зарегистрироваться\n            </Button>\n          </p>\n        </div>\n      </form>\n    </Form>\n  );\n}\n","size_bytes":4433},"client/src/components/auth/register-form.tsx":{"content":"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { registrationSchema, RegistrationData } from \"@shared/schema\";\nimport { useAuth } from \"@/hooks/use-auth\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Eye, EyeOff, Loader2 } from \"lucide-react\";\n\ninterface RegisterFormProps {\n  onLoginClick: () => void;\n}\n\nexport default function RegisterForm({ onLoginClick }: RegisterFormProps) {\n  const { registerMutation } = useAuth();\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  const form = useForm<RegistrationData>({\n    resolver: zodResolver(registrationSchema),\n    defaultValues: {\n      username: \"\",\n      email: \"\",\n      inn: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n    },\n  });\n\n  const onSubmit = (data: RegistrationData) => {\n    registerMutation.mutate(data);\n  };\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n        <FormField\n          control={form.control}\n          name=\"email\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Email</FormLabel>\n              <FormControl>\n                <Input \n                  placeholder=\"example@mail.ru\" \n                  type=\"email\"\n                  {...field} \n                  className=\"bg-background border-border text-foreground\"\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        \n        <FormField\n          control={form.control}\n          name=\"inn\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>ИНН</FormLabel>\n              <FormControl>\n                <Input \n                  placeholder=\"Введите ИНН\" \n                  {...field} \n                  className=\"bg-background border-border text-foreground\"\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        \n        <FormField\n          control={form.control}\n          name=\"password\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Пароль</FormLabel>\n              <div className=\"relative\">\n                <FormControl>\n                  <Input \n                    type={showPassword ? \"text\" : \"password\"} \n                    placeholder=\"Создайте пароль\" \n                    {...field} \n                    className=\"bg-background border-border text-foreground pr-10\"\n                  />\n                </FormControl>\n                <Button\n                  type=\"button\"\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  className=\"absolute right-2 top-2 h-6 w-6\"\n                  onClick={() => setShowPassword(!showPassword)}\n                >\n                  {showPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n                </Button>\n              </div>\n              <div className=\"mt-1\">\n                <div className=\"text-xs text-muted-foreground mb-1\">Требования к паролю:</div>\n                <ul className=\"text-xs text-muted-foreground list-disc pl-5\">\n                  <li>Минимум 8 символов</li>\n                  <li>Хотя бы одна заглавная буква</li>\n                  <li>Хотя бы одна цифра</li>\n                  <li>Хотя бы один специальный символ</li>\n                </ul>\n              </div>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        \n        <FormField\n          control={form.control}\n          name=\"confirmPassword\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Подтверждение пароля</FormLabel>\n              <div className=\"relative\">\n                <FormControl>\n                  <Input \n                    type={showConfirmPassword ? \"text\" : \"password\"} \n                    placeholder=\"Повторите пароль\" \n                    {...field} \n                    className=\"bg-background border-border text-foreground pr-10\"\n                  />\n                </FormControl>\n                <Button\n                  type=\"button\"\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  className=\"absolute right-2 top-2 h-6 w-6\"\n                  onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                >\n                  {showConfirmPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n                </Button>\n              </div>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        \n        <Button \n          type=\"submit\" \n          className=\"w-full mt-6\" \n          disabled={registerMutation.isPending}\n        >\n          {registerMutation.isPending ? (\n            <>\n              <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n              Регистрация...\n            </>\n          ) : (\n            \"Зарегистрироваться\"\n          )}\n        </Button>\n        \n        <div className=\"text-center\">\n          <p className=\"text-sm text-muted-foreground\">\n            Уже есть аккаунт?{\" \"}\n            <Button \n              type=\"button\" \n              variant=\"link\" \n              className=\"p-0 text-primary hover:text-primary/90\"\n              onClick={onLoginClick}\n            >\n              Войти\n            </Button>\n          </p>\n        </div>\n      </form>\n    </Form>\n  );\n}\n","size_bytes":5932},"client/src/components/auth/reset-password-form.tsx":{"content":"import { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { resetPasswordSchema, ResetPasswordData } from \"@shared/schema\";\nimport { useAuth } from \"@/hooks/use-auth\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Loader2 } from \"lucide-react\";\n\ninterface ResetPasswordFormProps {\n  onLoginClick: () => void;\n}\n\nexport default function ResetPasswordForm({ onLoginClick }: ResetPasswordFormProps) {\n  const { resetPasswordMutation } = useAuth();\n\n  const form = useForm<ResetPasswordData>({\n    resolver: zodResolver(resetPasswordSchema),\n    defaultValues: {\n      email: \"\",\n    },\n  });\n\n  const onSubmit = (data: ResetPasswordData) => {\n    resetPasswordMutation.mutate(data);\n  };\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n        <FormField\n          control={form.control}\n          name=\"email\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Email</FormLabel>\n              <FormControl>\n                <Input \n                  placeholder=\"example@mail.ru\" \n                  type=\"email\"\n                  {...field} \n                  className=\"bg-background border-border text-foreground\"\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        \n        <Button \n          type=\"submit\" \n          className=\"w-full\" \n          disabled={resetPasswordMutation.isPending}\n        >\n          {resetPasswordMutation.isPending ? (\n            <>\n              <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n              Отправка...\n            </>\n          ) : (\n            \"Отправить инструкцию\"\n          )}\n        </Button>\n        \n        <div className=\"text-center\">\n          <p className=\"text-sm text-muted-foreground\">\n            Вспомнили пароль?{\" \"}\n            <Button \n              type=\"button\" \n              variant=\"link\" \n              className=\"p-0 text-primary hover:text-primary/90\"\n              onClick={onLoginClick}\n            >\n              Вернуться ко входу\n            </Button>\n          </p>\n        </div>\n      </form>\n    </Form>\n  );\n}\n","size_bytes":2443},"client/src/components/dashboard/occupancy-chart.tsx":{"content":"import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { PieChart, Pie, Cell, ResponsiveContainer, Tooltip, Legend } from \"recharts\";\nimport { OccupancyChartData } from \"@/types\";\n\ninterface OccupancyChartProps {\n  data: OccupancyChartData;\n  isLoading?: boolean;\n}\n\nexport function OccupancyChart({ data, isLoading = false }: OccupancyChartProps) {\n  const chartData = [\n    { name: 'Occupied Units', value: data.occupied },\n    { name: 'Vacant Units', value: data.vacant },\n  ];\n\n  const COLORS = ['hsl(168, 85%, 35%)', '#e2e8f0'];\n\n  return (\n    <Card>\n      <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n        <CardTitle className=\"text-md font-medium\">Occupancy Rate</CardTitle>\n        <Button variant=\"ghost\" size=\"sm\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-5 h-5\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM12.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM18.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0z\" />\n          </svg>\n        </Button>\n      </CardHeader>\n      <CardContent className=\"pt-0\">\n        {isLoading ? (\n          <div className=\"h-64 w-full flex items-center justify-center\">\n            <div className=\"animate-spin h-8 w-8 border-4 border-primary border-t-transparent rounded-full\"></div>\n          </div>\n        ) : (\n          <div className=\"h-64 flex items-center justify-center\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={chartData}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  innerRadius={60}\n                  outerRadius={90}\n                  fill=\"#8884d8\"\n                  paddingAngle={1}\n                  dataKey=\"value\"\n                  startAngle={90}\n                  endAngle={-270}\n                  label={({ cx, cy, midAngle, innerRadius, outerRadius, percent }) => {\n                    if (percent === 0) return null;\n                    if (percent < 0.1) return null;\n                    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n                    const x = cx + radius * Math.cos(-midAngle * (Math.PI / 180));\n                    const y = cy + radius * Math.sin(-midAngle * (Math.PI / 180));\n                    return (\n                      <text \n                        x={x} \n                        y={y} \n                        fill=\"white\" \n                        textAnchor=\"middle\" \n                        dominantBaseline=\"central\"\n                        fontWeight=\"bold\"\n                      >\n                        {`${(percent * 100).toFixed(1)}%`}\n                      </text>\n                    );\n                  }}\n                >\n                  {chartData.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip \n                  formatter={(value) => [`${value} units`, undefined]}\n                  contentStyle={{ borderRadius: '0.5rem', border: '1px solid #e2e8f0', background: '#ffffff' }}\n                />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        )}\n\n        <div className=\"mt-4\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <div className=\"flex items-center\">\n              <span className=\"w-3 h-3 bg-primary rounded-full mr-2\"></span>\n              <span className=\"text-sm text-slate-700\">Occupied Units</span>\n            </div>\n            <span className=\"text-sm font-medium\">{data.occupied}</span>\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <span className=\"w-3 h-3 bg-slate-200 rounded-full mr-2\"></span>\n              <span className=\"text-sm text-slate-700\">Vacant Units</span>\n            </div>\n            <span className=\"text-sm font-medium\">{data.vacant}</span>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":4275},"client/src/components/dashboard/properties-table.tsx":{"content":"import { DataTable } from \"@/components/ui/data-table\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { PropertyData } from \"@/types\";\nimport { useLocation } from \"wouter\";\n\ninterface PropertiesTableProps {\n  properties: PropertyData[];\n  isLoading?: boolean;\n}\n\nexport function PropertiesTable({ properties, isLoading = false }: PropertiesTableProps) {\n  const [, navigate] = useLocation();\n\n  const columns = [\n    {\n      header: \"Property\",\n      accessorKey: (property: PropertyData) => (\n        <div className=\"flex items-center\">\n          <div className=\"flex-shrink-0 h-10 w-10 bg-slate-100 rounded flex items-center justify-center\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-6 h-6 text-slate-500\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 21v-8.25M15.75 21v-8.25M8.25 21v-8.25M3 9l9-6 9 6m-1.5 12V10.332A48.36 48.36 0 0012 9.75c-2.551 0-5.056.2-7.5.582V21M3 21h18M12 6.75h.008v.008H12V6.75z\" />\n            </svg>\n          </div>\n          <div className=\"ml-4\">\n            <div className=\"text-sm font-medium text-slate-900\">{property.name}</div>\n            <div className=\"text-sm text-slate-500\">{property.address}, {property.city}</div>\n          </div>\n        </div>\n      ),\n    },\n    {\n      header: \"Type\",\n      accessorKey: \"propertyType\",\n    },\n    {\n      header: \"Leases\",\n      accessorKey: (property: PropertyData) => {\n        return `${property.occupiedUnits}/${property.totalUnits}`;\n      },\n    },\n    {\n      header: \"Monthly Revenue\",\n      accessorKey: (property: PropertyData) => {\n        return `$${property.monthlyRevenue.toLocaleString()}`;\n      },\n    },\n    {\n      header: \"Status\",\n      accessorKey: (property: PropertyData) => {\n        const getStatusColor = (status: string) => {\n          switch (status.toLowerCase()) {\n            case 'active':\n              return (\n                <Badge className=\"bg-green-100 text-green-800 hover:bg-green-100\">\n                  Active\n                </Badge>\n              );\n            case 'pending_maintenance':\n              return (\n                <Badge className=\"bg-yellow-100 text-yellow-800 hover:bg-yellow-100\">\n                  Pending Maintenance\n                </Badge>\n              );\n            case 'inactive':\n              return (\n                <Badge className=\"bg-red-100 text-red-800 hover:bg-red-100\">\n                  Inactive\n                </Badge>\n              );\n            default:\n              return (\n                <Badge className=\"bg-slate-100 text-slate-800 hover:bg-slate-100\">\n                  {status}\n                </Badge>\n              );\n          }\n        };\n        \n        return getStatusColor(property.status);\n      },\n    },\n    {\n      header: \"Actions\",\n      accessorKey: (property: PropertyData) => (\n        <div>\n          <Button \n            variant=\"link\" \n            className=\"text-primary hover:text-primary/90 mr-3 p-0\"\n            onClick={() => navigate(`/properties/${property.id}`)}\n          >\n            View\n          </Button>\n          <Button \n            variant=\"link\" \n            className=\"text-slate-600 hover:text-slate-900 p-0\"\n            onClick={() => navigate(`/properties/${property.id}/edit`)}\n          >\n            Edit\n          </Button>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <DataTable\n      data={properties}\n      columns={columns}\n      title=\"Properties\"\n      actions={{\n        onAdd: () => navigate('/properties/add'),\n        addButtonLabel: \"Add Property\"\n      }}\n    />\n  );\n}\n","size_bytes":3700},"client/src/components/dashboard/recent-activity.tsx":{"content":"import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { ActivityData } from \"@/types\";\nimport { formatDistanceToNow } from \"date-fns\";\n\ninterface RecentActivityProps {\n  activities: ActivityData[];\n  isLoading?: boolean;\n}\n\nexport function RecentActivity({ activities, isLoading = false }: RecentActivityProps) {\n  const getActivityIcon = (activity: ActivityData) => {\n    switch (activity.activityType) {\n      case 'lease_signed':\n        return (\n          <div className=\"flex-shrink-0 w-8 h-8 rounded-full bg-blue-100 flex items-center justify-center mr-4\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-4 h-4 text-blue-600\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 12h3.75M9 15h3.75M9 18h3.75m3 .75H18a2.25 2.25 0 002.25-2.25V6.108c0-1.135-.845-2.098-1.976-2.192a48.424 48.424 0 00-1.123-.08m-5.801 0c-.065.21-.1.433-.1.664 0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75 2.25 2.25 0 00-.1-.664m-5.8 0A2.251 2.251 0 0113.5 2.25H15c1.012 0 1.867.668 2.15 1.586m-5.8 0c-.376.023-.75.05-1.124.08C9.095 4.01 8.25 4.973 8.25 6.108V8.25m0 0H4.875c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V9.375c0-.621-.504-1.125-1.125-1.125H8.25zM6.75 12h.008v.008H6.75V12zm0 3h.008v.008H6.75V15zm0 3h.008v.008H6.75V18z\" />\n            </svg>\n          </div>\n        );\n      case 'payment_received':\n        return (\n          <div className=\"flex-shrink-0 w-8 h-8 rounded-full bg-green-100 flex items-center justify-center mr-4\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-4 h-4 text-green-600\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 6v12m-3-2.818l.879.659c1.171.879 3.07.879 4.242 0 1.172-.879 1.172-2.303 0-3.182C13.536 12.219 12.768 12 12 12c-.725 0-1.45-.22-2.003-.659-1.106-.879-1.106-2.303 0-3.182s2.9-.879 4.006 0l.415.33M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n          </div>\n        );\n      case 'maintenance_request':\n        return (\n          <div className=\"flex-shrink-0 w-8 h-8 rounded-full bg-yellow-100 flex items-center justify-center mr-4\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-4 h-4 text-yellow-600\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9.568 3H5.25A2.25 2.25 0 003 5.25v4.318c0 .597.237 1.17.659 1.591l9.581 9.581c.699.699 1.78.872 2.607.33a18.095 18.095 0 005.223-5.223c.542-.827.369-1.908-.33-2.607L11.16 3.66A2.25 2.25 0 009.568 3z\" />\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 6h.008v.008H6V6z\" />\n            </svg>\n          </div>\n        );\n      case 'tenant_added':\n        return (\n          <div className=\"flex-shrink-0 w-8 h-8 rounded-full bg-purple-100 flex items-center justify-center mr-4\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-4 h-4 text-purple-600\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 19.128a9.38 9.38 0 002.625.372 9.337 9.337 0 004.121-.952 4.125 4.125 0 00-7.533-2.493M15 19.128v-.003c0-1.113-.285-2.16-.786-3.07M15 19.128v.106A12.318 12.318 0 018.624 21c-2.331 0-4.512-.645-6.374-1.766l-.001-.109a6.375 6.375 0 0111.964-3.07M12 6.375a3.375 3.375 0 11-6.75 0 3.375 3.375 0 016.75 0zm8.25 2.25a2.625 2.625 0 11-5.25 0 2.625 2.625 0 015.25 0z\" />\n            </svg>\n          </div>\n        );\n      default:\n        return (\n          <div className=\"flex-shrink-0 w-8 h-8 rounded-full bg-slate-100 flex items-center justify-center mr-4\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-4 h-4 text-slate-600\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 21v-8.25M15.75 21v-8.25M8.25 21v-8.25M3 9l9-6 9 6m-1.5 12V10.332A48.36 48.36 0 0012 9.75c-2.551 0-5.056.2-7.5.582V21M3 21h18M12 6.75h.008v.008H12V6.75z\" />\n            </svg>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n        <CardTitle className=\"text-md font-medium\">Recent Activity</CardTitle>\n        <Button variant=\"link\" className=\"text-primary hover:text-primary/90 p-0\">\n          View All\n        </Button>\n      </CardHeader>\n      <CardContent className=\"pt-0\">\n        {isLoading ? (\n          <div className=\"flex justify-center py-6\">\n            <div className=\"animate-spin h-8 w-8 border-4 border-primary border-t-transparent rounded-full\"></div>\n          </div>\n        ) : activities.length === 0 ? (\n          <div className=\"py-6 text-center text-slate-500\">\n            No recent activities to display\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            {activities.map((activity) => (\n              <div key={activity.id} className=\"flex items-start\">\n                {getActivityIcon(activity)}\n                <div className=\"flex-1\">\n                  <p className=\"text-sm text-slate-900\">{activity.description}</p>\n                  <p className=\"text-xs text-slate-500 mt-1\">\n                    {formatDistanceToNow(new Date(activity.createdAt), { addSuffix: true })}\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":5683},"client/src/components/dashboard/revenue-chart.tsx":{"content":"import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { useState } from \"react\";\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { RevenueChartData } from \"@/types\";\n\ninterface RevenueChartProps {\n  data: RevenueChartData[];\n  isLoading?: boolean;\n}\n\nexport function RevenueChart({ data, isLoading = false }: RevenueChartProps) {\n  const [chartPeriod, setChartPeriod] = useState<'monthly' | 'quarterly' | 'yearly'>('monthly');\n\n  return (\n    <Card>\n      <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n        <CardTitle className=\"text-md font-medium\">Revenue Overview</CardTitle>\n        <div className=\"flex space-x-2\">\n          <Button \n            variant={chartPeriod === 'monthly' ? 'secondary' : 'ghost'} \n            size=\"sm\" \n            onClick={() => setChartPeriod('monthly')}\n            className={chartPeriod === 'monthly' ? 'bg-primary-50 text-primary hover:bg-primary-100 hover:text-primary' : ''}\n          >\n            Monthly\n          </Button>\n          <Button \n            variant={chartPeriod === 'quarterly' ? 'secondary' : 'ghost'} \n            size=\"sm\" \n            onClick={() => setChartPeriod('quarterly')}\n            className={chartPeriod === 'quarterly' ? 'bg-primary-50 text-primary hover:bg-primary-100 hover:text-primary' : ''}\n          >\n            Quarterly\n          </Button>\n          <Button \n            variant={chartPeriod === 'yearly' ? 'secondary' : 'ghost'} \n            size=\"sm\" \n            onClick={() => setChartPeriod('yearly')}\n            className={chartPeriod === 'yearly' ? 'bg-primary-50 text-primary hover:bg-primary-100 hover:text-primary' : ''}\n          >\n            Yearly\n          </Button>\n        </div>\n      </CardHeader>\n      <CardContent className=\"pt-0\">\n        {isLoading ? (\n          <div className=\"h-64 w-full flex items-center justify-center\">\n            <div className=\"animate-spin h-8 w-8 border-4 border-primary border-t-transparent rounded-full\"></div>\n          </div>\n        ) : (\n          <div className=\"h-64\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <AreaChart\n                data={data}\n                margin={{\n                  top: 10,\n                  right: 10,\n                  left: 0,\n                  bottom: 0,\n                }}\n              >\n                <defs>\n                  <linearGradient id=\"colorRevenue\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                    <stop offset=\"5%\" stopColor=\"hsl(168, 85%, 35%)\" stopOpacity={0.8}/>\n                    <stop offset=\"95%\" stopColor=\"hsl(168, 85%, 35%)\" stopOpacity={0}/>\n                  </linearGradient>\n                </defs>\n                <CartesianGrid strokeDasharray=\"3 3\" vertical={false} stroke=\"#e2e8f0\" />\n                <XAxis \n                  dataKey=\"month\" \n                  axisLine={false} \n                  tickLine={false}\n                  tick={{ fontSize: 12, fill: '#64748b' }}\n                />\n                <YAxis \n                  axisLine={false} \n                  tickLine={false}\n                  tick={{ fontSize: 12, fill: '#64748b' }}\n                  tickFormatter={(value) => `$${value.toLocaleString()}`}\n                />\n                <Tooltip \n                  formatter={(value: number) => [`$${value.toLocaleString()}`, 'Revenue']}\n                  contentStyle={{ borderRadius: '0.5rem', border: '1px solid #e2e8f0', background: '#ffffff' }}\n                />\n                <Area \n                  type=\"monotone\" \n                  dataKey=\"revenue\" \n                  stroke=\"hsl(168, 85%, 35%)\" \n                  fillOpacity={1} \n                  fill=\"url(#colorRevenue)\"\n                  strokeWidth={2} \n                />\n              </AreaChart>\n            </ResponsiveContainer>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":4013},"client/src/components/home/features-section.tsx":{"content":"import { Clock, ShieldCheck, HandCoins } from \"lucide-react\";\n\ninterface FeatureCardProps {\n  icon: React.ReactNode;\n  title: string;\n  description: string;\n  delay: string;\n}\n\nconst FeatureCard = ({ icon, title, description, delay }: FeatureCardProps) => {\n  return (\n    <div className=\"glass p-6 rounded-xl glass-hover animate-fadeIn\" style={{ animationDelay: delay }}>\n      <div className=\"w-12 h-12 rounded-full bg-primary/20 flex items-center justify-center mb-4\">\n        {icon}\n      </div>\n      <h3 className=\"text-xl font-semibold mb-3\">{title}</h3>\n      <p className=\"text-white/70\">\n        {description}\n      </p>\n    </div>\n  );\n};\n\nexport function FeaturesSection() {\n  const features = [\n    {\n      icon: <Clock className=\"h-6 w-6 text-primary\" />,\n      title: \"Быстрое рассмотрение\",\n      description: \"Минимальный пакет документов и оперативное принятие решения по вашей заявке в течение 1-2 рабочих дней.\",\n      delay: \"0.1s\"\n    },\n    {\n      icon: <HandCoins className=\"h-6 w-6 text-primary\" />,\n      title: \"Гибкие условия\",\n      description: \"Индивидуальный график платежей, учитывающий особенности вашего бизнеса и сезонность.\",\n      delay: \"0.2s\"\n    },\n    {\n      icon: <ShieldCheck className=\"h-6 w-6 text-primary\" />,\n      title: \"Надежность\",\n      description: \"Более 8 лет на рынке лизинговых услуг, сотни довольных клиентов и надежные партнерские отношения.\",\n      delay: \"0.3s\"\n    }\n  ];\n\n  return (\n    <section className=\"py-20 relative overflow-hidden\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center max-w-2xl mx-auto mb-16\">\n          <h2 className=\"text-3xl md:text-4xl font-bold mb-6\">Почему выбирают нас</h2>\n          <p className=\"text-white/70 text-lg\">\n            Мы стремимся сделать лизинг доступным и выгодным инструментом для развития вашего бизнеса\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {features.map((feature, index) => (\n            <FeatureCard\n              key={index}\n              icon={feature.icon}\n              title={feature.title}\n              description={feature.description}\n              delay={feature.delay}\n            />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2677},"client/src/components/home/hero-section.tsx":{"content":"import { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowRight, MapPin } from \"lucide-react\";\n\nexport function HeroSection() {\n  return (\n    <section className=\"py-24 md:py-32 relative overflow-hidden\">\n      {/* Decorative background elements */}\n      <div className=\"absolute top-20 left-20 w-96 h-96 rounded-full bg-primary/5 blur-3xl\"></div>\n      <div className=\"absolute bottom-20 right-20 w-96 h-96 rounded-full bg-primary/5 blur-3xl\"></div>\n      \n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex flex-col md:flex-row items-center justify-between gap-8\">\n          <div className=\"md:w-1/2 animate-fadeIn\">\n            <h1 className=\"text-4xl md:text-5xl lg:text-6xl font-bold mb-6 leading-tight\">\n              Современные решения для <span className=\"text-primary\">лизинга</span>\n            </h1>\n            <p className=\"text-xl text-white/80 mb-10\">\n              Предлагаем выгодные условия лизинга спецтехники, оборудования, \n              недвижимости и транспорта для вашего бизнеса.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4\">\n              <Button asChild size=\"lg\" className=\"group\">\n                <Link href=\"#services\">\n                  Наши услуги\n                  <ArrowRight className=\"ml-2 h-5 w-5 transition-transform group-hover:translate-x-1\" />\n                </Link>\n              </Button>\n              <Button asChild variant=\"outline\" size=\"lg\" className=\"glass glass-hover\">\n                <Link href=\"#map\">\n                  Наши филиалы\n                  <MapPin className=\"ml-2 h-5 w-5\" />\n                </Link>\n              </Button>\n            </div>\n          </div>\n          \n          <div className=\"md:w-1/2 flex justify-center mt-10 md:mt-0\">\n            <div className=\"relative w-full max-w-lg aspect-video rounded-xl overflow-hidden shadow-glass border border-primary/20\">\n              <video \n                className=\"w-full h-full object-cover\" \n                autoPlay \n                muted \n                loop \n                playsInline\n              >\n                <source src=\"https://www.investl.ru/wp-content/themes/centras/images/banner-bg.mp4\" type=\"video/mp4\" />\n                Ваш браузер не поддерживает видео\n              </video>\n              <div className=\"absolute inset-0 bg-gradient-to-r from-background/70 to-transparent\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2687},"client/src/components/layout/dashboard-layout.tsx":{"content":"import { ReactNode, useState } from \"react\";\nimport { Header } from \"./header\";\nimport { SidebarNavigation } from \"./sidebar-navigation\";\n\nexport interface DashboardLayoutProps {\n  children: ReactNode;\n}\n\nexport const DashboardLayout = ({ children }: DashboardLayoutProps) => {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n\n  return (\n    <div className=\"min-h-screen bg-background text-foreground\">\n      {/* Header */}\n      <Header \n        mobileMenuOpen={mobileMenuOpen} \n        setMobileMenuOpen={setMobileMenuOpen} \n      />\n      \n      <main className=\"container mx-auto flex flex-col md:flex-row\">\n        {/* Sidebar - Mobile version is controlled by state */}\n        <SidebarNavigation \n          mobileMenuOpen={mobileMenuOpen} \n          setMobileMenuOpen={setMobileMenuOpen} \n        />\n        \n        {/* Main Content */}\n        <section className=\"flex-grow p-4\">\n          {children}\n        </section>\n      </main>\n    </div>\n  );\n};\n","size_bytes":977},"client/src/components/layout/footer.tsx":{"content":"import { Link } from \"wouter\";\nimport { Mail, Phone, MapPin } from \"lucide-react\";\n\nexport function Footer() {\n  return (\n    <footer className=\"glass py-12\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">О компании</h3>\n            <p className=\"text-white/70 mb-4\">\n              ООО «ИНВЕСТ-лизинг» - надежный партнер для всех, кто стремится к успешному развитию своего бизнеса.\n            </p>\n            <div className=\"flex space-x-4\">\n              <a \n                href=\"https://vk.com/investlizingkrasnodar\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\" \n                className=\"text-white/60 hover:text-primary transition-colors\"\n                aria-label=\"ВКонтакте\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                  <path d=\"M21.579 6.855c.14-.465 0-.806-.666-.806h-2.193c-.558 0-.818.295-.958.619 0 0-1.12 2.728-2.705 4.5-.515.516-.747.68-1.028.68-.14 0-.346-.164-.346-.63v-4.36c0-.56-.162-.806-.624-.806H9.924c-.348 0-.558.257-.558.503 0 .528.79.65.869 2.138v3.229c0 .708-.127.837-.406.837-.742 0-2.546-2.725-3.617-5.845-.209-.606-.42-.847-.98-.847H2.039c-.625 0-.75.294-.75.619 0 .58.742 3.463 3.461 7.27 1.812 2.607 4.363 4.018 6.686 4.018 1.394 0 1.565-.31 1.565-.87v-2.002c0-.64.134-.769.584-.769.332 0 .91.165 2.25 1.458 1.531 1.532 1.785 2.218 2.644 2.218h2.193c.624 0 .937-.31.757-.93-.197-.616-.9-1.514-1.839-2.585-.51-.601-1.275-1.246-1.507-1.568-.325-.419-.231-.604 0-.976 0 0 2.672-3.765 2.952-5.046z\"/>\n                </svg>\n              </a>\n              <a \n                href=\"https://t.me/investlizingkrasnodar\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\" \n                className=\"text-white/60 hover:text-primary transition-colors\"\n                aria-label=\"Telegram\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                  <path d=\"M22.05 1.577c-.393-.016-.784.08-1.117.235-.484.186-4.92 1.902-9.41 3.64-2.26.873-4.518 1.746-6.256 2.415-1.737.67-3.045 1.168-3.114 1.192-.46.16-1.082.362-1.61.984-.133.155-.267.354-.335.628s-.038.622.095.895c.265.547.714.773 1.244.976 1.76.564 3.58 1.102 5.087 1.608.556 1.96 1.09 3.927 1.618 5.89.174.394.553.54.944.544l-.002.02s.307.03.472-.093c.315-.219.407-.564.53-.847.265-.467 4.987-4.796 5.458-5.335-.044.033 0 0 0 0 .656.332 1.449.593 2.11.794 1.657.5 2.823.365 3.325-.537.995-1.793-1.987-4.044-6.372-6.533-.47-.272-.952-.539-1.444-.797-.917-.475-2.1-.898-3.533-1.302-1.34-.377-2.826-.714-4.328-.964-1.5-.25-2.998-.416-4.415-.43zm-.29.89c1.358.034 2.792.21 4.237.448 1.421.238 2.846.563 4.125.92 1.28.354 2.43.767 3.22 1.152.46.242.827.4 1.285.665 3.647 2.072 5.747 3.97 4.966 5.28-.42.708-2.3.482-3.487.168-.75-.237-1.345-.396-2.018-.762-.347-.198-1.225-.493-1.225-.493s-6.845 6.213-7.28 6.646c-.52.511-.407.371-.376-.238-.1-1.798-.296-6.443-.296-6.443l-.282-.162s-3.876-1.242-5.74-1.846c-1.172-.377-2.925-.938-2.644-1.517.232-.48 1.43-.945 4.22-2.018 1.607-.62 3.59-1.39 5.705-2.207 4.157-1.607 8.4-3.253 8.727-3.383.232-.09.52-.182.834-.17z\"/>\n                </svg>\n              </a>\n            </div>\n          </div>\n          \n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Услуги</h3>\n            <ul className=\"space-y-2\">\n              <li>\n                <Link href=\"/services/spectechnika\" className=\"text-white/70 hover:text-primary transition-colors\">\n                  Спецтехника\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/services/oborudovanie\" className=\"text-white/70 hover:text-primary transition-colors\">\n                  Оборудование\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/services/nedvijimost\" className=\"text-white/70 hover:text-primary transition-colors\">\n                  Недвижимость\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/services/gruzovye-avtomobili\" className=\"text-white/70 hover:text-primary transition-colors\">\n                  Грузовые автомобили\n                </Link>\n              </li>\n            </ul>\n          </div>\n          \n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Информация</h3>\n            <ul className=\"space-y-2\">\n              <li>\n                <Link href=\"/about\" className=\"text-white/70 hover:text-primary transition-colors\">\n                  О компании\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/partners\" className=\"text-white/70 hover:text-primary transition-colors\">\n                  Партнеры\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/faq\" className=\"text-white/70 hover:text-primary transition-colors\">\n                  FAQ\n                </Link>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-white/70 hover:text-primary transition-colors\">\n                  Политика конфиденциальности\n                </a>\n              </li>\n            </ul>\n          </div>\n          \n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Контакты</h3>\n            <ul className=\"space-y-3\">\n              <li className=\"flex items-start\">\n                <Mail className=\"h-5 w-5 mr-2 text-primary flex-shrink-0 mt-0.5\" />\n                <span className=\"text-white/70\">info@investl.ru</span>\n              </li>\n              <li className=\"flex items-start\">\n                <Phone className=\"h-5 w-5 mr-2 text-primary flex-shrink-0 mt-0.5\" />\n                <span className=\"text-white/70\">+7 (919) 110-70-55</span>\n              </li>\n              <li className=\"flex items-start\">\n                <MapPin className=\"h-5 w-5 mr-2 text-primary flex-shrink-0 mt-0.5\" />\n                <span className=\"text-white/70\">г. Краснодар ул. Российская д. 388 офис 5</span>\n              </li>\n            </ul>\n          </div>\n        </div>\n        \n        <div className=\"border-t border-white/10 mt-12 pt-8 text-center text-white/50 text-sm\">\n          <p>© {new Date().getFullYear()} ООО «ИНВЕСТ-лизинг». Все права защищены.</p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":6760},"client/src/components/layout/header.tsx":{"content":"import { useState } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { useAuth } from \"@/hooks/use-auth\";\nimport { Button } from \"@/components/ui/button\";\nimport { \n  BellIcon, UserCircle, KeyRound, LogOut, Menu, X, ChevronDown\n} from \"lucide-react\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\n\nexport interface HeaderProps {\n  mobileMenuOpen: boolean;\n  setMobileMenuOpen: (open: boolean) => void;\n}\n\nexport const Header = ({\n  mobileMenuOpen,\n  setMobileMenuOpen,\n}: HeaderProps) => {\n  const [, navigate] = useLocation();\n  const { user, logoutMutation } = useAuth();\n  const [profileDropdownOpen, setProfileDropdownOpen] = useState(false);\n  const [notificationsOpen, setNotificationsOpen] = useState(false);\n\n  // Get user initials\n  const getUserInitials = () => {\n    if (!user || !user.username) return \"U\";\n    const nameParts = user.username.split(/[.\\s-_]/);\n    if (nameParts.length > 1 && nameParts[0][0] && nameParts[1] && nameParts[1][0]) {\n      return (nameParts[0][0] + nameParts[1][0]).toUpperCase();\n    }\n    return user.username.substring(0, Math.min(2, user.username.length)).toUpperCase();\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    logoutMutation.mutate(undefined, {\n      onSuccess: () => {\n        navigate(\"/auth\");\n      },\n    });\n  };\n\n  // Toggle mobile menu\n  const toggleMobileMenu = () => {\n    setMobileMenuOpen(!mobileMenuOpen);\n  };\n\n  // Handle clicks on dropdowns\n  const toggleProfileDropdown = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    setProfileDropdownOpen(!profileDropdownOpen);\n    setNotificationsOpen(false);\n  };\n\n  const toggleNotifications = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    setNotificationsOpen(!notificationsOpen);\n    setProfileDropdownOpen(false);\n  };\n\n  // Close dropdowns when clicking outside\n  const closeDropdowns = () => {\n    setProfileDropdownOpen(false);\n    setNotificationsOpen(false);\n  };\n\n  return (\n    <header className=\"sticky top-0 z-50 bg-slate-800 border-b border-border shadow-glass\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex items-center justify-between h-16\">\n          <div className=\"flex items-center\">\n            <a href=\"/\" className=\"flex items-center\">\n              <img src=\"/logo.png\" alt=\"ИНВЕСТ-ЛИЗИНГ\" className=\"h-10 mr-2\" />\n              <span className=\"ml-2 hidden md:inline-block text-lg font-semibold\">Личный кабинет</span>\n            </a>\n          </div>\n\n          <div className=\"flex items-center\">\n            {/* Mobile menu button */}\n            <Button \n              variant=\"ghost\" \n              size=\"icon\" \n              className=\"md:hidden mr-2\" \n              onClick={toggleMobileMenu}\n            >\n              {mobileMenuOpen ? (\n                <X className=\"h-6 w-6 text-muted-foreground\" />\n              ) : (\n                <Menu className=\"h-6 w-6 text-muted-foreground\" />\n              )}\n            </Button>\n\n            {/* Notifications */}\n            <div className=\"relative\" onClick={(e) => e.stopPropagation()}>\n              <Button \n                variant=\"ghost\" \n                size=\"icon\" \n                className=\"relative mr-2\" \n                onClick={toggleNotifications}\n              >\n                <BellIcon className=\"h-5 w-5 text-muted-foreground\" />\n                <span className=\"absolute top-0 right-0 h-2 w-2 rounded-full bg-primary\"></span>\n              </Button>\n\n              {/* Notifications Dropdown */}\n              {notificationsOpen && (\n                <div className=\"absolute right-0 mt-2 w-80 bg-slate-800 rounded-xl overflow-hidden animate-fadeIn shadow-glass border border-border\">\n                  <div className=\"p-4 border-b border-border\">\n                    <h3 className=\"font-medium\">Уведомления</h3>\n                  </div>\n                  <div className=\"max-h-96 overflow-y-auto\">\n                    <div className=\"p-4 border-b border-border hover:bg-muted/40 transition-all\">\n                      <p className=\"text-sm font-medium\">Нет новых уведомлений</p>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* User Profile */}\n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <Button \n                  variant=\"ghost\" \n                  className=\"flex items-center space-x-2 p-2 rounded-full hover:bg-muted/40 transition-all\"\n                >\n                  <div className=\"w-8 h-8 rounded-full bg-primary flex items-center justify-center text-primary-foreground\">\n                    <span>{getUserInitials()}</span>\n                  </div>\n                  <span className=\"hidden md:inline-block text-sm\">{user?.username}</span>\n                  <ChevronDown className=\"h-4 w-4 text-muted-foreground\" />\n                </Button>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent className=\"w-48 bg-slate-800 rounded-xl overflow-hidden animate-fadeIn shadow-glass border border-border\">\n                <div className=\"p-4 border-b border-border\">\n                  <p className=\"font-medium\">{user?.username}</p>\n                  <p className=\"text-sm text-muted-foreground\">{user?.email}</p>\n                </div>\n                <DropdownMenuSeparator className=\"bg-border\" />\n                <DropdownMenuItem asChild>\n                  <a \n                    href=\"/profile\" \n                    className=\"flex items-center p-3 hover:bg-muted/40 transition-all\"\n                  >\n                    <UserCircle className=\"h-4 w-4 mr-2 text-muted-foreground\" />\n                    Мой профиль\n                  </a>\n                </DropdownMenuItem>\n                <DropdownMenuItem asChild>\n                  <a \n                    href=\"/change-password\" \n                    className=\"flex items-center p-3 hover:bg-muted/40 transition-all\"\n                  >\n                    <KeyRound className=\"h-4 w-4 mr-2 text-muted-foreground\" />\n                    Сменить пароль\n                  </a>\n                </DropdownMenuItem>\n                <DropdownMenuSeparator className=\"bg-border\" />\n                <DropdownMenuItem\n                  className=\"text-destructive flex items-center p-3 hover:bg-muted/40 transition-all\"\n                  onClick={handleLogout}\n                >\n                  <LogOut className=\"h-4 w-4 mr-2\" />\n                  Выйти\n                </DropdownMenuItem>\n              </DropdownMenuContent>\n            </DropdownMenu>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};","size_bytes":6810},"client/src/components/layout/main-layout.tsx":{"content":"import { ReactNode } from \"react\";\nimport { MainNavigation } from \"./main-navigation\";\n\nexport interface MainLayoutProps {\n  children: ReactNode;\n}\n\nexport const MainLayout = ({ children }: MainLayoutProps) => {\n  return (\n    <div className=\"flex flex-col min-h-screen bg-background\">\n      <MainNavigation />\n      <main className=\"flex-grow\">\n        {children}\n      </main>\n      \n      <footer className=\"bg-background border-t border-border py-10 mt-16\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"flex flex-col items-center justify-center\">\n            <img src=\"/logo.png\" alt=\"ИНВЕСТ-ЛИЗИНГ\" className=\"h-16 mb-4\" />\n            <p className=\"text-sm text-muted-foreground mb-4 text-center\">\n              Осуществляем лизинговую деятельность с 2003 года<br />\n              ИНН/КПП 4401060430/440101001\n            </p>\n            \n            <div className=\"border-t border-border w-full max-w-xl mt-6 pt-6 text-center\">\n              <p className=\"text-sm text-muted-foreground\">\n                © 2003-{new Date().getFullYear()} ООО «ИНВЕСТ-лизинг». Все права защищены.\n              </p>\n            </div>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n};","size_bytes":1313},"client/src/components/layout/main-navigation.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetTrigger,\n  SheetClose\n} from \"@/components/ui/sheet\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger\n} from \"@/components/ui/dropdown-menu\";\nimport { Menu, X, ChevronDown } from \"lucide-react\";\nimport { useAuth } from \"@/hooks/use-auth\";\n\ntype DropdownItem = {\n  name: string;\n  href: string;\n};\n\ntype NavItem = {\n  name: string;\n  href: string;\n  dropdown?: DropdownItem[];\n}; \n\nexport const MainNavigation = () => {\n  const [location] = useLocation();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const { isAuthenticated } = useAuth();\n\n  const navItems: NavItem[] = [\n    { name: \"Главная\", href: \"/\" },\n    { name: \"О компании\", href: \"/about\" },\n    { \n      name: \"Услуги\", \n      href: \"#services\", \n      dropdown: [\n        { name: \"Спецтехника\", href: \"/services/spectechnika\" },\n        { name: \"Оборудование\", href: \"/services/oborudovanie\" },\n        { name: \"Недвижимость\", href: \"/services/nedvijimost\" },\n        { name: \"Легковые и грузовые автомобили\", href: \"/services/gruzovye-avtomobili\" }\n      ]\n    },\n    { \n      name: \"Клиентам\", \n      href: \"#clients\", \n      dropdown: [\n        { name: \"Вакансии\", href: \"/clients/vacancies\" },\n        { name: \"Партнеры\", href: \"/partners\" },\n        { name: \"F.A.Q.\", href: \"/faq\" },\n        { name: \"Документы\", href: \"/clients/documents\" },\n        { name: \"Реализация имущества\", href: \"/clients/property\" }\n      ]\n    },\n    { name: \"Контакты\", href: \"/contacts\" }\n  ];\n\n  // Dummy data for services, replace with actual data if needed for the dropdown\n  const services = [\n    { title: \"Спецтехника\", description: \"Аренда спецтехники\", href: \"/services/spectechnika\" },\n    { title: \"Оборудование\", description: \"Продажа и аренда оборудования\", href: \"/services/oborudovanie\" },\n    { title: \"Недвижимость\", description: \"Услуги с недвижимостью\", href: \"/services/nedvijimost\" },\n    { title: \"Легковые и грузовые автомобили\", description: \"Продажа и лизинг автомобилей\", href: \"/services/gruzovye-avtomobili\" },\n  ];\n\n  return (\n    <nav className=\"py-4 glass backdrop-blur-md bg-background/50 border-b border-border sticky top-0 z-50\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex items-center justify-between\">\n          {/* Logo */}\n          <Link href=\"/\" className=\"flex items-center\">\n            <img src=\"/logo.png\" alt=\"ИНВЕСТ-ЛИЗИНГ\" className=\"h-12 mr-2\" />\n          </Link>\n\n          {/* Desktop navigation */}\n          <div className=\"hidden md:flex items-center space-x-8\">\n            {navItems.map((item) => \n              item.dropdown ? (\n                <DropdownMenu key={item.name}>\n                  <DropdownMenuTrigger className=\"flex items-center text-sm font-medium text-foreground hover:text-primary focus:outline-none\">\n                    {item.name} <ChevronDown className=\"ml-1 h-4 w-4\" />\n                  </DropdownMenuTrigger>\n                  <DropdownMenuContent align=\"center\" className=\"w-60\">\n                    {item.dropdown.map((dropdownItem) => (\n                      <DropdownMenuItem key={dropdownItem.name} asChild>\n                        <Link \n                          href={dropdownItem.href} \n                          className=\"cursor-pointer\"\n                        >\n                          {dropdownItem.name}\n                        </Link>\n                      </DropdownMenuItem>\n                    ))}\n                  </DropdownMenuContent>\n                </DropdownMenu>\n              ) : (\n                <Link \n                  key={item.name} \n                  href={item.href}\n                  className={`text-sm font-medium transition-colors ${\n                    location === item.href \n                      ? \"text-primary\" \n                      : \"text-foreground hover:text-primary\"\n                  }`}\n                >\n                  {item.name}\n                </Link>\n              )\n            )}\n          </div>\n\n          {/* CTA button for desktop */}\n          <div className=\"hidden md:flex items-center space-x-2\">\n            {isAuthenticated ? (\n              <Link href=\"/dashboard\">\n                <Button variant=\"glass\">\n                  Личный кабинет\n                </Button>\n              </Link>\n            ) : (\n              <Link href=\"/auth\">\n                <Button variant=\"glass\">\n                  Личный кабинет\n                </Button>\n              </Link>\n            )}\n          </div>\n\n          {/* Mobile buttons */}\n          <div className=\"md:hidden flex items-center space-x-2\">\n            {isAuthenticated ? (\n              <Link href=\"/dashboard\">\n                <Button variant=\"glass\" size=\"sm\">\n                  Личный кабинет\n                </Button>\n              </Link>\n            ) : (\n              <Link href=\"/auth\">\n                <Button variant=\"glass\" size=\"sm\">\n                  Личный кабинет\n                </Button>\n              </Link>\n            )}\n            \n            <Sheet open={isMobileMenuOpen} onOpenChange={setIsMobileMenuOpen}>\n              <SheetTrigger asChild>\n                <Button variant=\"ghost\" size=\"icon\">\n                  <Menu className=\"h-6 w-6\" />\n                </Button>\n              </SheetTrigger>\n              <SheetContent side=\"right\" className=\"w-[300px] sm:w-[400px]\">\n                <div className=\"flex flex-col h-full\">\n                  <div className=\"flex items-center justify-between mb-8\">\n                    <Link \n                      href=\"/\" \n                      onClick={() => setIsMobileMenuOpen(false)}\n                      className=\"flex items-center\"\n                    >\n                      <img src=\"/logo.png\" alt=\"ИНВЕСТ-ЛИЗИНГ\" className=\"h-10 mr-2\" />\n                    </Link>\n                    <SheetClose asChild>\n                      <Button variant=\"ghost\" size=\"icon\">\n                        <X className=\"h-6 w-6\" />\n                      </Button>\n                    </SheetClose>\n                  </div>\n\n                  <div className=\"flex flex-col space-y-6\">\n                    {navItems.map((item) => \n                      item.dropdown ? (\n                        <div key={item.name} className=\"space-y-3\">\n                          <div className=\"text-lg font-medium text-foreground\">\n                            {item.name}\n                          </div>\n                          <div className=\"pl-4 space-y-2 border-l-2 border-primary/30\">\n                            {item.dropdown.map((dropdownItem) => (\n                              <SheetClose key={dropdownItem.name} asChild>\n                                <Link \n                                  href={dropdownItem.href}\n                                  className=\"block text-base text-foreground/80 hover:text-primary\"\n                                >\n                                  {dropdownItem.name}\n                                </Link>\n                              </SheetClose>\n                            ))}\n                          </div>\n                        </div>\n                      ) : (\n                        <SheetClose key={item.name} asChild>\n                          <Link \n                            href={item.href}\n                            className={`text-lg font-medium transition-colors ${\n                              location === item.href \n                                ? \"text-primary\" \n                                : \"text-foreground hover:text-primary\"\n                            }`}\n                          >\n                            {item.name}\n                          </Link>\n                        </SheetClose>\n                      )\n                    )}\n                  </div>\n\n                  <div className=\"mt-auto pt-8\">\n                    <SheetClose asChild>\n                      {isAuthenticated ? (\n                        <Button asChild variant=\"glass\" className=\"w-full\">\n                          <Link href=\"/dashboard\">\n                            Личный кабинет\n                          </Link>\n                        </Button>\n                      ) : (\n                        <Button asChild variant=\"glass\" className=\"w-full\">\n                          <Link href=\"/auth\">\n                            Личный кабинет\n                          </Link>\n                        </Button>\n                      )}\n                    </SheetClose>\n                  </div>\n                </div>\n              </SheetContent>\n            </Sheet>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};","size_bytes":9197},"client/src/components/layout/mobile-menu.tsx":{"content":"import { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { X } from \"lucide-react\";\nimport { useAuth } from \"@/hooks/use-auth\";\n\ninterface MobileMenuProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport function MobileMenu({ isOpen, onClose }: MobileMenuProps) {\n  const { isAuthenticated } = useAuth();\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 glass\">\n      <div className=\"flex flex-col h-full p-4\">\n        <div className=\"flex justify-between items-center mb-8\">\n          <Link href=\"/\" className=\"flex items-center\" onClick={onClose}>\n            <span className=\"text-lg font-bold text-white\">ИНВЕСТ<span className=\"text-primary\">-лизинг</span></span>\n          </Link>\n          <Button variant=\"ghost\" onClick={onClose} aria-label=\"Close menu\">\n            <X className=\"h-6 w-6\" />\n          </Button>\n        </div>\n        \n        <nav className=\"flex flex-col space-y-4 mt-4\">\n          <Link href=\"/\" className=\"text-lg font-medium text-white/90 hover:text-primary transition-colors py-2\" onClick={onClose}>\n            Главная\n          </Link>\n          <Link href=\"/services/spectechnika\" className=\"text-lg font-medium text-white/90 hover:text-primary transition-colors py-2\" onClick={onClose}>\n            Услуги\n          </Link>\n          <Link href=\"/about\" className=\"text-lg font-medium text-white/90 hover:text-primary transition-colors py-2\" onClick={onClose}>\n            О компании\n          </Link>\n          <Link href=\"/contacts\" className=\"text-lg font-medium text-white/90 hover:text-primary transition-colors py-2\" onClick={onClose}>\n            Контакты\n          </Link>\n          <Link href=\"/partners\" className=\"text-lg font-medium text-white/90 hover:text-primary transition-colors py-2\" onClick={onClose}>\n            Партнеры\n          </Link>\n          <Link href=\"/faq\" className=\"text-lg font-medium text-white/90 hover:text-primary transition-colors py-2\" onClick={onClose}>\n            FAQ\n          </Link>\n        </nav>\n        \n        <div className=\"mt-auto py-4 space-y-2\">\n          {isAuthenticated ? (\n            <>\n              <Link href=\"/dashboard\" onClick={onClose}>\n                <Button className=\"w-full\">Личный кабинет</Button>\n              </Link>\n              <Link href=\"/profile\" onClick={onClose}>\n                <Button variant=\"outline\" className=\"w-full\">Профиль</Button>\n              </Link>\n            </>\n          ) : (\n            <Link href=\"/auth\" onClick={onClose}>\n              <Button className=\"w-full\">Войти</Button>\n            </Link>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":2743},"client/src/components/layout/navbar.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { useAuth } from \"@/hooks/use-auth\";\nimport { Menu, ChevronDown } from \"lucide-react\";\nimport { MobileMenu } from \"./mobile-menu\";\n\nexport function Navbar() {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const { isAuthenticated } = useAuth();\n  const [location] = useLocation();\n  const [servicesDropdownOpen, setServicesDropdownOpen] = useState(false);\n\n  const isActive = (path: string) => {\n    return location === path || location.startsWith(path + '/');\n  };\n\n  const toggleServicesDropdown = () => {\n    setServicesDropdownOpen(!servicesDropdownOpen);\n  };\n\n  return (\n    <>\n      <header className=\"fixed top-0 left-0 right-0 z-50 glass shadow-glass\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"flex items-center justify-between py-4\">\n            <Link href=\"/\" className=\"flex items-center\">\n              <img src=\"/logo.png\" alt=\"ИНВЕСТ-лизинг\" className=\"h-8 mr-2\" />\n              <span className=\"text-lg font-bold text-white\">ИНВЕСТ<span className=\"text-primary\">-лизинг</span></span>\n            </Link>\n            \n            <nav className=\"hidden md:flex space-x-6\">\n              <Link href=\"/\" className={`${isActive('/') ? 'text-primary' : 'text-white/90 hover:text-primary'} transition-colors`}>\n                Главная\n              </Link>\n              \n              {/* Услуги с выпадающим меню */}\n              <div className=\"relative\">\n                <button \n                  className={`flex items-center ${isActive('/services') ? 'text-primary' : 'text-white/90 hover:text-primary'} transition-colors`}\n                  onClick={toggleServicesDropdown}\n                >\n                  Услуги <ChevronDown className=\"ml-1 h-4 w-4\" />\n                </button>\n                \n                {servicesDropdownOpen && (\n                  <div className=\"absolute top-full left-0 mt-2 w-52 bg-background/90 backdrop-blur-md rounded-md shadow-lg border border-border overflow-hidden z-50\">\n                    <Link href=\"/services/spectechnika\" className=\"block px-4 py-2 text-sm hover:bg-primary/10 hover:text-primary\">\n                      Спецтехника\n                    </Link>\n                    <Link href=\"/services/oborudovanie\" className=\"block px-4 py-2 text-sm hover:bg-primary/10 hover:text-primary\">\n                      Оборудование\n                    </Link>\n                    <Link href=\"/services/nedvijimost\" className=\"block px-4 py-2 text-sm hover:bg-primary/10 hover:text-primary\">\n                      Недвижимость\n                    </Link>\n                    <Link href=\"/services/gruzovye-avtomobili\" className=\"block px-4 py-2 text-sm hover:bg-primary/10 hover:text-primary\">\n                      Грузовые автомобили\n                    </Link>\n                  </div>\n                )}\n              </div>\n              \n              <Link href=\"/about\" className={`${isActive('/about') ? 'text-primary' : 'text-white/90 hover:text-primary'} transition-colors`}>\n                О компании\n              </Link>\n              <Link href=\"/contacts\" className={`${isActive('/contacts') ? 'text-primary' : 'text-white/90 hover:text-primary'} transition-colors`}>\n                Контакты\n              </Link>\n            </nav>\n            \n            <div className=\"flex items-center space-x-4\">\n              <div className=\"hidden md:block mr-2\">\n                <input \n                  type=\"text\" \n                  placeholder=\"Поиск\" \n                  className=\"px-3 py-1 rounded-md text-sm bg-background/50 border border-border focus:outline-none focus:ring-1 focus:ring-primary\"\n                />\n              </div>\n              \n              <Link href=\"/auth\">\n                <Button variant=\"outline\" className=\"hidden md:inline-flex\">\n                  Личный кабинет\n                </Button>\n              </Link>\n              \n              <Button \n                variant=\"ghost\" \n                className=\"md:hidden\" \n                onClick={() => setMobileMenuOpen(true)}\n              >\n                <Menu className=\"h-6 w-6\" />\n              </Button>\n            </div>\n          </div>\n        </div>\n      </header>\n      \n      <MobileMenu isOpen={mobileMenuOpen} onClose={() => setMobileMenuOpen(false)} />\n    </>\n  );\n}\n","size_bytes":4582},"client/src/components/layout/sidebar-navigation.tsx":{"content":"import { useLocation } from \"wouter\";\nimport { \n  User, FileText, FileSpreadsheet, Receipt, Calendar, Folder, Key,\n} from \"lucide-react\";\n\ntype NavItem = {\n  label: string;\n  href: string;\n  icon: React.ReactNode;\n};\n\nconst navItems: NavItem[] = [\n  {\n    label: \"Договоры\",\n    href: \"/contracts\",\n    icon: <FileText className=\"w-5 h-5\" />,\n  },\n  {\n    label: \"Акты\",\n    href: \"/acts\",\n    icon: <FileSpreadsheet className=\"w-5 h-5\" />,\n  },\n  {\n    label: \"Счета\",\n    href: \"/invoices\",\n    icon: <Receipt className=\"w-5 h-5\" />,\n  },\n  {\n    label: \"График платежей\",\n    href: \"/payment-schedule\",\n    icon: <Calendar className=\"w-5 h-5\" />,\n  },\n  {\n    label: \"Прочие документы\",\n    href: \"/other-documents\",\n    icon: <Folder className=\"w-5 h-5\" />,\n  },\n];\n\nexport interface SidebarNavigationProps {\n  mobileMenuOpen: boolean;\n  setMobileMenuOpen: (open: boolean) => void;\n}\n\nexport const SidebarNavigation = ({\n  mobileMenuOpen,\n  setMobileMenuOpen,\n}: SidebarNavigationProps) => {\n  const [location] = useLocation();\n  \n  // Function to close mobile menu when a link is clicked\n  const handleNavClick = () => {\n    if (mobileMenuOpen) {\n      setMobileMenuOpen(false);\n    }\n  };\n\n  return (\n    <aside className={`\n      w-full md:w-64 bg-white/10 backdrop-blur-md border border-white/20 \n      my-4 mx-4 rounded-xl h-auto md:h-[calc(100vh-5rem)] flex-shrink-0 shadow-lg\n      ${mobileMenuOpen ? 'block' : 'hidden md:block'}\n    `}>\n      <nav className=\"p-2\">\n        <ul>\n          {navItems.map((item) => {\n            const isActive = location === item.href;\n            return (\n              <li key={item.href}>\n                <a\n                  href={item.href}\n                  className={`\n                    flex items-center p-3 rounded-lg hover:bg-muted/40 transition-all mb-1\n                    ${isActive ? 'bg-primary/10 border-l-4 border-primary text-primary' : 'text-foreground'}\n                  `}\n                  onClick={handleNavClick}\n                >\n                  <span className={`w-6 ${isActive ? 'text-primary' : 'text-muted-foreground'}`}>\n                    {item.icon}\n                  </span>\n                  <span className=\"ml-2\">{item.label}</span>\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </nav>\n    </aside>\n  );\n};\n","size_bytes":2383},"client/src/components/layouts/sidebar.tsx":{"content":"import { Link, useLocation } from \"wouter\";\nimport clsx from \"clsx\";\n\ninterface SidebarProps {\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n}\n\nexport function Sidebar({ isOpen, setIsOpen }: SidebarProps) {\n  const [location] = useLocation();\n  \n  const isActive = (path: string) => {\n    if (path === '/' && location === '/') return true;\n    if (path !== '/' && location.startsWith(path)) return true;\n    return false;\n  };\n\n  const navItems = [\n    { \n      section: 'Overview',\n      items: [\n        { \n          name: 'Dashboard', \n          href: '/', \n          icon: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-5 h-5 mr-3\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.75 3v11.25A2.25 2.25 0 006 16.5h2.25M3.75 3h-1.5m1.5 0h16.5m0 0h1.5m-1.5 0v11.25A2.25 2.25 0 0118 16.5h-2.25m-7.5 0h7.5m-7.5 0l-1 3m8.5-3l1 3m0 0l.5 1.5m-.5-1.5h-9.5m0 0l-.5 1.5m.75-9l3-3 2.148 2.148A12.061 12.061 0 0116.5 7.605\" />\n            </svg>\n          )\n        },\n        { \n          name: 'Analytics', \n          href: '/analytics', \n          icon: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-5 h-5 mr-3\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.75 6A2.25 2.25 0 016 3.75h2.25A2.25 2.25 0 0110.5 6v2.25a2.25 2.25 0 01-2.25 2.25H6a2.25 2.25 0 01-2.25-2.25V6zM3.75 15.75A2.25 2.25 0 016 13.5h2.25a2.25 2.25 0 012.25 2.25V18a2.25 2.25 0 01-2.25 2.25H6A2.25 2.25 0 013.75 18v-2.25zM13.5 6a2.25 2.25 0 012.25-2.25H18A2.25 2.25 0 0120.25 6v2.25A2.25 2.25 0 0118 10.5h-2.25a2.25 2.25 0 01-2.25-2.25V6zM13.5 15.75a2.25 2.25 0 012.25-2.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-2.25A2.25 2.25 0 0113.5 18v-2.25z\" />\n            </svg>\n          )\n        }\n      ]\n    },\n    {\n      section: 'Investments',\n      items: [\n        { \n          name: 'Properties', \n          href: '/properties', \n          icon: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-5 h-5 mr-3\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 21v-8.25M15.75 21v-8.25M8.25 21v-8.25M3 9l9-6 9 6m-1.5 12V10.332A48.36 48.36 0 0012 9.75c-2.551 0-5.056.2-7.5.582V21M3 21h18M12 6.75h.008v.008H12V6.75z\" />\n            </svg>\n          )\n        },\n        { \n          name: 'Portfolios', \n          href: '/portfolios', \n          icon: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-5 h-5 mr-3\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 15.75V18m-7.5-6.75h.008v.008H8.25v-.008zm0 2.25h.008v.008H8.25V13.5zm0 2.25h.008v.008H8.25v-.008zm0 2.25h.008v.008H8.25V18zm2.498-6.75h.007v.008h-.007v-.008zm0 2.25h.007v.008h-.007V13.5zm0 2.25h.007v.008h-.007v-.008zm0 2.25h.007v.008h-.007V18zm2.504-6.75h.008v.008h-.008v-.008zm0 2.25h.008v.008h-.008V13.5zm0 2.25h.008v.008h-.008v-.008zm0 2.25h.008v.008h-.008V18zm2.498-6.75h.008v.008h-.008v-.008zm0 2.25h.008v.008h-.008V13.5zM8.25 6h7.5v2.25h-7.5V6zM12 2.25c-1.892 0-3.758.11-5.593.322C5.307 2.7 4.5 3.65 4.5 4.757V19.5a2.25 2.25 0 002.25 2.25h10.5a2.25 2.25 0 002.25-2.25V4.757c0-1.108-.806-2.057-1.907-2.185A48.507 48.507 0 0012 2.25z\" />\n            </svg>\n          )\n        },\n        { \n          name: 'Performance', \n          href: '/performance', \n          icon: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-5 h-5 mr-3\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M7.5 14.25v2.25m3-4.5v4.5m3-6.75v6.75m3-9v9M6 20.25h12A2.25 2.25 0 0020.25 18V6A2.25 2.25 0 0018 3.75H6A2.25 2.25 0 003.75 6v12A2.25 2.25 0 006 20.25z\" />\n            </svg>\n          )\n        }\n      ]\n    },\n    {\n      section: 'Leasing',\n      items: [\n        { \n          name: 'Leases', \n          href: '/leases', \n          icon: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-5 h-5 mr-3\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 21v-8.25M15.75 21v-8.25M8.25 21v-8.25M3 9l9-6 9 6m-1.5 12V10.332A48.36 48.36 0 0012 9.75c-2.551 0-5.056.2-7.5.582V21M3 21h18M12 6.75h.008v.008H12V6.75z\" />\n            </svg>\n          )\n        },\n        { \n          name: 'Tenants', \n          href: '/tenants', \n          icon: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-5 h-5 mr-3\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 19.128a9.38 9.38 0 002.625.372 9.337 9.337 0 004.121-.952 4.125 4.125 0 00-7.533-2.493M15 19.128v-.003c0-1.113-.285-2.16-.786-3.07M15 19.128v.106A12.318 12.318 0 018.624 21c-2.331 0-4.512-.645-6.374-1.766l-.001-.109a6.375 6.375 0 0111.964-3.07M12 6.375a3.375 3.375 0 11-6.75 0 3.375 3.375 0 016.75 0zm8.25 2.25a2.625 2.625 0 11-5.25 0 2.625 2.625 0 015.25 0z\" />\n            </svg>\n          )\n        },\n        { \n          name: 'Agreements', \n          href: '/agreements', \n          icon: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-5 h-5 mr-3\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 12h3.75M9 15h3.75M9 18h3.75m3 .75H18a2.25 2.25 0 002.25-2.25V6.108c0-1.135-.845-2.098-1.976-2.192a48.424 48.424 0 00-1.123-.08m-5.801 0c-.065.21-.1.433-.1.664 0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75 2.25 2.25 0 00-.1-.664m-5.8 0A2.251 2.251 0 0113.5 2.25H15c1.012 0 1.867.668 2.15 1.586m-5.8 0c-.376.023-.75.05-1.124.08C9.095 4.01 8.25 4.973 8.25 6.108V8.25m0 0H4.875c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V9.375c0-.621-.504-1.125-1.125-1.125H8.25zM6.75 12h.008v.008H6.75V12zm0 3h.008v.008H6.75V15zm0 3h.008v.008H6.75V18z\" />\n            </svg>\n          )\n        },\n        { \n          name: 'Maintenance', \n          href: '/maintenance', \n          icon: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-5 h-5 mr-3\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9.568 3H5.25A2.25 2.25 0 003 5.25v4.318c0 .597.237 1.17.659 1.591l9.581 9.581c.699.699 1.78.872 2.607.33a18.095 18.095 0 005.223-5.223c.542-.827.369-1.908-.33-2.607L11.16 3.66A2.25 2.25 0 009.568 3z\" />\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 6h.008v.008H6V6z\" />\n            </svg>\n          )\n        }\n      ]\n    },\n    {\n      section: 'Financial',\n      items: [\n        { \n          name: 'Transactions', \n          href: '/transactions', \n          icon: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-5 h-5 mr-3\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M2.25 18.75a60.07 60.07 0 0115.797 2.101c.727.198 1.453-.342 1.453-1.096V18.75M3.75 4.5v.75A.75.75 0 013 6h-.75m0 0v-.375c0-.621.504-1.125 1.125-1.125H20.25M2.25 6v9m18-10.5v.75c0 .414.336.75.75.75h.75m-1.5-1.5h.375c.621 0 1.125.504 1.125 1.125v9.75c0 .621-.504 1.125-1.125 1.125h-.375m1.5-1.5H21a.75.75 0 01-.75.75h-.75m-6-1.5H4.5m0 0l-.375-.375a1.125 1.125 0 01-.25-1.125l.5-1.5A1.125 1.125 0 015.513 12H5.25v-1.5c0-.621.504-1.125 1.125-1.125h.375m1.5-1.5H9a.75.75 0 01.75.75v.75m1.5-1.5H12a.75.75 0 01.75.75v.75m-1.5-1.5h-.375a1.125 1.125 0 01-1.125-1.125v-.375M21 12c0 4.556-4.03 8.25-9 8.25a9.764 9.764 0 01-2.555-.337A5.972 5.972 0 015.41 20.97a5.969 5.969 0 01-.474-.065 4.48 4.48 0 00.978-2.025c.09-.457-.133-.901-.467-1.226C3.93 16.178 3 14.189 3 12c0-4.556 4.03-8.25 9-8.25s9 3.694 9 8.25z\" />\n            </svg>\n          )\n        },\n        { \n          name: 'Reports', \n          href: '/reports', \n          icon: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-5 h-5 mr-3\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M2.25 18.75a60.07 60.07 0 0115.797 2.101c.727.198 1.453-.342 1.453-1.096V18.75M3.75 4.5v.75A.75.75 0 013 6h-.75m0 0v-.375c0-.621.504-1.125 1.125-1.125H20.25M2.25 6v9m18-10.5v.75c0 .414.336.75.75.75h.75m-1.5-1.5h.375c.621 0 1.125.504 1.125 1.125v9.75c0 .621-.504 1.125-1.125 1.125h-.375m1.5-1.5H21a.75.75 0 01-.75.75h-.75m-6-1.5H4.5m0 0l-.375-.375a1.125 1.125 0 01-.25-1.125l.5-1.5A1.125 1.125 0 015.513 12H5.25v-1.5c0-.621.504-1.125 1.125-1.125h.375m1.5-1.5H9a.75.75 0 01.75.75v.75m1.5-1.5H12a.75.75 0 01.75.75v.75m-1.5-1.5h-.375a1.125 1.125 0 01-1.125-1.125v-.375M21 12c0 4.556-4.03 8.25-9 8.25a9.764 9.764 0 01-2.555-.337A5.972 5.972 0 015.41 20.97a5.969 5.969 0 01-.474-.065 4.48 4.48 0 00.978-2.025c.09-.457-.133-.901-.467-1.226C3.93 16.178 3 14.189 3 12c0-4.556 4.03-8.25 9-8.25s9 3.694 9 8.25z\" />\n            </svg>\n          )\n        }\n      ]\n    }\n  ];\n\n  // Base sidebar classes, changes based on isOpen state on mobile \n  const sidebarClasses = clsx(\n    \"bg-white border-r border-slate-200 flex flex-col h-screen sticky top-0\",\n    isOpen ? \"fixed inset-0 z-50 md:relative\" : \"hidden md:flex w-64\"\n  );\n\n  return (\n    <aside className={sidebarClasses}>\n      <div className=\"p-4 border-b border-slate-200\">\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"w-8 h-8 bg-primary text-primary-foreground rounded-md flex items-center justify-center\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-5 h-5\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M2.25 18L9 11.25l4.306 4.307a11.95 11.95 0 015.814-5.519l2.74-1.22m0 0l-5.94-2.28m5.94 2.28l-2.28 5.941\" />\n            </svg>\n          </div>\n          <h1 className=\"text-xl font-bold text-primary\">InvestLease</h1>\n        </div>\n      </div>\n      \n      <nav className=\"flex-1 p-4 space-y-1 overflow-y-auto\">\n        {navItems.map((section, index) => (\n          <div key={index} className=\"py-2\">\n            <p className=\"text-sm font-medium text-slate-500 mb-2 px-2\">{section.section}</p>\n            {section.items.map((item, itemIndex) => (\n              <Link \n                key={itemIndex} \n                href={item.href}\n                onClick={isOpen ? () => setIsOpen(false) : undefined}\n              >\n                <a \n                  className={clsx(\n                    \"flex items-center px-3 py-2 text-sm rounded-md\",\n                    isActive(item.href) \n                      ? \"bg-primary-50 text-primary font-medium\" \n                      : \"text-slate-700 hover:bg-slate-100\"\n                  )}\n                >\n                  {item.icon}\n                  {item.name}\n                </a>\n              </Link>\n            ))}\n          </div>\n        ))}\n      </nav>\n      \n      <div className=\"p-4 border-t border-slate-200\">\n        <div className=\"flex items-center\">\n          <img \n            src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\" \n            alt=\"User profile\" \n            className=\"w-8 h-8 rounded-full mr-3\"\n          />\n          <div>\n            <p className=\"text-sm font-medium text-slate-700\">John Smith</p>\n            <p className=\"text-xs text-slate-500\">Administrator</p>\n          </div>\n        </div>\n      </div>\n    </aside>\n  );\n}\n","size_bytes":11839},"client/src/components/main-site/about-section.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Link } from \"wouter\";\nimport { CheckCircle2, Trophy, Users, Clock, MapPin, Building } from \"lucide-react\";\n\nexport const AboutSection = () => {\n  const stats = [\n    { \n      label: \"Лет опыта\", \n      value: \"20+\", \n      icon: <Clock className=\"h-6 w-6 text-primary\" /> \n    },\n    { \n      label: \"Реализованных проектов\", \n      value: \"1000+\", \n      icon: <Trophy className=\"h-6 w-6 text-primary\" /> \n    },\n    { \n      label: \"Филиалов в России\", \n      value: \"9\", \n      icon: <MapPin className=\"h-6 w-6 text-primary\" /> \n    },\n    { \n      label: \"Компаний-партнеров\", \n      value: \"50+\", \n      icon: <Building className=\"h-6 w-6 text-primary\" /> \n    }\n  ];\n  \n  const achievements = [\n    \"Более 20 лет успешной работы в области лизинга\",\n    \"Официальный партнер ведущих поставщиков специальной техники\",\n    \"Гибкие лизинговые программы под индивидуальные потребности\",\n    \"Работа на всей территории Российской Федерации\",\n    \"Высокий уровень одобрения заявок\",\n    \"Команда профессионалов с многолетним опытом\"\n  ];\n\n  return (\n    <section className=\"py-20 relative overflow-hidden\" id=\"about\">\n      <div className=\"absolute top-20 left-20 w-96 h-96 rounded-full bg-primary opacity-5 blur-3xl\"></div>\n      \n      <div className=\"container mx-auto px-4 relative z-10\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n          <div>\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-6\">О компании ИНВЕСТ-ЛИЗИНГ</h2>\n            <p className=\"text-lg text-muted-foreground mb-8\">\n              Компания «ИНВЕСТ-ЛИЗИНГ» осуществляет лизинговую деятельность с 2003 года. За это время мы \n              приобрели огромный опыт в области лизинга, предоставив нашим клиентам возможность \n              приобрести различные виды основных фондов.\n            </p>\n            \n            <div className=\"space-y-4 mb-8\">\n              {achievements.map((item, index) => (\n                <div key={index} className=\"flex items-start gap-3\">\n                  <CheckCircle2 className=\"h-5 w-5 text-primary flex-shrink-0 mt-1\" />\n                  <p className=\"text-muted-foreground\">{item}</p>\n                </div>\n              ))}\n            </div>\n            \n            <Button asChild size=\"lg\" className=\"mt-4\">\n              <Link href=\"/contacts\">\n                <a>Связаться с нами</a>\n              </Link>\n            </Button>\n          </div>\n          \n          <div className=\"grid grid-cols-2 gap-6\">\n            {stats.map((stat, index) => (\n              <Card key={index} className=\"p-6 text-center glass backdrop-blur-sm bg-background/30\">\n                <div className=\"flex justify-center mb-3\">\n                  {stat.icon}\n                </div>\n                <h3 className=\"text-3xl font-bold mb-2\">{stat.value}</h3>\n                <p className=\"text-muted-foreground\">{stat.label}</p>\n              </Card>\n            ))}\n          </div>\n        </div>\n        \n        <div className=\"mt-20\">\n          <div className=\"glass backdrop-blur-sm bg-background/30 rounded-lg p-8 border border-border\">\n            <h3 className=\"text-2xl font-semibold mb-6\">Наша миссия</h3>\n            <p className=\"text-lg text-muted-foreground mb-6\">\n              Наша миссия – обеспечить доступное финансирование для развития бизнеса наших клиентов, \n              предоставляя качественные лизинговые решения и высокий уровень сервиса.\n            </p>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mt-8\">\n              <div className=\"flex flex-col items-center text-center\">\n                <div className=\"bg-primary/10 rounded-full p-4 mb-4\">\n                  <Users className=\"h-8 w-8 text-primary\" />\n                </div>\n                <h4 className=\"text-xl font-medium mb-2\">Клиентоориентированность</h4>\n                <p className=\"text-muted-foreground\">\n                  Мы разрабатываем индивидуальные предложения с учетом потребностей каждого клиента\n                </p>\n              </div>\n              \n              <div className=\"flex flex-col items-center text-center\">\n                <div className=\"bg-primary/10 rounded-full p-4 mb-4\">\n                  <Trophy className=\"h-8 w-8 text-primary\" />\n                </div>\n                <h4 className=\"text-xl font-medium mb-2\">Профессионализм</h4>\n                <p className=\"text-muted-foreground\">\n                  Наша команда состоит из опытных специалистов с глубоким пониманием лизингового рынка\n                </p>\n              </div>\n              \n              <div className=\"flex flex-col items-center text-center\">\n                <div className=\"bg-primary/10 rounded-full p-4 mb-4\">\n                  <CheckCircle2 className=\"h-8 w-8 text-primary\" />\n                </div>\n                <h4 className=\"text-xl font-medium mb-2\">Надежность</h4>\n                <p className=\"text-muted-foreground\">\n                  Более 20 лет успешной работы на рынке лизинга и тысячи реализованных проектов\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};","size_bytes":6188},"client/src/components/main-site/advantages-section.tsx":{"content":"import { Card } from \"@/components/ui/card\";\nimport { Shield, Award, Clock, Zap } from \"lucide-react\";\n\ntype AdvantageProps = {\n  title: string;\n  description: string;\n  icon: React.ReactNode;\n};\n\nconst Advantage = ({ title, description, icon }: AdvantageProps) => {\n  return (\n    <Card className=\"glass backdrop-blur-lg p-6 bg-background/30 border-border group hover:shadow-lg transition-all duration-300\">\n      <div className=\"flex flex-col h-full\">\n        <div className=\"mb-4 text-primary group-hover:scale-110 transition-transform duration-300\">\n          {icon}\n        </div>\n        <h3 className=\"text-xl font-semibold mb-3\">{title}</h3>\n        <p className=\"text-muted-foreground text-sm flex-grow\">{description}</p>\n      </div>\n    </Card>\n  );\n};\n\nexport const AdvantagesSection = () => {\n  const advantages = [\n    {\n      title: \"Надежность\",\n      description: \"Наш учредитель надежный региональный банк.\",\n      icon: <Shield className=\"h-10 w-10\" />\n    },\n    {\n      title: \"Профессионализм\",\n      description: \"При любой сделке возникает масса вопросов: как правильно организовать процесс сотрудничества, что можно взять в лизинг, как оформить договор. Наши специалисты тщательно проанализируют Вашу задачу и смогут предложить Вам оптимальные решения.\",\n      icon: <Award className=\"h-10 w-10\" />\n    },\n    {\n      title: \"Оперативность\",\n      description: \"Решение по сделке за один день!\",\n      icon: <Clock className=\"h-10 w-10\" />\n    },\n    {\n      title: \"Привлекательность\",\n      description: \"Оптимальные условия финансирования.\",\n      icon: <Zap className=\"h-10 w-10\" />\n    }\n  ];\n\n  return (\n    <section className=\"py-20 relative overflow-hidden\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center max-w-2xl mx-auto mb-16\">\n          <h2 className=\"text-3xl md:text-4xl font-bold mb-6\">Преимущества работы с нами</h2>\n          <p className=\"text-muted-foreground text-lg\">\n            Наша компания предлагает ряд преимуществ, которые делают сотрудничество с нами выгодным и комфортным\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {advantages.map((advantage, index) => (\n            <Advantage \n              key={index} \n              title={advantage.title} \n              description={advantage.description} \n              icon={advantage.icon} \n            />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};","size_bytes":2953},"client/src/components/main-site/branches-section.tsx":{"content":"import React from 'react';\nimport { Container } from \"@/components/ui/container\";\nimport RussiaMap from './topo-russia-map';\n\nexport const BranchesSection = () => {\n  return (\n    <section id=\"branches\" className=\"py-16 md:py-24 bg-background/60\">\n      <Container>\n        <div className=\"mb-12 text-center\">\n          <h2 className=\"mb-4 text-3xl font-bold text-foreground md:text-4xl lg:text-5xl\">\n            Наши филиалы\n          </h2>\n          <p className=\"mx-auto max-w-3xl text-muted-foreground\">\n            Сеть филиалов ИНВЕСТ-ЛИЗИНГ постоянно растет. Мы стремимся быть ближе к клиентам\n            и оказывать качественные услуги во всех регионах России.\n          </p>\n        </div>\n        \n        <RussiaMap />\n      </Container>\n    </section>\n  );\n};\n\nexport default BranchesSection;","size_bytes":932},"client/src/components/main-site/contacts-section.tsx":{"content":"import React from 'react';\nimport { Container } from \"@/components/ui/container\";\nimport RussiaMap from './topo-russia-map';\n\nexport const ContactsSection = () => {\n  return (\n    <section className=\"py-20 relative overflow-hidden\" id=\"contacts\">\n      <div className=\"absolute top-40 right-20 w-96 h-96 rounded-full bg-primary opacity-5 blur-3xl\"></div>\n      \n      <Container>\n        <div className=\"text-center max-w-2xl mx-auto mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold mb-6\">Контакты</h2>\n          <p className=\"text-muted-foreground text-lg\">\n            Свяжитесь с нами для получения консультации по вопросам лизинга\n          </p>\n        </div>\n        \n        <div className=\"mb-12\">\n          <RussiaMap />\n        </div>\n      </Container>\n    </section>\n  );\n};","size_bytes":864},"client/src/components/main-site/d3-russia-map.tsx":{"content":"import React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport './russia-map.css';\n\n// Типы для наших данных\ninterface Branch {\n  id: number;\n  city: string;\n  regionCode: string;\n  regionName: string;\n  address: string;\n  phone: string;\n  email: string;\n  workingHours: string;\n}\n\n// Интерфейс для GeoJSON\ninterface GeoFeature {\n  type: string;\n  properties: {\n    name: string;\n    iso_3166_2: string;\n  };\n  geometry: {\n    type: string;\n    coordinates: any;\n  };\n}\n\ninterface GeoJSON {\n  type: string;\n  features: GeoFeature[];\n}\n\nconst D3RussiaMap: React.FC = () => {\n  // Создаем референс для SVG элемента\n  const svgRef = useRef<SVGSVGElement>(null);\n  const tooltipRef = useRef<HTMLDivElement>(null);\n  \n  // Состояния компонента\n  const [selectedRegion, setSelectedRegion] = useState<string | null>(null);\n  const [selectedBranch, setSelectedBranch] = useState<Branch | null>(null);\n\n  // Список регионов, где есть филиалы\n  const regionsWithBranches = [\n    'RU-KDA', // Краснодарский край\n    'RU-LEN', // Ленинградская область\n    'RU-NIZ', // Нижегородская область\n    'RU-TAM', // Тамбовская область\n    'RU-SAM', // Самарская область\n    'RU-TYU', // Тюменская область\n    'RU-ULY', // Ульяновская область\n    'RU-BA',  // Башкортостан\n    'RU-CHE', // Челябинская область\n  ];\n\n  // Данные о филиалах с реальными данными\n  const branchesData: Branch[] = [\n    {\n      id: 1,\n      city: 'Краснодар',\n      regionCode: 'RU-KDA',\n      regionName: 'Краснодарский край',\n      address: 'г. Краснодар ул. Российская д. 388 офис 5',\n      phone: '+7 (919) 110-70-55',\n      email: 'info@investl.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 2,\n      city: 'Санкт-Петербург',\n      regionCode: 'RU-LEN',\n      regionName: 'Ленинградская область',\n      address: 'г. Санкт-Петербург, пр. Энергетиков, д. 4к1, БЦ Амбер Холл, оф. 1206',\n      phone: '+7 (921) 951-20-70',\n      email: 'info@investl.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 3,\n      city: 'Нижний Новгород',\n      regionCode: 'RU-NIZ',\n      regionName: 'Нижегородская область',\n      address: '603040, г. Нижний Новгород, проспект Союзный, д. 45, офис 11 (этаж 4), Бизнес центр \"Володарский\"',\n      phone: '+7 (919) 110-70-66',\n      email: 'info@investl.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 4,\n      city: 'Тамбов',\n      regionCode: 'RU-TAM',\n      regionName: 'Тамбовская область',\n      address: 'г. Тамбов, улица Мичуринская 146, оф 7',\n      phone: '+7 (919) 110-70-25',\n      email: 'info@investl.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 5,\n      city: 'Тольятти',\n      regionCode: 'RU-SAM',\n      regionName: 'Самарская область',\n      address: '445030, Самарская обл., г. Тольятти, ул. 70 лет Октября, д.31А',\n      phone: '+7 (919) 110-70-15',\n      email: 'info@investl.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 6,\n      city: 'Тюмень',\n      regionCode: 'RU-TYU',\n      regionName: 'Тюменская область',\n      address: '625007, г. Тюмень, ул. 30 лет Победы, д. 38А, офис 53',\n      phone: '+7 (3452) 39-34-83',\n      email: 'info@investl.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 7,\n      city: 'Ульяновск',\n      regionCode: 'RU-ULY',\n      regionName: 'Ульяновская область',\n      address: '432072, г. Ульяновск, проспект Туполева, д. 31, стр. 1 (этаж 1), Бизнес центр \"Взлетный\"',\n      phone: '+7 (982) 370-04-26',\n      email: 'info@investl.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 8,\n      city: 'Уфа',\n      regionCode: 'RU-BA',\n      regionName: 'Республика Башкортостан',\n      address: 'Республика Башкортостан, г. Уфа, ул. Кирова, д.128, корпус 2, пом.4',\n      phone: '+7 (919) 110-70-06',\n      email: 'info@investl.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 9,\n      city: 'Челябинск',\n      regionCode: 'RU-CHE',\n      regionName: 'Челябинская область',\n      address: '454084, г. Челябинск, проспект Победы, д. 147-A, 1 этаж',\n      phone: '+7 (351) 791-06-46',\n      email: 'info@investl.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n  ];\n\n  useEffect(() => {\n    // Функция для загрузки и инициализации карты\n    const initializeMap = async () => {\n      try {\n        // Загружаем GeoJSON данные для России\n        console.log('Загружаю GeoJSON данные...');\n        const response = await fetch('/russia.geo.json');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const geoData: GeoJSON = await response.json();\n        console.log('GeoJSON данные успешно загружены');\n        \n        // Если SVG элемент существует, рендерим карту\n        if (svgRef.current) {\n          console.log('Рендерю карту...');\n          renderMap(geoData);\n        }\n      } catch (error) {\n        console.error('Ошибка при загрузке GeoJSON данных:', error);\n      }\n    };\n\n    // Вызываем инициализацию\n    initializeMap();\n  }, []);\n\n  // Рендеринг карты с D3.js\n  const renderMap = (geoData: GeoJSON) => {\n    if (!svgRef.current) return;\n\n    console.log('Количество регионов в GeoJSON:', geoData.features.length);\n    \n    // Очищаем SVG\n    d3.select(svgRef.current).selectAll('*').remove();\n    \n    // Размеры SVG\n    const width = 800;\n    const height = 500;\n    \n    // Создаем проекцию для карты России\n    const projection = d3.geoAlbers()\n      .rotate([-105, 0])\n      .center([0, 60])\n      .parallels([50, 70])\n      .scale(700)\n      .translate([width / 2, height / 2]);\n    \n    // Создаем path генератор\n    const pathGenerator = d3.geoPath().projection(projection);\n    \n    // Создаем SVG контейнер\n    const svg = d3.select(svgRef.current)\n      .attr('width', width)\n      .attr('height', height)\n      .attr('viewBox', `0 0 ${width} ${height}`)\n      .attr('preserveAspectRatio', 'xMidYMid meet');\n    \n    // Добавляем группу для всей карты и применяем масштабирование\n    const g = svg.append('g');\n    \n    // Создаем и стилизуем пути для регионов\n    g.selectAll('path')\n      .data(geoData.features)\n      .join('path')\n      .attr('d', (d) => pathGenerator(d as any) || '')\n      .attr('class', d => {\n        const regionCode = d.properties.iso_3166_2;\n        return `region ${regionsWithBranches.includes(regionCode) ? 'has-filial' : ''}`;\n      })\n      .attr('data-region', d => d.properties.iso_3166_2)\n      .attr('data-name', d => d.properties.name)\n      .on('mouseover', (event, d) => handleMouseOver(event, d))\n      .on('mousemove', (event) => handleMouseMove(event))\n      .on('mouseout', () => handleMouseOut())\n      .on('click', (event, d) => handleRegionClick(event, d));\n      \n    // Добавляем возможность зума и перемещения\n    const zoom = d3.zoom()\n      .scaleExtent([1, 8])\n      .on('zoom', (event) => {\n        g.attr('transform', event.transform);\n      });\n    \n    svg.call(zoom as any);\n  };\n\n  // Обработчики событий для интерактивности\n  const handleMouseOver = (event: any, d: any) => {\n    const regionCode = d.properties.iso_3166_2;\n    const regionName = d.properties.name;\n    \n    if (tooltipRef.current) {\n      // Показываем подсказку\n      tooltipRef.current.style.visibility = 'visible';\n      tooltipRef.current.innerHTML = `\n        <div>${regionName}</div>\n        ${regionsWithBranches.includes(regionCode) ? '<div class=\"has-branch\">Есть филиал</div>' : ''}\n      `;\n    }\n    \n    // Добавляем класс при наведении\n    d3.select(event.currentTarget).classed('hover', true);\n  };\n\n  const handleMouseMove = (event: any) => {\n    if (tooltipRef.current) {\n      // Обновляем позицию подсказки\n      tooltipRef.current.style.left = `${event.pageX + 15}px`;\n      tooltipRef.current.style.top = `${event.pageY - 30}px`;\n    }\n  };\n\n  const handleMouseOut = () => {\n    if (tooltipRef.current) {\n      // Скрываем подсказку\n      tooltipRef.current.style.visibility = 'hidden';\n    }\n    \n    // Удаляем класс при уходе мыши\n    d3.selectAll('.region').classed('hover', false);\n  };\n\n  const handleRegionClick = (event: any, d: any) => {\n    const regionCode = d.properties.iso_3166_2;\n    \n    // Проверяем, есть ли филиал в регионе\n    if (regionsWithBranches.includes(regionCode)) {\n      setSelectedRegion(regionCode);\n      \n      // Находим информацию о филиале\n      const branch = branchesData.find(b => b.regionCode === regionCode);\n      if (branch) {\n        setSelectedBranch(branch);\n      }\n      \n      // Удаляем выделение со всех регионов и выделяем выбранный\n      d3.selectAll('.region').classed('selected', false);\n      d3.select(event.currentTarget).classed('selected', true);\n    }\n  };\n\n  // Обработчик изменения выбора филиала в выпадающем списке\n  const handleBranchSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const branchId = parseInt(e.target.value);\n    if (!branchId) {\n      setSelectedBranch(null);\n      setSelectedRegion(null);\n      \n      // Снимаем выделение со всех регионов\n      d3.selectAll('.region').classed('selected', false);\n      return;\n    }\n    \n    const branch = branchesData.find(branch => branch.id === branchId);\n    if (branch) {\n      setSelectedBranch(branch);\n      setSelectedRegion(branch.regionCode);\n      \n      // Удаляем выделение со всех регионов и выделяем выбранный\n      d3.selectAll('.region').classed('selected', false);\n      d3.select(`path[data-region=\"${branch.regionCode}\"]`).classed('selected', true);\n    }\n  };\n\n  return (\n    <div className=\"py-6\">\n      <div className=\"flex flex-col md:flex-row gap-8\">\n        <div className=\"w-full md:w-2/3\">\n          <h2 className=\"text-2xl font-bold mb-2 text-center\">Наши филиалы на карте России</h2>\n          <p className=\"text-sm text-muted-foreground mb-6 text-center\">Выберите регион для просмотра информации о филиале</p>\n          \n          {/* D3 SVG карта */}\n          <div className=\"relative mx-auto max-w-3xl\">\n            <svg ref={svgRef} className=\"w-full h-auto\"></svg>\n            <div ref={tooltipRef} className=\"map-tooltip\" style={{ visibility: 'hidden' }}></div>\n          </div>\n        </div>\n        \n        <div className=\"w-full md:w-1/3\">\n          {/* Информация о филиале */}\n          <div className=\"border border-border rounded-lg p-5 bg-card/50 backdrop-blur-sm shadow-md\">\n            <h3 className=\"text-xl font-semibold mb-4 text-center\">Наши филиалы</h3>\n            <div className=\"relative mb-6\">\n              <select \n                className=\"w-full p-3 rounded-md bg-background border border-input text-sm appearance-none pr-10\"\n                value={selectedBranch?.id || ''}\n                onChange={handleBranchSelectChange}\n              >\n                <option value=\"\">Выберите филиал</option>\n                {branchesData.map(branch => (\n                  <option key={branch.id} value={branch.id}>\n                    {branch.city} ({branch.regionName})\n                  </option>\n                ))}\n              </select>\n              <div className=\"absolute right-3 top-1/2 -translate-y-1/2 text-primary text-opacity-80 text-xs pointer-events-none\">▼</div>\n            </div>\n            \n            {selectedBranch && (\n              <div className=\"space-y-3 animate-fade-in\">\n                <h4 className=\"text-lg font-medium text-primary\">{selectedBranch.city}</h4>\n                <div className=\"text-sm space-y-2\">\n                  <p><span className=\"font-medium\">Регион:</span> {selectedBranch.regionName}</p>\n                  <p><span className=\"font-medium\">Адрес:</span> {selectedBranch.address}</p>\n                  <p><span className=\"font-medium\">Телефон:</span> <a href={`tel:${selectedBranch.phone}`} className=\"text-primary hover:underline\">{selectedBranch.phone}</a></p>\n                  <p><span className=\"font-medium\">Email:</span> <a href={`mailto:${selectedBranch.email}`} className=\"text-primary hover:underline\">{selectedBranch.email}</a></p>\n                  <p><span className=\"font-medium\">Режим работы:</span> {selectedBranch.workingHours}</p>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default D3RussiaMap;","size_bytes":14085},"client/src/components/main-site/faq-section.tsx":{"content":"import {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\n\ninterface FAQItem {\n  id: string;\n  question: string;\n  answer: string;\n}\n\nexport const FAQSection = () => {\n  const faqItems: FAQItem[] = [\n    {\n      id: \"1\",\n      question: \"Что такое лизинг?\",\n      answer: \"Лизинг — это форма финансовой аренды, при которой лизинговая компания приобретает имущество для клиента и передает его во временное владение и пользование с последующим правом выкупа. Это эффективный финансовый инструмент для обновления основных производственных фондов предприятия.\"\n    },\n    {\n      id: \"2\",\n      question: \"Какие преимущества лизинга перед кредитом?\",\n      answer: \"Лизинг имеет ряд преимуществ: ускоренная амортизация предмета лизинга, оптимизация налогообложения (НДС к возмещению, снижение налога на прибыль и имущество), меньшие требования к финансовому состоянию клиента, возможность применения субсидий, а также отсутствие необходимости в крупном первоначальном вложении средств.\"\n    },\n    {\n      id: \"3\",\n      question: \"Какое имущество можно приобрести в лизинг?\",\n      answer: \"В лизинг можно приобрести широкий спектр имущества: легковые и грузовые автомобили, спецтехнику, производственное и технологическое оборудование, недвижимость (в том числе коммерческую) и другие основные средства, используемые в предпринимательской деятельности.\"\n    },\n    {\n      id: \"4\",\n      question: \"Каков минимальный/максимальный срок лизинга?\",\n      answer: \"Срок лизинга обычно составляет от 1 года до 5 лет для движимого имущества, и до 10 лет для объектов недвижимости. Конкретные сроки зависят от вида имущества, его стоимости и индивидуальных условий лизинговой программы.\"\n    },\n    {\n      id: \"5\",\n      question: \"Какой первоначальный взнос требуется?\",\n      answer: \"Размер первоначального взноса (аванса) обычно составляет от 10% до 49% от стоимости предмета лизинга. Точный размер зависит от типа приобретаемого имущества, финансового состояния лизингополучателя и условий конкретной лизинговой программы.\"\n    },\n    {\n      id: \"6\",\n      question: \"Как оформить лизинг в вашей компании?\",\n      answer: \"Процесс оформления лизинга включает несколько шагов: подача заявки с необходимыми документами, рассмотрение заявки (обычно 1-3 рабочих дня), подписание договора лизинга, оплата первоначального взноса, приобретение предмета лизинга у поставщика и его передача в пользование клиенту.\"\n    },\n    {\n      id: \"7\",\n      question: \"Какие документы нужны для оформления лизинга?\",\n      answer: \"Для оформления лизинга обычно требуются: заявка на лизинг, учредительные документы компании, финансовая отчетность за последние периоды, документы на залоговое имущество (при наличии), паспорта руководителей и учредителей, а также документы по приобретаемому предмету лизинга (спецификация, коммерческое предложение поставщика).\"\n    },\n    {\n      id: \"8\",\n      question: \"Можно ли досрочно выкупить предмет лизинга?\",\n      answer: \"Да, досрочный выкуп предмета лизинга возможен. Обычно это можно сделать по истечении определенного срока (например, после 6-12 месяцев лизинговых платежей). Условия досрочного выкупа прописываются в договоре лизинга.\"\n    }\n  ];\n\n  return (\n    <section className=\"py-20 relative overflow-hidden\" id=\"faq\">\n      <div className=\"absolute top-40 left-20 w-96 h-96 rounded-full bg-primary opacity-5 blur-3xl\"></div>\n      \n      <div className=\"container mx-auto px-4 relative z-10\">\n        <div className=\"text-center max-w-2xl mx-auto mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold mb-6\">Часто задаваемые вопросы</h2>\n          <p className=\"text-muted-foreground text-lg\">\n            Ответы на наиболее популярные вопросы о лизинге и нашей компании\n          </p>\n        </div>\n        \n        <div className=\"max-w-3xl mx-auto\">\n          <Accordion type=\"single\" collapsible className=\"space-y-6\">\n            {faqItems.map((item) => (\n              <AccordionItem key={item.id} value={item.id} className=\"glass backdrop-blur-sm bg-background/30 border rounded-lg overflow-hidden\">\n                <AccordionTrigger className=\"px-6 py-4 text-left text-lg font-medium hover:no-underline\">\n                  {item.question}\n                </AccordionTrigger>\n                <AccordionContent className=\"px-6 pb-6 pt-2 text-muted-foreground\">\n                  {item.answer}\n                </AccordionContent>\n              </AccordionItem>\n            ))}\n          </Accordion>\n          \n          <div className=\"text-center mt-12\">\n            <p className=\"mb-6 text-lg\">\n              Остались вопросы? Наши специалисты с радостью проконсультируют вас!\n            </p>\n            <Button asChild size=\"lg\" variant=\"glass-primary\">\n              <Link href=\"/contacts\">\n                <a>Связаться с нами</a>\n              </Link>\n            </Button>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};","size_bytes":7273},"client/src/components/main-site/hero-section.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\n\nexport const HeroSection = () => {\n  return (\n    <section className=\"relative py-20 overflow-hidden\">\n      {/* Gradient Background */}\n      <div className=\"absolute inset-0 bg-gradient-to-b from-background to-background/40\"></div>\n      \n      {/* Blurred circles for VisionOS aesthetic */}\n      <div className=\"absolute top-20 right-10 w-96 h-96 rounded-full bg-primary opacity-10 blur-3xl\"></div>\n      <div className=\"absolute bottom-10 left-20 w-72 h-72 rounded-full bg-primary opacity-10 blur-3xl\"></div>\n      \n      <div className=\"container mx-auto px-4 relative z-10\">\n        <div className=\"flex flex-col md:flex-row items-center justify-center gap-12\">\n          <div className=\"max-w-2xl text-center\">\n            <h1 className=\"text-4xl md:text-6xl font-bold mb-6 leading-tight\">\n              ПАРТНЁРСТВО ДЛЯ УСПЕХА\n            </h1>\n            <p className=\"text-xl mb-8 text-muted-foreground\">\n              Подберем финансовый инструмент для вашего бизнеса\n            </p>\n            \n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button size=\"lg\" variant=\"glass-primary\" asChild>\n                <a href=\"#services\">\n                  Наши услуги\n                </a>\n              </Button>\n              <Button size=\"lg\" variant=\"glass-outline\" asChild>\n                <a href=\"#calculator\">\n                  Оставить заявку\n                </a>\n              </Button>\n            </div>\n            \n            <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-6 mt-12\">\n              <div className=\"text-center glass backdrop-blur-sm rounded-xl p-4\">\n                <div className=\"text-2xl font-bold text-primary\">4000+</div>\n                <div className=\"text-sm text-muted-foreground\">Договоров</div>\n              </div>\n              <div className=\"text-center glass backdrop-blur-sm rounded-xl p-4\">\n                <div className=\"text-2xl font-bold text-primary\">1500+</div>\n                <div className=\"text-sm text-muted-foreground\">Партнеров</div>\n              </div>\n              <div className=\"text-center glass backdrop-blur-sm rounded-xl p-4\">\n                <div className=\"text-2xl font-bold text-primary\">32 млрд+</div>\n                <div className=\"text-sm text-muted-foreground\">Стоимость договоров</div>\n              </div>\n              <div className=\"text-center glass backdrop-blur-sm rounded-xl p-4\">\n                <div className=\"text-2xl font-bold text-primary\">100+</div>\n                <div className=\"text-sm text-muted-foreground\">Международных контрактов</div>\n              </div>\n            </div>\n          </div>\n          \n          {/* Hero image with glass effect */}\n          <div className=\"relative\">\n            <div className=\"glass backdrop-blur-lg rounded-2xl shadow-xl overflow-hidden max-w-md\">\n              <img \n                src=\"https://www.investl.ru/upload/iblock/1ff/v0t0aezzl0szir58nxzrn33lyqivwuun.gif\" \n                alt=\"Бизнес партнерство\" \n                className=\"w-full h-auto rounded-2xl\" \n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black/30 to-transparent\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};","size_bytes":3518},"client/src/components/main-site/interactive-map.tsx":{"content":"import { useState } from \"react\";\nimport { \n  Popover,\n  PopoverContent,\n  PopoverTrigger\n} from \"@/components/ui/popover\";\nimport { Button } from \"@/components/ui/button\";\nimport { ChevronDown } from \"lucide-react\";\nimport { SimpleRussiaMap } from \"./simple-russia-map\";\n\ninterface Region {\n  id: string;\n  code: string;\n  name: string;\n  city: string;\n  address: string;\n  phone: string;\n  email: string;\n}\n\nimport { MapPin, Phone, Mail, Clock } from \"lucide-react\";\n\nexport function InteractiveMap() {\n  const [selectedRegion, setSelectedRegion] = useState<Region | null>(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const regions: Region[] = [\n    {\n      id: \"krasnodar\",\n      code: \"RU-KDA\",\n      name: \"Краснодарский край\",\n      city: \"Краснодар\",\n      address: \"г. Краснодар ул. Российская д. 388 офис 5\",\n      phone: \"+7 (919) 110-70-55\",\n      email: \"info@investl.ru\"\n    },\n    {\n      id: \"leningrad\",\n      code: \"RU-LEN\",\n      name: \"Ленинградская область\",\n      city: \"Санкт-Петербург\",\n      address: \"г. Санкт-Петербург, пр. Энергетиков, д. 4к1, БЦ Амбер Холл, оф. 1206\",\n      phone: \"+7 (921) 951-20-70\",\n      email: \"info@investl.ru\"\n    },\n    {\n      id: \"nn\",\n      code: \"RU-NIZ\",\n      name: \"Нижегородская область\",\n      city: \"Нижний Новгород\",\n      address: \"603040, г. Нижний Новгород, проспект Союзный, д. 45, офис 11 (этаж 4), Бизнес центр \\\"Володарский\\\"\",\n      phone: \"+7 (919) 110-70-66\",\n      email: \"info@investl.ru\"\n    },\n    {\n      id: \"tambov\",\n      code: \"RU-TAM\",\n      name: \"Тамбовская область\",\n      city: \"Тамбов\",\n      address: \"г. Тамбов, улица Мичуринская 146, оф 7\",\n      phone: \"+7 (919) 110-70-25\",\n      email: \"info@investl.ru\"\n    },\n    {\n      id: \"samara\",\n      code: \"RU-SAM\",\n      name: \"Самарская область\",\n      city: \"Тольятти\",\n      address: \"445030, Самарская обл., г. Тольятти, ул. 70 лет Октября, д.31А\",\n      phone: \"+7 (919) 110-70-15\",\n      email: \"info@investl.ru\"\n    },\n    {\n      id: \"tyumen\",\n      code: \"RU-TYU\",\n      name: \"Тюменская область\",\n      city: \"Тюмень\",\n      address: \"625007, г. Тюмень, ул. 30 лет Победы, д. 38А, офис 53\",\n      phone: \"+7 (3452) 39-34-83\",\n      email: \"info@investl.ru\"\n    },\n    {\n      id: \"ulyanovsk\",\n      code: \"RU-ULY\",\n      name: \"Ульяновская область\",\n      city: \"Ульяновск\",\n      address: \"432072, г. Ульяновск, проспект Туполева, д. 31, стр. 1 (этаж 1), Бизнес центр \\\"Взлетный\\\"\",\n      phone: \"+7 (982) 370-04-26\",\n      email: \"info@investl.ru\"\n    },\n    {\n      id: \"bashkortostan\",\n      code: \"RU-BA\",\n      name: \"Республика Башкортостан\",\n      city: \"Уфа\",\n      address: \"Республика Башкортостан, г. Уфа, ул. Кирова, д.128, корпус 2, пом.4\",\n      phone: \"+7 (919) 110-70-06\",\n      email: \"info@investl.ru\"\n    },\n    {\n      id: \"chelyabinsk\",\n      code: \"RU-CHE\",\n      name: \"Челябинская область\",\n      city: \"Челябинск\",\n      address: \"454084, г. Челябинск, проспект Победы, д. 147-A, 1 этаж\",\n      phone: \"+7 (351) 791-06-46\",\n      email: \"info@investl.ru\"\n    }\n  ];\n\n  const handleSelectRegion = (region: Region) => {\n    setSelectedRegion(region);\n    setIsOpen(false);\n  };\n\n  const defaultRegion = regions.find(r => r.id === \"krasnodar\") || regions[0];\n\n  return (\n    <div className=\"flex flex-col gap-4 items-start\">\n      <div className=\"w-full glass p-6 rounded-xl text-center relative overflow-hidden\">\n        <h3 className=\"text-xl font-semibold mb-6\">Наши филиалы на карте России</h3>\n        \n        {/* Верхние блоки в ряд */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n          {/* Выпадающий список и контактная информация - слева */}\n          <div className=\"glass backdrop-blur-sm bg-background/30 rounded-lg p-4\">\n            <Popover open={isOpen} onOpenChange={setIsOpen}>\n              <PopoverTrigger asChild>\n                <Button variant=\"outline\" className=\"w-full justify-between bg-background/50 mb-4\">\n                  {selectedRegion ? selectedRegion.city : defaultRegion.city}\n                  <ChevronDown className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\n                </Button>\n              </PopoverTrigger>\n              <PopoverContent className=\"w-full p-0\" align=\"start\">\n                <div className=\"max-h-[300px] overflow-auto\">\n                  {regions.map((region) => (\n                    <Button\n                      key={region.id}\n                      variant=\"ghost\"\n                      className=\"w-full justify-start rounded-none\"\n                      onClick={() => handleSelectRegion(region)}\n                    >\n                      {region.city}\n                    </Button>\n                  ))}\n                </div>\n              </PopoverContent>\n            </Popover>\n            \n            <div className=\"space-y-4 text-left\">\n              <div className=\"flex items-start gap-3\">\n                <MapPin className=\"h-5 w-5 mt-0.5 text-primary shrink-0\" />\n                <span className=\"text-sm text-muted-foreground\">\n                  {selectedRegion ? selectedRegion.address : defaultRegion.address}\n                </span>\n              </div>\n              <div className=\"flex items-start gap-3\">\n                <Phone className=\"h-5 w-5 mt-0.5 text-primary shrink-0\" />\n                <span className=\"text-sm text-muted-foreground\">\n                  {selectedRegion ? selectedRegion.phone : defaultRegion.phone}\n                </span>\n              </div>\n              <div className=\"flex items-start gap-3\">\n                <Mail className=\"h-5 w-5 mt-0.5 text-primary shrink-0\" />\n                <span className=\"text-sm text-muted-foreground\">\n                  {selectedRegion ? selectedRegion.email : defaultRegion.email}\n                </span>\n              </div>\n            </div>\n          </div>\n          \n          {/* Время работы - справа */}\n          <div className=\"glass backdrop-blur-sm bg-background/30 rounded-lg p-4\">\n            <h4 className=\"font-medium mb-3 flex items-center text-left\">\n              <Clock className=\"h-5 w-5 mr-2 text-primary\" />\n              Время работы\n            </h4>\n            <div className=\"flex justify-between text-sm mb-2\">\n              <span>Понедельник - Пятница</span>\n              <span className=\"text-muted-foreground\">9:00 - 18:00</span>\n            </div>\n            <div className=\"flex justify-between text-sm\">\n              <span>Суббота - Воскресенье</span>\n              <span className=\"text-muted-foreground\">Выходной</span>\n            </div>\n          </div>\n        </div>\n        \n        {/* Карта России */}\n        <div className=\"h-[400px] glass backdrop-blur-sm bg-background/30 rounded-lg overflow-hidden p-6\">\n          <div style={{ maxWidth: \"100%\", height: \"100%\", overflow: \"hidden\" }}>\n            <SimpleRussiaMap \n              regions={regions} \n              onRegionSelect={handleSelectRegion} \n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":7742},"client/src/components/main-site/interactive-russia-map-v2.tsx":{"content":"import React, { useEffect, useState, useRef } from 'react';\nimport './russia-map.css';\n\n// Типы для наших данных\ninterface Branch {\n  id: number;\n  city: string;\n  regionCode: string;\n  regionName: string;\n  address: string;\n  phone: string;\n  email: string;\n  workingHours: string;\n}\n\n// Компонент интерактивной карты России\nconst InteractiveRussiaMapV2: React.FC = () => {\n  // Список регионов, где есть филиалы (актуальные)\n  const regionsWithBranches = [\n    'RU-KDA', // Краснодарский край\n    'RU-LEN', // Ленинградская область\n    'RU-NIZ', // Нижегородская область\n    'RU-TAM', // Тамбовская область\n    'RU-SAM', // Самарская область\n    'RU-TYU', // Тюменская область\n    'RU-ULY', // Ульяновская область\n    'RU-BA',  // Башкортостан\n    'RU-CHE', // Челябинская область\n  ];\n\n  // Данные о филиалах с реальными данными\n  const branchesData: Branch[] = [\n    {\n      id: 1,\n      city: 'Краснодар',\n      regionCode: 'RU-KDA',\n      regionName: 'Краснодарский край',\n      address: 'г. Краснодар ул. Российская д. 388 офис 5',\n      phone: '+7 (919) 110-70-55',\n      email: 'il_uda@chelinvest.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 2,\n      city: 'Санкт-Петербург',\n      regionCode: 'RU-LEN',\n      regionName: 'Ленинградская область',\n      address: 'г. Санкт-Петербург, пр. Энергетиков, д. 4к1, БЦ Амбер Холл, оф. 1206',\n      phone: '+7 (921) 951-20-70',\n      email: 'd.chadaev@chelinvest.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 3,\n      city: 'Нижний Новгород',\n      regionCode: 'RU-NIZ',\n      regionName: 'Нижегородская область',\n      address: '603040, г. Нижний Новгород, проспект Союзный, д. 45, офис 11 (этаж 4), Бизнес центр \"Володарский\"',\n      phone: '+7 (919) 110-70-66',\n      email: 'g.fateeva@chelinvest.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 4,\n      city: 'Тамбов',\n      regionCode: 'RU-TAM',\n      regionName: 'Тамбовская область',\n      address: 'г. Тамбов, улица Мичуринская 146, оф 7',\n      phone: '+7 (919) 110-70-25',\n      email: 'o.korolev@chelinvest.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 5,\n      city: 'Тольятти',\n      regionCode: 'RU-SAM',\n      regionName: 'Самарская область',\n      address: '445030, Самарская обл., г. Тольятти, ул. 70 лет Октября, д.31А',\n      phone: '+7 (919) 110-70-15',\n      email: 'l.mironova@chelinvest.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 6,\n      city: 'Тюмень',\n      regionCode: 'RU-TYU',\n      regionName: 'Тюменская область',\n      address: '625007, г. Тюмень, ул. 30 лет Победы, д. 38А, офис 53',\n      phone: '+7 (3452) 39-34-83',\n      email: 'mihalaki@chelinvest.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 7,\n      city: 'Ульяновск',\n      regionCode: 'RU-ULY',\n      regionName: 'Ульяновская область',\n      address: '432072, г. Ульяновск, проспект Туполева, д. 31, стр. 1 (этаж 1), Бизнес центр \"Взлетный\"',\n      phone: '+7 (982) 370-04-26',\n      email: 'i.sandimirova@chelinvest.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 8,\n      city: 'Уфа',\n      regionCode: 'RU-BA',\n      regionName: 'Республика Башкортостан',\n      address: 'Республика Башкортостан, г. Уфа, ул. Кирова, д.128, корпус 2, пом.4',\n      phone: '+7 (919) 110-70-06',\n      email: 'e.kochkurova@chelinvest.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 9,\n      city: 'Челябинск',\n      regionCode: 'RU-CHE',\n      regionName: 'Челябинская область',\n      address: '454084, г. Челябинск, проспект Победы, д. 147-A, 1 этаж',\n      phone: '+7 (351) 791-06-46',\n      email: 'il@chelinvest.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n  ];\n\n  // Состояния компонента\n  const [selectedRegion, setSelectedRegion] = useState<string | null>(null);\n  const [selectedBranch, setSelectedBranch] = useState<Branch | null>(null);\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [tooltipContent, setTooltipContent] = useState({ title: '', regionCode: '' });\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n  \n  // Используем useRef с более конкретным типом для объекта SVG\n  const svgObjectRef = useRef<HTMLObjectElement>(null);\n\n  // Добавляем обработчики событий после загрузки SVG\n  useEffect(() => {\n    const handleSvgLoad = () => {\n      const svgObject = svgObjectRef.current;\n      if (!svgObject) return;\n      \n      const svgDocument = svgObject.contentDocument;\n      if (!svgDocument) return;\n      \n      const regions = svgDocument.querySelectorAll('path');\n      regions.forEach(region => {\n        const regionId = region.getAttribute('id');\n        \n        // Помечаем регионы с филиалами\n        if (regionId && regionsWithBranches.includes(regionId)) {\n          region.classList.add('available');\n        }\n        \n        // Добавляем data-атрибуты для идентификации и заголовки\n        if (regionId) {\n          region.setAttribute('data-code', regionId);\n          const branchInfo = branchesData.find(b => b.regionCode === regionId);\n          region.setAttribute('data-title', branchInfo?.regionName || regionId);\n        }\n        \n        // Добавляем обработчики событий\n        region.addEventListener('mouseenter', handleRegionMouseEnter);\n        region.addEventListener('mouseleave', handleRegionMouseLeave);\n        region.addEventListener('mousemove', handleRegionMouseMove);\n        region.addEventListener('click', handleRegionClick);\n      });\n    };\n    \n    // Устанавливаем обработчик загрузки SVG\n    const svgObject = svgObjectRef.current;\n    if (svgObject) {\n      svgObject.addEventListener('load', handleSvgLoad);\n    }\n    \n    return () => {\n      if (svgObject) {\n        svgObject.removeEventListener('load', handleSvgLoad);\n      }\n    };\n  }, []);\n\n  // Обработчики событий для регионов\n  const handleRegionMouseEnter = (e: Event) => {\n    const target = e.target as SVGPathElement;\n    const regionId = target.getAttribute('data-code');\n    const regionTitle = target.getAttribute('data-title') || regionId || '';\n    \n    if (regionId) {\n      setTooltipContent({\n        title: regionTitle,\n        regionCode: regionId\n      });\n      setShowTooltip(true);\n    }\n  };\n\n  const handleRegionMouseLeave = () => {\n    setShowTooltip(false);\n  };\n\n  const handleRegionMouseMove = (e: Event) => {\n    if (!svgObjectRef.current) return;\n    \n    const mouseEvent = e as MouseEvent;\n    const svgRect = svgObjectRef.current.getBoundingClientRect();\n    \n    // Рассчитываем позицию подсказки относительно SVG\n    setTooltipPosition({\n      x: mouseEvent.clientX - svgRect.left + 15,\n      y: mouseEvent.clientY - svgRect.top - 30,\n    });\n  };\n\n  const handleRegionClick = (e: Event) => {\n    const target = e.target as SVGPathElement;\n    const regionId = target.getAttribute('data-code');\n    \n    // Проверяем, есть ли филиал в этом регионе\n    if (regionId && regionsWithBranches.includes(regionId)) {\n      setSelectedRegion(regionId);\n      \n      // Находим филиал в выбранном регионе\n      const branch = branchesData.find(branch => branch.regionCode === regionId);\n      if (branch) {\n        setSelectedBranch(branch);\n      }\n      \n      // Выделяем выбранный регион на карте\n      const svgDocument = svgObjectRef.current?.contentDocument;\n      if (svgDocument) {\n        const regions = svgDocument.querySelectorAll('path');\n        if (regions) {\n          regions.forEach(r => {\n            r.classList.remove('selected');\n            if (r.getAttribute('data-code') === regionId) {\n              r.classList.add('selected');\n            }\n          });\n        }\n      }\n    }\n  };\n\n  // Обработчик изменения выбора филиала в выпадающем списке\n  const handleBranchSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const branchId = parseInt(e.target.value);\n    if (!branchId) {\n      setSelectedBranch(null);\n      setSelectedRegion(null);\n      \n      // Снимаем выделение со всех регионов\n      const svgDocument = svgObjectRef.current?.contentDocument;\n      if (svgDocument) {\n        const regions = svgDocument.querySelectorAll('path');\n        if (regions) {\n          regions.forEach(r => r.classList.remove('selected'));\n        }\n      }\n      return;\n    }\n    \n    const branch = branchesData.find(branch => branch.id === branchId);\n    \n    if (branch) {\n      setSelectedBranch(branch);\n      setSelectedRegion(branch.regionCode);\n      \n      // Выделяем выбранный регион на карте\n      const svgDocument = svgObjectRef.current?.contentDocument;\n      if (svgDocument) {\n        const regions = svgDocument.querySelectorAll('path');\n        if (regions) {\n          regions.forEach(r => {\n            r.classList.remove('selected');\n            if (r.getAttribute('data-code') === branch.regionCode) {\n              r.classList.add('selected');\n            }\n          });\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"russia-map-container\">\n      <div className=\"interactive-map\">\n        <div className=\"map-container\">\n          <h2 className=\"map-title\">Наши филиалы на карте России</h2>\n          <p className=\"map-subtitle\">Выберите регион для просмотра информации о филиале</p>\n          \n          {/* Карта России */}\n          <div className=\"rf-map\">\n            <object \n              ref={svgObjectRef}\n              className=\"russia-map\"\n              type=\"image/svg+xml\" \n              data=\"/russia_map.svg\"\n              width=\"100%\" \n              height=\"100%\"\n            />\n            \n            {/* Всплывающая подсказка */}\n            {showTooltip && (\n              <div \n                className=\"map-tooltip\" \n                style={{ left: tooltipPosition.x, top: tooltipPosition.y }}\n              >\n                <div className=\"tooltip-title\">{tooltipContent.title}</div>\n                {regionsWithBranches.includes(tooltipContent.regionCode) && (\n                  <div className=\"tooltip-branch\">Есть филиал</div>\n                )}\n              </div>\n            )}\n          </div>\n          \n          {/* Информация о филиале */}\n          <div className=\"branch-info\">\n            <h3>Наши филиалы</h3>\n            <div className=\"branch-select-wrapper\">\n              <select \n                className=\"branch-select\"\n                value={selectedBranch?.id || ''}\n                onChange={handleBranchSelectChange}\n              >\n                <option value=\"\">Выберите филиал</option>\n                {branchesData.map(branch => (\n                  <option key={branch.id} value={branch.id}>\n                    {branch.city} ({branch.regionName})\n                  </option>\n                ))}\n              </select>\n              <div className=\"select-arrow\">▼</div>\n            </div>\n            \n            {selectedBranch && (\n              <div className=\"branch-details\">\n                <h4>{selectedBranch.city}</h4>\n                <p><strong>Регион:</strong> {selectedBranch.regionName}</p>\n                <p><strong>Адрес:</strong> {selectedBranch.address}</p>\n                <p><strong>Телефон:</strong> {selectedBranch.phone}</p>\n                <p><strong>Email:</strong> {selectedBranch.email}</p>\n                <p><strong>Режим работы:</strong> {selectedBranch.workingHours}</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InteractiveRussiaMapV2;","size_bytes":13019},"client/src/components/main-site/interactive-russia-map.tsx":{"content":"import React, { useEffect, useState, useRef } from 'react';\nimport './russia-map.css';\n\n// Типы для наших данных\ninterface Branch {\n  id: number;\n  city: string;\n  regionCode: string;\n  regionName: string;\n  address: string;\n  phone: string;\n  email: string;\n  workingHours: string;\n}\n\ninterface Region {\n  code: string;\n  name: string;\n  hasBranch: boolean;\n}\n\n// Компонент интерактивной карты России\nconst InteractiveRussiaMap: React.FC = () => {\n  // Список регионов, где есть филиалы (придуманные примеры)\n  const regionsWithBranches = [\n    'RU-MOW', // Москва\n    'RU-SPE', // Санкт-Петербург\n    'RU-KDA', // Краснодарский край\n    'RU-NIZ', // Нижегородская область\n    'RU-SVE', // Свердловская область \n    'RU-NVS', // Новосибирская область\n    'RU-KHM', // Ханты-Мансийский АО\n    'RU-PRI', // Приморский край\n  ];\n\n  // Данные о филиалах\n  const branchesData: Branch[] = [\n    {\n      id: 1,\n      city: 'Москва',\n      regionCode: 'RU-MOW',\n      regionName: 'г. Москва',\n      address: 'ул. Тверская, 15, офис 301',\n      phone: '+7 (495) 123-45-67',\n      email: 'moscow@investlease.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 2,\n      city: 'Санкт-Петербург',\n      regionCode: 'RU-SPE',\n      regionName: 'г. Санкт-Петербург',\n      address: 'Невский проспект, 100, офис 215',\n      phone: '+7 (812) 765-43-21',\n      email: 'spb@investlease.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 3,\n      city: 'Краснодар',\n      regionCode: 'RU-KDA',\n      regionName: 'Краснодарский край',\n      address: 'ул. Красная, 55, офис 102',\n      phone: '+7 (861) 234-56-78',\n      email: 'krasnodar@investlease.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 4,\n      city: 'Нижний Новгород',\n      regionCode: 'RU-NIZ',\n      regionName: 'Нижегородская область',\n      address: 'ул. Минина, 25, офис 304',\n      phone: '+7 (831) 345-67-89',\n      email: 'nnovgorod@investlease.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 5,\n      city: 'Екатеринбург',\n      regionCode: 'RU-SVE',\n      regionName: 'Свердловская область',\n      address: 'ул. Ленина, 40, офис 505',\n      phone: '+7 (343) 456-78-90',\n      email: 'ekb@investlease.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 6,\n      city: 'Новосибирск',\n      regionCode: 'RU-NVS',\n      regionName: 'Новосибирская область',\n      address: 'Красный проспект, 70, офис 210',\n      phone: '+7 (383) 567-89-01',\n      email: 'nsk@investlease.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 7,\n      city: 'Сургут',\n      regionCode: 'RU-KHM',\n      regionName: 'Ханты-Мансийский АО',\n      address: 'ул. Университетская, 15, офис 112',\n      phone: '+7 (3462) 78-90-12',\n      email: 'surgut@investlease.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 8,\n      city: 'Владивосток',\n      regionCode: 'RU-PRI',\n      regionName: 'Приморский край',\n      address: 'ул. Светланская, 85, офис 408',\n      phone: '+7 (423) 890-12-34',\n      email: 'vladivostok@investlease.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n  ];\n\n  // Состояния компонента\n  const [selectedRegion, setSelectedRegion] = useState<string | null>(null);\n  const [selectedBranch, setSelectedBranch] = useState<Branch | null>(null);\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [tooltipContent, setTooltipContent] = useState({ title: '', regionCode: '' });\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n  \n  const mapRef = useRef<SVGSVGElement>(null);\n  const tooltipRef = useRef<HTMLDivElement>(null);\n\n  // Эффект для инициализации интерактивности карты\n  useEffect(() => {\n    if (!mapRef.current) return;\n\n    const svgDocument = mapRef.current;\n    const regions = svgDocument.querySelectorAll('.region');\n\n    regions.forEach((region) => {\n      const regionId = region.getAttribute('id');\n      \n      // Помечаем регионы с филиалами\n      if (regionId && regionsWithBranches.includes(regionId)) {\n        region.classList.add('available');\n      }\n\n      // Добавляем обработчики событий\n      region.addEventListener('mouseenter', handleRegionMouseEnter);\n      region.addEventListener('mouseleave', handleRegionMouseLeave);\n      region.addEventListener('mousemove', handleRegionMouseMove);\n      region.addEventListener('click', handleRegionClick);\n    });\n\n    // Очистка обработчиков при размонтировании\n    return () => {\n      regions.forEach((region) => {\n        region.removeEventListener('mouseenter', handleRegionMouseEnter);\n        region.removeEventListener('mouseleave', handleRegionMouseLeave);\n        region.removeEventListener('mousemove', handleRegionMouseMove);\n        region.removeEventListener('click', handleRegionClick);\n      });\n    };\n  }, []);\n\n  // Обработчики событий для регионов\n  const handleRegionMouseEnter = (e: Event) => {\n    const target = e.target as SVGPathElement;\n    const regionId = target.getAttribute('id');\n    const regionTitle = target.getAttribute('data-title') || regionId || '';\n    \n    if (regionId) {\n      setTooltipContent({\n        title: regionTitle,\n        regionCode: regionId\n      });\n      setShowTooltip(true);\n    }\n  };\n\n  const handleRegionMouseLeave = () => {\n    setShowTooltip(false);\n  };\n\n  const handleRegionMouseMove = (e: Event) => {\n    if (!mapRef.current) return;\n    \n    const mouseEvent = e as MouseEvent;\n    const svgRect = mapRef.current.getBoundingClientRect();\n    \n    // Рассчитываем позицию подсказки относительно SVG\n    setTooltipPosition({\n      x: mouseEvent.clientX - svgRect.left + 15,\n      y: mouseEvent.clientY - svgRect.top - 30,\n    });\n  };\n\n  const handleRegionClick = (e: Event) => {\n    const target = e.target as SVGPathElement;\n    const regionId = target.getAttribute('id');\n    \n    // Проверяем, есть ли филиал в этом регионе\n    if (regionId && regionsWithBranches.includes(regionId)) {\n      setSelectedRegion(regionId);\n      \n      // Находим филиал в выбранном регионе\n      const branch = branchesData.find(branch => branch.regionCode === regionId);\n      if (branch) {\n        setSelectedBranch(branch);\n      }\n    }\n  };\n\n  // Обработчик изменения выбора филиала в выпадающем списке\n  const handleBranchSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const branchId = parseInt(e.target.value);\n    const branch = branchesData.find(branch => branch.id === branchId);\n    \n    if (branch) {\n      setSelectedBranch(branch);\n      setSelectedRegion(branch.regionCode);\n      \n      // Выделяем выбранный регион на карте\n      if (mapRef.current) {\n        const regions = mapRef.current.querySelectorAll('.region');\n        regions.forEach(region => {\n          region.classList.remove('selected');\n          \n          if (region.getAttribute('id') === branch.regionCode) {\n            region.classList.add('selected');\n          }\n        });\n      }\n    }\n  };\n\n  return (\n    <div className=\"russia-map-container\">\n      <div className=\"interactive-map\">\n        <div className=\"map-container\">\n          <h2 className=\"map-title\">Наши филиалы на карте России</h2>\n          <p className=\"map-subtitle\">Выберите регион для просмотра информации о филиале</p>\n          \n          {/* Карта России */}\n          <svg\n            ref={mapRef}\n            className=\"russia-map\"\n            viewBox=\"0 0 1200 700\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <style>\n              {`\n              .region {\n                fill: rgba(230, 230, 240, 0.8);\n                stroke: #ffffff;\n                stroke-width: 1;\n                transition: all 0.3s ease;\n                cursor: default;\n              }\n              .region.available {\n                fill: rgba(30, 120, 190, 0.8);\n                cursor: pointer;\n              }\n              .region.available:hover {\n                fill: rgba(185, 160, 70, 0.9);\n                transform: scale(1.02);\n                transform-origin: center;\n                stroke: #ffffff;\n                stroke-width: 2;\n                filter: drop-shadow(0 0 5px rgba(255, 255, 255, 0.5));\n              }\n              .region.selected {\n                fill: rgba(185, 160, 70, 0.9);\n                stroke: #ffffff;\n                stroke-width: 2;\n              }\n              `}\n            </style>\n            \n            {/* Регионы России */}\n            <g id=\"russia-map\">\n              {/* Центральный федеральный округ */}\n              <path id=\"RU-MOS\" className=\"region\" data-title=\"Московская область\" d=\"M330,240 L350,220 L370,230 L365,250 L345,260 Z\" />\n              <path id=\"RU-MOW\" className=\"region\" data-title=\"Москва\" d=\"M335,235 L340,230 L345,235 L340,240 Z\" />\n              <path id=\"RU-BEL\" className=\"region\" data-title=\"Белгородская область\" d=\"M300,280 L320,270 L330,285 L320,295 L305,290 Z\" />\n              <path id=\"RU-BRY\" className=\"region\" data-title=\"Брянская область\" d=\"M290,270 L310,260 L320,270 L300,280 L280,275 Z\" />\n              <path id=\"RU-IVA\" className=\"region\" data-title=\"Ивановская область\" d=\"M370,230 L390,220 L400,235 L390,245 L370,240 Z\" />\n              <path id=\"RU-KLU\" className=\"region\" data-title=\"Калужская область\" d=\"M310,250 L330,240 L335,255 L325,260 L310,255 Z\" />\n              <path id=\"RU-KOS\" className=\"region\" data-title=\"Костромская область\" d=\"M380,210 L400,200 L410,215 L400,225 L380,220 Z\" />\n              <path id=\"RU-KRS\" className=\"region\" data-title=\"Курская область\" d=\"M310,290 L330,280 L340,295 L330,305 L310,300 Z\" />\n              <path id=\"RU-LIP\" className=\"region\" data-title=\"Липецкая область\" d=\"M340,275 L360,265 L370,280 L360,290 L340,285 Z\" />\n              <path id=\"RU-ORL\" className=\"region\" data-title=\"Орловская область\" d=\"M330,260 L350,250 L360,265 L340,275 L325,270 Z\" />\n              <path id=\"RU-RYA\" className=\"region\" data-title=\"Рязанская область\" d=\"M360,250 L380,240 L390,255 L380,265 L360,260 Z\" />\n              <path id=\"RU-SMO\" className=\"region\" data-title=\"Смоленская область\" d=\"M290,240 L310,230 L320,245 L310,250 L290,245 Z\" />\n              <path id=\"RU-TAM\" className=\"region\" data-title=\"Тамбовская область\" d=\"M350,285 L370,275 L380,290 L370,300 L350,295 Z\" />\n              <path id=\"RU-TUL\" className=\"region\" data-title=\"Тульская область\" d=\"M335,255 L355,245 L365,260 L355,270 L335,265 Z\" />\n              <path id=\"RU-TVE\" className=\"region\" data-title=\"Тверская область\" d=\"M320,220 L340,210 L350,225 L340,235 L320,230 Z\" />\n              <path id=\"RU-VLA\" className=\"region\" data-title=\"Владимирская область\" d=\"M370,240 L390,230 L400,245 L390,255 L370,250 Z\" />\n              <path id=\"RU-VOR\" className=\"region\" data-title=\"Воронежская область\" d=\"M360,290 L380,280 L390,295 L380,305 L360,300 Z\" />\n              <path id=\"RU-YAR\" className=\"region\" data-title=\"Ярославская область\" d=\"M350,210 L370,200 L380,215 L370,225 L350,220 Z\" />\n              \n              {/* Северо-Западный федеральный округ */}\n              <path id=\"RU-LEN\" className=\"region\" data-title=\"Ленинградская область\" d=\"M290,180 L320,150 L350,160 L340,190 L300,200 Z\" />\n              <path id=\"RU-SPE\" className=\"region\" data-title=\"Санкт-Петербург\" d=\"M300,175 L310,170 L315,180 L305,185 Z\" />\n              <path id=\"RU-KGD\" className=\"region\" data-title=\"Калининградская область\" d=\"M210,190 L230,180 L240,195 L230,205 L210,200 Z\" />\n              <path id=\"RU-KR\" className=\"region\" data-title=\"Республика Карелия\" d=\"M355,120 L385,105 L400,130 L380,145 L360,130 Z\" />\n              <path id=\"RU-KO\" className=\"region\" data-title=\"Республика Коми\" d=\"M410,140 L450,120 L470,150 L450,170 L420,160 Z\" />\n              <path id=\"RU-ARK\" className=\"region\" data-title=\"Архангельская область\" d=\"M380,120 L420,100 L450,130 L430,150 L390,140 Z\" />\n              <path id=\"RU-MUR\" className=\"region\" data-title=\"Мурманская область\" d=\"M350,80 L380,60 L400,85 L380,100 L350,90 Z\" />\n              <path id=\"RU-NEN\" className=\"region\" data-title=\"Ненецкий АО\" d=\"M450,90 L490,70 L520,100 L500,120 L450,110 Z\" />\n              <path id=\"RU-NGR\" className=\"region\" data-title=\"Новгородская область\" d=\"M320,200 L340,190 L350,205 L340,215 L320,210 Z\" />\n              <path id=\"RU-PSK\" className=\"region\" data-title=\"Псковская область\" d=\"M280,210 L300,200 L310,215 L300,225 L280,220 Z\" />\n              <path id=\"RU-VLG\" className=\"region\" data-title=\"Вологодская область\" d=\"M360,180 L380,170 L390,185 L380,195 L360,190 Z\" />\n              \n              {/* Южный федеральный округ */}\n              <path id=\"RU-AD\" className=\"region\" data-title=\"Республика Адыгея\" d=\"M240,360 L250,350 L260,360 L250,370 Z\" />\n              <path id=\"RU-AST\" className=\"region\" data-title=\"Астраханская область\" d=\"M380,350 L400,340 L410,355 L400,365 L380,360 Z\" />\n              <path id=\"RU-VGG\" className=\"region\" data-title=\"Волгоградская область\" d=\"M375,320 L395,310 L405,325 L395,335 L375,330 Z\" />\n              <path id=\"RU-ROS\" className=\"region\" data-title=\"Ростовская область\" d=\"M280,340 L300,330 L310,345 L300,355 L280,350 Z\" />\n              <path id=\"RU-KDA\" className=\"region\" data-title=\"Краснодарский край\" d=\"M225,350 L255,330 L280,345 L265,365 L230,360 Z\" />\n              <path id=\"RU-SEV\" className=\"region\" data-title=\"Севастополь\" d=\"M215,370 L220,365 L225,370 L220,375 Z\" />\n              <path id=\"RU-KRY\" className=\"region\" data-title=\"Республика Крым\" d=\"M200,360 L230,350 L240,370 L220,380 L200,370 Z\" />\n              <path id=\"RU-KL\" className=\"region\" data-title=\"Республика Калмыкия\" d=\"M340,340 L360,330 L370,345 L360,355 L340,350 Z\" />\n              \n              {/* Северо-Кавказский федеральный округ */}\n              <path id=\"RU-CE\" className=\"region\" data-title=\"Чеченская Республика\" d=\"M290,380 L300,375 L305,385 L295,390 Z\" />\n              <path id=\"RU-IN\" className=\"region\" data-title=\"Республика Ингушетия\" d=\"M285,375 L295,370 L300,380 L290,385 Z\" />\n              <path id=\"RU-KB\" className=\"region\" data-title=\"Кабардино-Балкарская Республика\" d=\"M275,370 L285,365 L290,375 L280,380 Z\" />\n              <path id=\"RU-KC\" className=\"region\" data-title=\"Карачаево-Черкесская Республика\" d=\"M260,370 L270,365 L275,375 L265,380 Z\" />\n              <path id=\"RU-DA\" className=\"region\" data-title=\"Республика Дагестан\" d=\"M310,370 L330,360 L340,375 L330,385 L310,380 Z\" />\n              <path id=\"RU-SE\" className=\"region\" data-title=\"Республика Северная Осетия\" d=\"M280,375 L290,370 L295,380 L285,385 Z\" />\n              <path id=\"RU-STA\" className=\"region\" data-title=\"Ставропольский край\" d=\"M290,345 L310,335 L320,350 L310,360 L290,355 Z\" />\n              \n              {/* Приволжский федеральный округ */}\n              <path id=\"RU-BA\" className=\"region\" data-title=\"Республика Башкортостан\" d=\"M470,250 L500,240 L510,255 L500,265 L470,260 Z\" />\n              <path id=\"RU-ME\" className=\"region\" data-title=\"Республика Марий Эл\" d=\"M410,240 L430,230 L440,245 L430,255 L410,250 Z\" />\n              <path id=\"RU-MO\" className=\"region\" data-title=\"Республика Мордовия\" d=\"M390,260 L410,250 L420,265 L410,275 L390,270 Z\" />\n              <path id=\"RU-KIR\" className=\"region\" data-title=\"Кировская область\" d=\"M430,200 L450,190 L460,205 L450,215 L430,210 Z\" />\n              <path id=\"RU-NIZ\" className=\"region\" data-title=\"Нижегородская область\" d=\"M390,230 L410,220 L420,235 L410,245 L390,240 Z\" />\n              <path id=\"RU-ORE\" className=\"region\" data-title=\"Оренбургская область\" d=\"M450,280 L470,270 L480,285 L470,295 L450,290 Z\" />\n              <path id=\"RU-PNZ\" className=\"region\" data-title=\"Пензенская область\" d=\"M400,270 L420,260 L430,275 L420,285 L400,280 Z\" />\n              <path id=\"RU-PER\" className=\"region\" data-title=\"Пермский край\" d=\"M480,200 L510,190 L520,205 L510,215 L480,210 Z\" />\n              <path id=\"RU-SAM\" className=\"region\" data-title=\"Самарская область\" d=\"M430,270 L450,260 L460,275 L450,285 L430,280 Z\" />\n              <path id=\"RU-SAR\" className=\"region\" data-title=\"Саратовская область\" d=\"M420,290 L440,280 L450,295 L440,305 L420,300 Z\" />\n              <path id=\"RU-TA\" className=\"region\" data-title=\"Республика Татарстан\" d=\"M440,230 L460,220 L470,235 L460,245 L440,240 Z\" />\n              <path id=\"RU-UD\" className=\"region\" data-title=\"Удмуртская Республика\" d=\"M450,220 L470,210 L480,225 L470,235 L450,230 Z\" />\n              <path id=\"RU-ULY\" className=\"region\" data-title=\"Ульяновская область\" d=\"M410,260 L430,250 L440,265 L430,275 L410,270 Z\" />\n              <path id=\"RU-CU\" className=\"region\" data-title=\"Чувашская Республика\" d=\"M430,230 L450,220 L460,235 L450,245 L430,240 Z\" />\n              \n              {/* Уральский федеральный округ */}\n              <path id=\"RU-KGN\" className=\"region\" data-title=\"Курганская область\" d=\"M520,240 L540,230 L550,245 L540,255 L520,250 Z\" />\n              <path id=\"RU-SVE\" className=\"region\" data-title=\"Свердловская область\" d=\"M530,220 L550,210 L560,225 L550,235 L530,230 Z\" />\n              <path id=\"RU-TYU\" className=\"region\" data-title=\"Тюменская область\" d=\"M550,190 L580,180 L590,195 L580,205 L550,200 Z\" />\n              <path id=\"RU-CHE\" className=\"region\" data-title=\"Челябинская область\" d=\"M530,240 L550,230 L560,245 L550,255 L530,250 Z\" />\n              <path id=\"RU-KHM\" className=\"region\" data-title=\"Ханты-Мансийский АО\" d=\"M570,160 L600,150 L610,165 L600,175 L570,170 Z\" />\n              <path id=\"RU-YAN\" className=\"region\" data-title=\"Ямало-Ненецкий АО\" d=\"M580,120 L610,110 L620,125 L610,135 L580,130 Z\" />\n              \n              {/* Сибирский федеральный округ */}\n              <path id=\"RU-ALT\" className=\"region\" data-title=\"Алтайский край\" d=\"M500,300 L520,290 L530,305 L520,315 L500,310 Z\" />\n              <path id=\"RU-AL\" className=\"region\" data-title=\"Республика Алтай\" d=\"M480,320 L500,310 L510,325 L500,335 L480,330 Z\" />\n              <path id=\"RU-BU\" className=\"region\" data-title=\"Республика Бурятия\" d=\"M650,300 L670,290 L680,305 L670,315 L650,310 Z\" />\n              <path id=\"RU-ZAB\" className=\"region\" data-title=\"Забайкальский край\" d=\"M700,280 L720,270 L730,285 L720,295 L700,290 Z\" />\n              <path id=\"RU-IRK\" className=\"region\" data-title=\"Иркутская область\" d=\"M650,240 L670,230 L680,245 L670,255 L650,250 Z\" />\n              <path id=\"RU-KEM\" className=\"region\" data-title=\"Кемеровская область\" d=\"M580,250 L600,240 L610,255 L600,265 L580,260 Z\" />\n              <path id=\"RU-KYA\" className=\"region\" data-title=\"Красноярский край\" d=\"M620,220 L640,210 L650,225 L640,235 L620,230 Z\" />\n              <path id=\"RU-NVS\" className=\"region\" data-title=\"Новосибирская область\" d=\"M580,230 L600,220 L610,235 L600,245 L580,240 Z\" />\n              <path id=\"RU-OMS\" className=\"region\" data-title=\"Омская область\" d=\"M540,230 L560,220 L570,235 L560,245 L540,240 Z\" />\n              <path id=\"RU-TOM\" className=\"region\" data-title=\"Томская область\" d=\"M590,210 L610,200 L620,215 L610,225 L590,220 Z\" />\n              <path id=\"RU-TY\" className=\"region\" data-title=\"Республика Тыва\" d=\"M600,270 L620,260 L630,275 L620,285 L600,280 Z\" />\n              <path id=\"RU-KK\" className=\"region\" data-title=\"Республика Хакасия\" d=\"M610,260 L630,250 L640,265 L630,275 L610,270 Z\" />\n              \n              {/* Дальневосточный федеральный округ */}\n              <path id=\"RU-AMU\" className=\"region\" data-title=\"Амурская область\" d=\"M780,260 L800,250 L810,265 L800,275 L780,270 Z\" />\n              <path id=\"RU-YEV\" className=\"region\" data-title=\"Еврейская АО\" d=\"M820,270 L835,265 L840,275 L830,280 Z\" />\n              <path id=\"RU-KAM\" className=\"region\" data-title=\"Камчатский край\" d=\"M900,200 L920,190 L930,205 L920,215 L900,210 Z\" />\n              <path id=\"RU-MAG\" className=\"region\" data-title=\"Магаданская область\" d=\"M850,170 L870,160 L880,175 L870,185 L850,180 Z\" />\n              <path id=\"RU-PRI\" className=\"region\" data-title=\"Приморский край\" d=\"M840,290 L860,280 L870,295 L860,305 L840,300 Z\" />\n              <path id=\"RU-KHA\" className=\"region\" data-title=\"Хабаровский край\" d=\"M820,230 L840,220 L850,235 L840,245 L820,240 Z\" />\n              <path id=\"RU-CHU\" className=\"region\" data-title=\"Чукотский АО\" d=\"M900,90 L930,70 L950,100 L930,110 L900,100 Z\" />\n              <path id=\"RU-SA\" className=\"region\" data-title=\"Республика Саха (Якутия)\" d=\"M750,150 L780,140 L790,155 L780,165 L750,160 Z\" />\n              <path id=\"RU-SAK\" className=\"region\" data-title=\"Сахалинская область\" d=\"M880,230 L890,225 L895,235 L885,240 Z\" />\n            </g>\n          </svg>\n          \n          {/* Всплывающая подсказка */}\n          {showTooltip && (\n            <div \n              ref={tooltipRef}\n              className=\"region-tooltip visible\"\n              style={{ left: `${tooltipPosition.x}px`, top: `${tooltipPosition.y}px` }}\n            >\n              <h4>{tooltipContent.title}</h4>\n              <p>\n                {regionsWithBranches.includes(tooltipContent.regionCode) \n                  ? 'Есть филиал. Нажмите для просмотра информации' \n                  : 'Нет филиала'}\n              </p>\n            </div>\n          )}\n        </div>\n        \n        {/* Секция со списком филиалов */}\n        <div className=\"branches-list\">\n          <h3 className=\"branch-title\">Наши филиалы</h3>\n          \n          <div className=\"branches-select-container\">\n            <select \n              className=\"select\"\n              onChange={handleBranchSelectChange}\n              value={selectedBranch?.id || ''}\n            >\n              <option value=\"\" disabled>Выберите филиал</option>\n              {branchesData.map(branch => (\n                <option key={branch.id} value={branch.id}>\n                  {branch.city} ({branch.regionName})\n                </option>\n              ))}\n            </select>\n          </div>\n          \n          {/* Информация о выбранном филиале */}\n          {selectedBranch && (\n            <div className=\"branch-details animate-fade-in\">\n              <div className=\"branch-detail-item\">\n                <div className=\"branch-detail-label\">Город:</div>\n                <div className=\"branch-detail-value\">{selectedBranch.city}</div>\n              </div>\n              \n              <div className=\"branch-detail-item\">\n                <div className=\"branch-detail-label\">Адрес:</div>\n                <div className=\"branch-detail-value\">{selectedBranch.address}</div>\n              </div>\n              \n              <div className=\"branch-detail-item\">\n                <div className=\"branch-detail-label\">Телефон:</div>\n                <div className=\"branch-detail-value\">\n                  <a href={`tel:${selectedBranch.phone}`}>{selectedBranch.phone}</a>\n                </div>\n              </div>\n              \n              <div className=\"branch-detail-item\">\n                <div className=\"branch-detail-label\">Email:</div>\n                <div className=\"branch-detail-value\">\n                  <a href={`mailto:${selectedBranch.email}`}>{selectedBranch.email}</a>\n                </div>\n              </div>\n              \n              <div className=\"branch-detail-item\">\n                <div className=\"branch-detail-label\">Режим работы:</div>\n                <div className=\"branch-detail-value\">{selectedBranch.workingHours}</div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InteractiveRussiaMap;","size_bytes":26310},"client/src/components/main-site/leasing-calculator.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Slider } from \"@/components/ui/slider\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Loader2, Calculator } from \"lucide-react\";\n\nexport const LeasingCalculator = () => {\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [inn, setInn] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n  // Leasing parameters\n  const [amount, setAmount] = useState(5000000);\n  const [leaseTerm, setLeaseTerm] = useState(36); // months\n  const [downPayment, setDownPayment] = useState(15); // percentage\n  \n  // Calculated values\n  const [monthlyPayment, setMonthlyPayment] = useState(0);\n  const [financeAmount, setFinanceAmount] = useState(0);\n  const [appreciationRate, setAppreciationRate] = useState(15); // percentage\n  \n  // Calculate lease payments\n  useEffect(() => {\n    const calcFinanceAmount = amount * (1 - downPayment / 100);\n    setFinanceAmount(calcFinanceAmount);\n    \n    // Simple calculation for demonstration purposes\n    const totalPayment = calcFinanceAmount * (1 + appreciationRate / 100);\n    const monthly = totalPayment / leaseTerm;\n    setMonthlyPayment(Math.round(monthly));\n  }, [amount, leaseTerm, downPayment, appreciationRate]);\n  \n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    \n    // Simulate form submission\n    setTimeout(() => {\n      setIsSubmitting(false);\n      alert(\"Заявка успешно отправлена!\");\n      // Reset form\n      setName(\"\");\n      setPhone(\"\");\n      setEmail(\"\");\n      setInn(\"\");\n      setComment(\"\");\n    }, 1500);\n  };\n  \n  const formatCurrency = (value: number) => {\n    return new Intl.NumberFormat(\"ru-RU\").format(value);\n  };\n\n  return (\n    <section id=\"calculator\" className=\"py-20 bg-background/50 relative overflow-hidden\">\n      {/* Subtle background effects for VisionOS look */}\n      <div className=\"absolute top-0 left-1/4 w-96 h-96 rounded-full bg-primary opacity-10 blur-3xl\"></div>\n      <div className=\"absolute bottom-0 right-1/4 w-96 h-96 rounded-full bg-primary opacity-10 blur-3xl\"></div>\n      \n      <div className=\"container mx-auto px-4 relative z-10\">\n        <div className=\"flex justify-center mb-16\">\n          <div className=\"text-center max-w-2xl\">\n            <Calculator className=\"h-12 w-12 text-primary mx-auto mb-4\" />\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-6\">Рассчитайте лизинг</h2>\n            <p className=\"text-muted-foreground text-lg\">\n              Узнайте примерный ежемесячный платеж и оставьте заявку на лизинг\n            </p>\n          </div>\n        </div>\n        \n        <Card className=\"glass backdrop-blur-lg p-6 md:p-8 rounded-xl bg-background/30 border-border shadow-lg\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              {/* Calculator Section */}\n              <div>\n                <h3 className=\"text-xl font-semibold mb-6\">Параметры лизинга</h3>\n                \n                <div className=\"space-y-6\">\n                  <div>\n                    <div className=\"flex justify-between mb-2\">\n                      <Label htmlFor=\"amount\">Стоимость имущества, ₽</Label>\n                      <span className=\"text-sm font-medium\">{formatCurrency(amount)} ₽</span>\n                    </div>\n                    <Slider \n                      id=\"amount\"\n                      value={[amount]} \n                      min={100000} \n                      max={100000000} \n                      step={100000}\n                      onValueChange={(value) => setAmount(value[0])}\n                      className=\"my-4\"\n                    />\n                    <div className=\"flex justify-between text-xs text-muted-foreground\">\n                      <span>100 000 ₽</span>\n                      <span>100 000 000 ₽</span>\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <div className=\"flex justify-between mb-2\">\n                      <Label htmlFor=\"term\">Желаемый срок лизинга, мес</Label>\n                      <span className=\"text-sm font-medium\">{leaseTerm} мес</span>\n                    </div>\n                    <Slider \n                      id=\"term\"\n                      value={[leaseTerm]} \n                      min={12} \n                      max={60} \n                      step={12}\n                      onValueChange={(value) => setLeaseTerm(value[0])}\n                      className=\"my-4\"\n                    />\n                    <div className=\"flex justify-between text-xs text-muted-foreground\">\n                      <span>1 год</span>\n                      <span>5 лет</span>\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <div className=\"flex justify-between mb-2\">\n                      <Label htmlFor=\"downPayment\">Авансовый платёж, %</Label>\n                      <span className=\"text-sm font-medium\">{downPayment}%</span>\n                    </div>\n                    <Slider \n                      id=\"downPayment\"\n                      value={[downPayment]} \n                      min={0} \n                      max={49} \n                      step={1}\n                      onValueChange={(value) => setDownPayment(value[0])}\n                      className=\"my-4\"\n                    />\n                    <div className=\"flex justify-between text-xs text-muted-foreground\">\n                      <span>0%</span>\n                      <span>49%</span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"p-6 glass backdrop-blur-sm bg-background/20 rounded-lg\">\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div>\n                        <p className=\"text-sm text-muted-foreground mb-1\">Ставка удорожания</p>\n                        <p className=\"text-2xl font-bold text-white\">{appreciationRate}%</p>\n                      </div>\n                      <div>\n                        <p className=\"text-sm text-muted-foreground mb-1\">Сроком на</p>\n                        <p className=\"text-2xl font-bold text-white\">{leaseTerm / 12} {leaseTerm / 12 === 1 ? 'год' : (leaseTerm / 12 < 5 ? 'года' : 'лет')}</p>\n                      </div>\n                      <div>\n                        <p className=\"text-sm text-muted-foreground mb-1\">Сумма финансирования</p>\n                        <p className=\"text-2xl font-bold text-white\">{formatCurrency(financeAmount)} ₽</p>\n                      </div>\n                      <div>\n                        <p className=\"text-sm text-muted-foreground mb-1\">Ежемесячный платёж</p>\n                        <p className=\"text-2xl font-bold text-white\">{formatCurrency(monthlyPayment)} ₽</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              {/* Contact Form Section */}\n              <div>\n                <h3 className=\"text-xl font-semibold mb-6\">Заполните форму для подачи заявки</h3>\n                \n                <div className=\"space-y-4\">\n                  <div>\n                    <Label htmlFor=\"name\">Ваше имя</Label>\n                    <Input \n                      id=\"name\" \n                      value={name} \n                      onChange={(e) => setName(e.target.value)}\n                      placeholder=\"Иван Иванов\" \n                      required\n                      className=\"mt-1 bg-background border-border\"\n                    />\n                  </div>\n                  \n                  <div>\n                    <Label htmlFor=\"phone\">Телефон</Label>\n                    <Input \n                      id=\"phone\" \n                      value={phone} \n                      onChange={(e) => setPhone(e.target.value)}\n                      placeholder=\"+7 (900) 123-45-67\" \n                      required\n                      className=\"mt-1 bg-background border-border\"\n                    />\n                  </div>\n                  \n                  <div>\n                    <Label htmlFor=\"email\">Электронная почта</Label>\n                    <Input \n                      id=\"email\" \n                      type=\"email\"\n                      value={email} \n                      onChange={(e) => setEmail(e.target.value)}\n                      placeholder=\"example@mail.ru\" \n                      required\n                      className=\"mt-1 bg-background border-border\"\n                    />\n                  </div>\n                  \n                  <div>\n                    <Label htmlFor=\"inn\">ИНН</Label>\n                    <Input \n                      id=\"inn\" \n                      value={inn} \n                      onChange={(e) => setInn(e.target.value)}\n                      placeholder=\"1234567890\"\n                      className=\"mt-1 bg-background border-border\"\n                    />\n                  </div>\n                  \n                  <div>\n                    <Label htmlFor=\"comment\">Комментарий</Label>\n                    <Textarea \n                      id=\"comment\" \n                      value={comment} \n                      onChange={(e) => setComment(e.target.value)}\n                      placeholder=\"Дополнительная информация\"\n                      className=\"mt-1 bg-background border-border\"\n                      rows={4}\n                    />\n                  </div>\n                  \n                  <Button \n                    type=\"submit\" \n                    className=\"w-full mt-4\"\n                    disabled={isSubmitting}\n                    size=\"lg\"\n                  >\n                    {isSubmitting ? (\n                      <>\n                        <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                        Отправка...\n                      </>\n                    ) : (\n                      'Оставить заявку'\n                    )}\n                  </Button>\n                  \n                  <p className=\"text-xs text-muted-foreground mt-4\">\n                    Нажимая кнопку \"Оставить заявку\", вы соглашаетесь с условиями обработки персональных данных\n                  </p>\n                </div>\n              </div>\n            </div>\n          </form>\n        </Card>\n      </div>\n    </section>\n  );\n};","size_bytes":11211},"client/src/components/main-site/partners-section.tsx":{"content":"import { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\n\ninterface Partner {\n  id: number;\n  name: string;\n  logo: string;\n  description: string;\n  website?: string;\n}\n\nexport const PartnersSection = () => {\n  const partners: Partner[] = [\n    {\n      id: 1,\n      name: \"ПАО Сбербанк\",\n      logo: \"/partners/sberbank.svg\",\n      description: \"Крупнейший банк в России, Центральной и Восточной Европе, один из ведущих международных финансовых институтов.\",\n      website: \"https://www.sberbank.ru\"\n    },\n    {\n      id: 2,\n      name: \"Банк ВТБ\",\n      logo: \"/partners/vtb.svg\",\n      description: \"Один из крупнейших участников российского рынка банковских услуг, предоставляющий широкий спектр услуг для корпоративных клиентов и частных лиц.\",\n      website: \"https://www.vtb.ru\"\n    },\n    {\n      id: 3,\n      name: \"Газпромбанк\",\n      logo: \"/partners/gazprombank.svg\",\n      description: \"Один из крупнейших универсальных финансовых институтов России, предоставляющий широкий спектр банковских, финансовых, инвестиционных продуктов и услуг.\",\n      website: \"https://www.gazprombank.ru\"\n    },\n    {\n      id: 4,\n      name: \"Альфа-Банк\",\n      logo: \"/partners/alfabank.svg\",\n      description: \"Крупнейший частный банк России, предоставляющий полный спектр услуг как для частных, так и для корпоративных клиентов.\",\n      website: \"https://www.alfabank.ru\"\n    },\n    {\n      id: 5,\n      name: \"Росбанк\",\n      logo: \"/partners/rosbank.svg\",\n      description: \"Универсальный банк, предоставляющий полный комплекс банковских услуг, часть международной финансовой группы.\",\n      website: \"https://www.rosbank.ru\"\n    },\n    {\n      id: 6,\n      name: \"Тинькофф Банк\",\n      logo: \"/partners/tinkoff.svg\",\n      description: \"Онлайн-банк, работающий без физических отделений, предлагающий полный спектр финансовых услуг для физических и юридических лиц.\",\n      website: \"https://www.tinkoff.ru\"\n    }\n  ];\n\n  return (\n    <section className=\"py-20 relative overflow-hidden\" id=\"partners\">\n      <div className=\"absolute bottom-40 right-20 w-96 h-96 rounded-full bg-primary opacity-5 blur-3xl\"></div>\n      \n      <div className=\"container mx-auto px-4 relative z-10\">\n        <div className=\"text-center max-w-2xl mx-auto mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold mb-6\">Наши партнеры</h2>\n          <p className=\"text-muted-foreground text-lg\">\n            Мы сотрудничаем с ведущими финансовыми институтами и поставщиками техники\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12\">\n          {partners.map((partner) => (\n            <Card key={partner.id} className=\"p-6 glass backdrop-blur-sm bg-background/30 flex flex-col h-full\">\n              <div className=\"h-20 mb-6 flex items-center justify-center\">\n                <div className=\"h-16 w-48 bg-white/70 rounded-md flex items-center justify-center\">\n                  {/* Этот блок имитирует логотип, в реальном проекте будет использоваться настоящий логотип */}\n                  <div className=\"text-xl font-bold text-gray-700\">{partner.name}</div>\n                </div>\n              </div>\n              \n              <h3 className=\"text-xl font-semibold mb-3\">{partner.name}</h3>\n              <p className=\"text-muted-foreground mb-6 flex-grow\">{partner.description}</p>\n              \n              {partner.website && (\n                <Button variant=\"glass-outline\" className=\"mt-auto\" asChild>\n                  <a href={partner.website} target=\"_blank\" rel=\"noopener noreferrer\">\n                    Посетить сайт\n                  </a>\n                </Button>\n              )}\n            </Card>\n          ))}\n        </div>\n        \n        <div className=\"text-center\">\n          <p className=\"text-lg mb-6\">\n            Заинтересованы в сотрудничестве? Свяжитесь с нами для обсуждения возможностей партнерства.\n          </p>\n          <Button asChild size=\"lg\" variant=\"glass-primary\">\n            <Link href=\"/contacts\">\n              <a>Стать партнером</a>\n            </Link>\n          </Button>\n        </div>\n      </div>\n    </section>\n  );\n};","size_bytes":5176},"client/src/components/main-site/russia-map.css":{"content":"svg {\n  width: 100%;\n  height: auto;\n  background-color: transparent;\n  display: block;\n}\n\n.map-container {\n  position: relative;\n  border: none;\n  overflow: visible;\n  width: 100%;\n  max-width: 100%;\n}\n\n.region {\n  fill: white;\n  stroke: #333;\n  stroke-width: 0.5;\n  transition: fill 0.3s ease;\n}\n\n.region:hover {\n  fill: #b87333; /* Цвет при наведении для обычных регионов */\n  cursor: pointer;\n}\n\n.region.has-branch {\n  fill: #b4a046; /* Фирменный цвет для регионов с филиалами */\n}\n\n.region.has-branch:hover {\n  fill: #c5b057; /* Более светлый оттенок фирменного цвета при наведении */\n}\n\n.region.selected {\n  stroke-width: 2;\n  stroke: white;\n  fill: #c5b057; /* Светлый вариант фирменного цвета для выбранного региона */\n  filter: drop-shadow(0 0 5px rgba(180, 160, 70, 0.5));\n}\n\n/* Подсветка крайних границ регионов */\n.boundary-regions path {\n  stroke: #b4a046;\n  stroke-width: 1.5;\n  fill: none;\n  filter: drop-shadow(0 0 3px rgba(180, 160, 70, 0.8));\n}\n\n.map-tooltip {\n  position: absolute;\n  background-color: rgba(255, 255, 255, 0.95);\n  border: 1px solid rgba(180, 160, 70, 0.5);\n  padding: 8px 12px;\n  border-radius: 6px;\n  pointer-events: none;\n  font-size: 14px;\n  z-index: 100;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1), 0 0 5px rgba(180, 160, 70, 0.3);\n  transition: all 0.2s ease;\n  min-width: 120px;\n  text-align: center;\n}\n\n.no-branch-popup {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(255, 255, 255, 0.95);\n  border: 1px solid rgba(180, 160, 70, 0.5);\n  padding: 15px 20px;\n  border-radius: 8px;\n  text-align: center;\n  z-index: 200;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15), 0 0 10px rgba(180, 160, 70, 0.3);\n  max-width: 300px;\n  font-weight: 500;\n  color: #333;\n  animation: popup 0.3s ease-out;\n}\n\n@keyframes popup {\n  from {\n    opacity: 0;\n    transform: translate(-50%, -40%);\n  }\n  to {\n    opacity: 1;\n    transform: translate(-50%, -50%);\n  }\n}\n\n.popup-close {\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  background: none;\n  border: none;\n  font-size: 18px;\n  color: #666;\n  cursor: pointer;\n  padding: 0;\n  line-height: 1;\n}\n\n.popup-close:hover {\n  color: #333;\n}\n\n.animate-fade-in {\n  animation: fadeIn 0.4s ease-in-out;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.has-branch {\n  color: #b4a046;\n  font-weight: 600;\n  margin-top: 3px;\n}\n\n.branch-info-card {\n  border: 1px solid var(--border);\n  border-radius: 0.5rem;\n  padding: 1.25rem;\n  background-color: var(--card);\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);\n  margin-bottom: 1.5rem;\n}\n","size_bytes":2883},"client/src/components/main-site/russia-map.tsx":{"content":"import { useRef, useState, useEffect } from 'react';\nimport './russia-map.css';\n\ninterface Region {\n  id: string;\n  name: string;\n  code: string;\n  city: string;\n  address: string;\n  phone: string;\n  email: string;\n}\n\ninterface RussiaMapProps {\n  regions: Region[];\n  onRegionSelect: (region: Region) => void;\n}\n\nexport const RussiaMap = ({ regions, onRegionSelect }: RussiaMapProps) => {\n  const [hoveredRegion, setHoveredRegion] = useState<string | null>(null);\n  const [selectedRegionId, setSelectedRegionId] = useState<string | null>(null);\n  const mapRef = useRef<SVGSVGElement>(null);\n\n  const handleRegionHover = (regionCode: string, isHovering: boolean) => {\n    if (isHovering) {\n      setHoveredRegion(regionCode);\n    } else {\n      setHoveredRegion(null);\n    }\n  };\n\n  const handleRegionClick = (regionCode: string) => {\n    const region = regions.find(r => r.code === regionCode);\n    if (region) {\n      setSelectedRegionId(region.id);\n      onRegionSelect(region);\n    }\n  };\n  \n  const getRegionByCode = (code: string) => {\n    return regions.find(r => r.code === code);\n  };\n\n  // Добавляет обработчики событий к регионам карты\n  useEffect(() => {\n    if (mapRef.current) {\n      const mapRegions = mapRef.current.querySelectorAll('.region');\n      \n      mapRegions.forEach(region => {\n        const regionCode = region.getAttribute('data-code');\n        if (!regionCode) return;\n        \n        // Проверяем, что в наших данных есть такой регион\n        const matchedRegion = getRegionByCode(regionCode);\n        if (!matchedRegion) {\n          region.classList.add('disabled');\n          return;\n        }\n        \n        region.classList.add('enabled');\n        \n        region.addEventListener('mouseenter', () => handleRegionHover(regionCode, true));\n        region.addEventListener('mouseleave', () => handleRegionHover(regionCode, false));\n        region.addEventListener('click', () => handleRegionClick(regionCode));\n      });\n      \n      // Выделяем выбранный регион, если есть\n      if (selectedRegionId) {\n        const selectedRegion = regions.find(r => r.id === selectedRegionId);\n        if (selectedRegion) {\n          const svgRegion = mapRef.current.querySelector(`[data-code=\"${selectedRegion.code}\"]`);\n          if (svgRegion) {\n            svgRegion.classList.add('selected');\n          }\n        }\n      }\n      \n      return () => {\n        mapRegions.forEach(region => {\n          const regionCode = region.getAttribute('data-code');\n          if (!regionCode) return;\n          \n          region.removeEventListener('mouseenter', () => handleRegionHover(regionCode, true));\n          region.removeEventListener('mouseleave', () => handleRegionHover(regionCode, false));\n          region.removeEventListener('click', () => handleRegionClick(regionCode));\n        });\n      };\n    }\n  }, [regions, selectedRegionId, onRegionSelect]);\n\n  return (\n    <div className=\"russia-map-container\">\n      <div className=\"district-tooltip\" style={{ display: hoveredRegion ? 'block' : 'none' }}>\n        <b>{getRegionByCode(hoveredRegion || '')?.city || ''}</b>\n        <span>{getRegionByCode(hoveredRegion || '')?.name || ''}</span>\n      </div>\n      \n      <svg \n        ref={mapRef}\n        xmlns=\"http://www.w3.org/2000/svg\" \n        xmlnsXlink=\"http://www.w3.org/1999/xlink\" \n        viewBox=\"0 0 1200 630\" \n        preserveAspectRatio=\"xMidYMid meet\"\n        className=\"russia-map\"\n      >\n        {/* Здесь будут отрисованы регионы из SVG */}\n        <path className=\"region-path szfo avt\" data-id=\"enabled heyo\" data-title=\"Ненецкий автономный округ\" data-code=\"RU-NEN\" d=\"M207.4,112.8058h-3.3541l-2.6833,2.6833.6708,2.6833,3.3541.6708h.6708l.6708-.6708H207.4l.6708-.6708v.6708h0l-.6708.6708h.6708l.6708-.6708v-2.6833Z\" />\n        <path className=\"region-path dfo krai\" data-id=\"enabled heyo\" data-title=\"Забайкальский край\" data-code=\"RU-ZAB\" d=\"M452.9241,273.1341l-2.0125-.6708L449.57,273.805l1.3417,1.3417-.6708.6708H449.57V277.83h-.6708v.6708l.6708,4.6958h1.3417v4.025h-.6708l-.6708-.6708-1.3417,1.3417-.6708.6708-1.3417-.6708h-.6708l-3.3541.6708v1.3417l-.6708.6708h.6708l.6708.6708.6708.6708V293.93l.671,1.3415h0v.6708h0l.6708,1.3417v2.6833l2.0125,1.3417,3.3541,2.6833v4.6959l-1.3417.6708h-1.3417l-1.3415.6707-\" />\n        <path className=\"region-path pfo resp\" data-id=\"enabled heyo\" data-title=\"Республика Башкортостан\" data-code=\"RU-BA\" d=\"M162.4549,230.8719l-.6708-.6708V229.53h-2.0125l-2.0125-.6708-2.0125.6708-2.0125.6708-1.3417.6708-1.3416-.6708-2.6833,1.3417-2.6833.6708-.6708-.6708v.6708l-.6708.6708h0l.6708.6708v1.3417l-.6708,1.3417-.6708.6708H142.33v.6708l-.6708,1.3417-1.3417,2.6833h0l-.6708,2.0125v4.025l.6708.6708.6708.6708h0v.6708l.6708.6708h.6708l-.6708,2.0125V253.68l.6708,1.3417v.6708\" />\n        <path className=\"region-path cfo obl\" data-id=\"enabled\" data-title=\"Белгородская область\" data-code=\"RU-BEL\" d=\"M61.2266,210.747l1.0733-.6708.1342-1.3417-.6037-1.3417-.6037-.6708-4.025-2.0125-3.1529-1.3417-.7379-.6709-.6037-1.3416h-2.415l-1.2746-1.3417-2.415,4.025.8721.6708,1.3417,1.3417.3354,1.3417.47,1.3417.0671.6708,2.2137.6708,2.1467,1.3417H53.78l-.47,2.6833v2.0125l.8721.6708.8721-.6708.805,2.6833,1.61,2.6833.47-.6708.6037-.6708.6708-1.3417,1.0062-2.0125h.6708l.6708-.6708-.\" />\n        <path className=\"region-path szfo obl\" data-id=\"enabled heyo\" data-title=\"Мурманская область\" data-code=\"RU-MUR\" d=\"M159.7715,66.5186v.3354L158.43,67.86l-2.0125-.805-1.3417-.47-.6708.5367-1.3417.7379-.6708-1.0733-.6708-.0671-1.3417-.2012V67.86l-2.6833,1.3417-2.0125,2.6833v1.3417l-.6708,3.3542-.6708,2.6833-2.0125.6708h-2.6833l-4.025,3.3541,2.6833,3.3541,2.6833,3.3542-.6708,2.0124.6708,2.0125,2.0125-.6708.6708.6708h.6708l.6708.6708V92.01l.6708-1.3417V87.9851l1.3417,2.6833v.6708h-.6\" />\n        <path className=\"region-path dfo avtob\" data-id=\"enabled heyo\" data-title=\"Еврейская автономная область\" data-code=\"RU-YEV\" d=\"M552.8777,336.1921h-2.0125l-1.3416-.6711-.6709,0-2.0125-2.0125-.6708-.6708h-1.3417l-1.3417.6708-1.3417-.6708h-1.3417l-.6708,1.3417-.6708.6708H538.79l-2.6833,1.3417-.6708.6708-.6708,2.0125-.6708,1.3417V342.9l.6708.6708,1.3417,1.3417v1.3417l.6708,1.3417.6708.6708.6708.6708h0l1.3417.6708,1.3417-.6708h.6708l4.025-2.0125H546.84l.6708-1.3417V344.242l1.\" />\n        <path className=\"region-path szfo resp\" data-id=\"enabled heyo\" data-title=\"Республика Коми\" data-code=\"RU-KO\" d=\"M210.0838,145.0057l-4.025-3.3541-3.3542-2.6833h-2.6833l-.6708-.6708-.6708.6708-1.3417.6708-5.3666-.6708h-4.6958l-2.0125,2.6833-2.0125,2.6833-.6708,2.0125h1.3417l.6708.6708-.6708,2.0125-.6708,2.0125.6708,1.3417v.6708l-.6708.6708-.6708.6708-.6708-.6708-1.3417-1.3417h-.6708l-.6708.6708-.6708-.6708v-.6708h-.6708l-1.3417.6708-.6708-1.3416-1.3417,1.3416-.6708-.6708v-2.0125l-4.6\" />\n        <path className=\"region-path skfo resp\" data-id=\"enabled heyo\" data-title=\"Республика Ингушетия\" data-code=\"RU-IN\" d=\"M47.4746,283.8674l-.5367-.6708h-.8721l-.2012-.6708h-.3354l-1.0733,1.3417-.7379,1.3417.6708.6708-.5367,2.0125-.7379.6708,1.8783.6708,2.1467-.6708h0l.2683-.6708h.1342l1.4087-2.6833-1.4758-1.3417Z\" />\n        <path className=\"region-path pfo krai\" data-id=\"enabled heyo\" data-title=\"Пермский край\" data-code=\"RU-PER\" d=\"M179.2256,193.3054l-1.3417-1.3417-1.3416-2.0126-1.3417.6709-1.2144-.81-.7981-.5319.6708-1.3417-1.3417-1.3417h-1.3417l-4.025-1.3417L165.809,188.61l.6708,2.0125-1.3417.6708,2.6833,2.6832,2.6833,2.0126-2.0125,2.6832-3.3541,2.0126v2.0125l1.3417,1.3417-.6708.6708-.6708,2.0125-1.3417.6708-.6708,1.3417-2.0125,6.0375-2.6833,6.0375-.6708.6708-.6708-.6708v.6708l-.6708.6708h-.6708l-.670\" />\n        <path className=\"region-path cfo obl\" data-id=\"enabled heyo\" data-title=\"Рязанская область\" data-code=\"RU-RYA\" d=\"M92.6886,189.9513l-1.3417-.6708v.6708l-3.9882-.04-1.3785.7108h-.6567l-.6849-.6708-.6708.6708-1.3417.6708H81.687L78.4,196.66l.47,1.3417v1.3417h1.4758l1.5429.6708-.2013,1.3417.2683,1.3417,1.3417.6708h2.0125l.6708,1.3417.6708.6708h1.3417l.6708-.6708,3.3541,2.0125h1.3417l.5378-.2688.8039-.402h0V205.38l.6708.6708h1.3417l-.6708-1.3417-1.3229-.37,1.3229-.3h1.3417l.6708-.6708,\" />\n        <path className=\"region-path cfo obl\" data-id=\"enabled\" data-title=\"Смоленская область\" data-code=\"RU-SMO\" d=\"M76.9912,164.46l-2.5492-.6708-3.5554-.6708L68.27,159.7639,65.4529,156.41l-.9392-1.3417H63.105l-.8721.6708-1.4758,1.3417-2.0125,2.0125H57.47l-.0671,1.3417.1342.6708h.2012l.0671.6708h-.6037l-.6708.6708-.6037,1.3417-.2683,2.0125.2683,1.3417-.0671.6708-.6708.6708-.805.6708.4025.6708.7379.6708.2012,2.0125-.6708.6708.1342,1.3417-.2683.6708h1.4758l.6708-.6708h2.3479l2.3479-.6708\" />\n        <path className=\"region-path dfo resp\" data-id=\"enabled heyo\" data-title=\"Республика Бурятия\" data-code=\"RU-BU\" d=\"M430.7867,291.2465h-1.3417l-1.3417-1.3417v-1.3417l-1.3417.6706-1.3417,0h-2.0125l-.6708-.6708-.6708-.6708-.6708,1.3417-2.0125,1.3417h-3.3541l-.6708-.6708h-.6708v-.6708l-.6708-.671-1.3417,1.3419-.6708,1.3417h-.6708l-.6708-.6708-2.0125,1.3414-1.3417,1.3419.6708,3.3541H409.32v1.3417l1.3417.6708.6708,1.3417h-1.3417l-.6708,1.3414-.6708,5.3668.6708,5.3666,2.0125-7.3791,1.34\" />\n        <path className=\"region-path sbfo obl\" data-id=\"enabled heyo\" data-title=\"Иркутская область\" data-code=\"RU-IRK\" d=\"M405.966,224.8344h-2.0125v2.6833h-.6708l-1.3417.6708-.6708.6708-.6708.6708h0l-1.3416-1.3418-.6149.3074-.7269.3635v.6708h0l-1.3417,3.3541-.6708,3.3541.6708,1.3417.6708,2.0125-.6708.6708-.6708,1.3417.6708.6708v1.3417l-2.6833,3.3541-3.2253,3.2253-1.47.1288-.6708.6708v.6708h0l-.6708,3.3541,1.3417,5.3666,2.0125.6708,1.3417,1.3417v2.6833H390.537v.6708l-.6708.6708-.6708.6708\" />\n        <path className=\"region-path cfo obl\" data-id=\"enabled heyo\" data-title=\"Липецкая область\" data-code=\"RU-LIP\" d=\"M78.4,196.66H77.3266l-.8721.6708H75.3812l-.5367.6708-.2683.6708H73.3016l-.8721-.6708-1.14-1.3417-2.8175,1.3417-.4025,1.3417-.3354.6708.0671.6708L67.6,202.0262l-.805-.6708-2.2137.6708.4025,1.3417,1.2746,1.3417,1.8783.6708,1.61.6708v.6708h-.0671l.6037.6708h.805l.6037,1.3417-.2012.6708,1.6771,1.3417,1.8112,2.0125,1.2746-.6708,1.0733-.6708-.6708-4.025,2.3479-2.6833,2.9516-2.\" />\n        <path className=\"region-path skfo krai\" data-id=\"enabled heyo\" data-title=\"Ставропольский край\" data-code=\"RU-STA\" d=\"M48.4809,258.3759l.4025-.6708-.2012-.6708H47.81l-.805.6708-.1342-.6708.0671-.6708h-.6708l-.47-.6708-1.14-1.3417-1.3417-.6708-.3354,1.3417-.3354.6708-1.2075-.6708-1.0062-.6708-.8721,1.3417-.5367,2.0125.6037,2.0125-.4025,1.3417.5367.6708-1.0062,1.3417-1.0733.6708-.2683-.6708h-.3354l.0671,2.6833,1.0733,1.3417.8721,2.0125h.9392l.8721.6708-.2683.6708H39.0893l-1.14.670\" />\n        <path className=\"region-path szfo obl\" data-id=\"enabled\" data-title=\"Новгородская область\" data-code=\"RU-NGR\" d=\"M86.6511,135.614v-.6708H84.6386l-1.3417.6708-.6708-1.3417-.9392-.6708-1.2746.6708H79.3391l-3.3541,1.3417.47,2.6833.6708,2.0125-.6038.6708h-.805l-.0671.6708-.1342.6708-2.0125.6708-.3354,1.3417L71.96,145.6765l.1342,1.3417.8721,1.3417.9392.6708,3.7567,1.3417,3.69.6708,1.2746,1.3417h.6708l2.0125-.6708,2.0125-.6708.6708-.6708.6708-.6708,2.0125,1.3417,1.3417,2.0125h.6708l.\" />\n        <path className=\"region-path sbfo obl\" data-id=\"enabled heyo\" data-title=\"Томская область\" data-code=\"RU-TOM\" d=\"M287.2292,243.6176h-2.0125l-1.3417-1.3417v-1.3416l-2.6833.6708h-2.6833l-1.3417-1.3417v-1.3417h-1.3417l-1.3417.6708-.6708-.6708-.6708-.6708-2.6833-.6708-2.6833-.6708-.6708-.6708h0l-.6709.6708.6709,1.3417-.6708,1.3417h-.6708l-.6708.6708-.6708,2.6833-2.0125,3.3541h-4.025L255.7,248.9843l-2.6833,2.6833V253.68h-.6708v2.0125h-.6708v.6708l.6708.6708v2.6833l.6708,1.3417v1.3417l-.6\" />\n        <path className=\"region-path urfo avt\" data-id=\"enabled heyo\" data-title=\"Ханты-Мансийский автономный округ - Югра\" data-code=\"RU-KHM\" d=\"M261.0669,209.4051l-1.3417-2.0125-3.3543.6711-3.3541-.6708V202.697l-1.3416-1.3419-.6709-1.3414v-2.0125l.6709-1.3419.6707-.6706-1.3417-1.3417h-.6708l-.6708-.6708v-.6708h-1.3417l-.6708.6708h-.6708l-2.0124-.6711-1.3418.6711-1.3417.6708h0l-2.0125-2.0125-1.3417-2.0125,1.3417-.6708.6708-.6708L239.6,188.61l-.6708-.6708-2.0125-1.3417-2\" />\n        <path className=\"region-path cfo obl\" data-id=\"enabled heyo\" data-title=\"Костромская область\" data-code=\"RU-KOS\" d=\"M126.23,171.168l-.6708-.6708h-.6708v-1.3417l-.6708.6708-.6708.6708-2.0125-.6708-2.0125-.6708-.6708.6708v.6708l-2.6833.6708-.6708,1.3417v.6708l-4.6958,2.0125-4.025,2.6833,4.6958,2.6833,1.3417-.6708.6708-.6708.6708,1.3417.6708,1.3417,1.3417.6708,1.3417.6708-.6708,1.3417-.6708.6708H118.18l1.3417,2.0125,2.6833,1.3417h2.6833l1.3417-1.3417.6708-.6708,2.0125,2.0125v1.3417\" />\n        <path className=\"region-path cfo obl\" data-id=\"enabled heyo\" data-title=\"Воронежская область\" data-code=\"RU-VOR\" d=\"M69.7462,206.722v-.6708l-1.61-.6708-1.8783-.6708h0l.1342.6708-.4025.6708v.6708H64.9833l-.8721-.6708-.7379,1.3417-.9392,1.3417L62.3,210.0761l-1.0733.6708.8721.6708h.9392l-.6708,1.3417h-.9392v2.0125l.1342,1.3417-.6708.6708H60.22l-1.0062,2.0125-.6708,1.3417-.6037.6708-.47.6708.7379,4.025,1.2075.6708.5367.6708,1.5429,1.3417,2.75.6708,2.8846-.6708.47-.6708h.5367l1.4758-\" />\n        <path className=\"region-path ufo resp\" data-id=\"enabled\" data-title=\"Республика Адыгея\" data-code=\"RU-AD\" d=\"M32.8506,253.68l-.3354-2.0125-1.8112.6708-2.2808-.6708L27.35,250.3259l-.6708-.6708-.5367.6708.2012.6708.3354.6708,1.2075,1.3417,1.0733,1.3417h.4025l.6037-1.3417h.7379l.47,2.0125-.2012,2.0125H29.4293l-1.5429,1.3416.1342,1.3417.2012.6708-.6708.6708h-.8721l.1342-.6708-.2683-.6708h-.5367l-.6708.6708-.2683.6708.805,2.0125,1.3417,1.3417,1.3417-.6708.8721-2.0125h.6037l.5367-.6708.\" />\n        <path className=\"region-path dfo obl\" data-id=\"enabled\" data-title=\"Сахалинская область\" data-code=\"RU-SAK\" d=\"M634.719,340.8879h0l-1.3417.6708h-1.3417V342.9l-.6708,2.6833-.6708,2.6833.6708.6708h.6708v-2.6833l.6708-2.6833,1.3417-1.3417.6708-.6708Zm4.025,4.6958v-1.3417l-.6708.6708-.6708.6708Zm4.6958-18.1124-.6708-1.3417h-.6708l-.6708,2.0125-.6708,1.3417h-2.6833v.6708l.6708.6708-.6708,1.3417-.6708,1.3417V334.85l-.6708,1.3417v1.3417l-.6708,1.3417.6708.6708.6708-3.3541.6708-.6708.67\" />\n        <path className=\"region-path ufo fed\" data-id=\"enabled\" data-title=\"Севастополь\" data-code=\"RU-SEV\" d=\"M3.4993,233.0826l-1.7006-1.1782L1.19,229.4813l2.0308-.9254Z\" />\n        <path className=\"region-path pfo obl\" data-id=\"enabled\" data-title=\"Самарская область\" data-code=\"RU-SAM\" d=\"M129.5842,229.53l-1.3417-2.0125-.6708,1.3416-1.3417,2.0125h-1.3417l-.6708.6708h0l-2.0125-1.3417-1.3417-1.3417h-1.3417l-1.3417-.6708h-.6708l-1.3417.6708h-2.0125l-1.3417,3.3541-1.3417,2.0125v.6708l.6708,1.3417V237.58l.6708.6708,1.3417.6708v2.0125h.6708v2.0125h0l.6708.6708.6708,2.6833.6708,2.0125,5.3666-.6708,2.0125-2.0125,2.6833-1.3417.6708-.6708h1.3417l1.3417-1.3417,1.3417-2\" />\n\n        {/* Добавьте остальные области из предоставленного SVG кода */}\n        \n        {/* Краснодарский край */}\n        <path className=\"region-path ufo krai\" data-id=\"enabled\" data-title=\"Краснодарский край\" data-code=\"RU-KDA\" d=\"M24.3175,242.276l-.6708-2.0125.6708-.6708.6708-1.3417h.6708l1.3417.6708h.6708l.6708-.6708v-2.0125l.6708-1.3417.6708-.6708h2.0125l.6708.6708v.6708l.6708.6708.6708-.6708v-.6708l.6708-1.3417h.6708v-.6708l-.6708-.6708v-.6708l-.6708-.6708-.6708-.6708.6708-1.3417,1.3417.6708,2.0125.6708,3.3541-2.0125,4.0249-2.0125,2.6833-1.3417.6708-.6708\" />\n        \n        {/* Челябинская область */}\n        <path className=\"region-path urfo obl\" data-id=\"enabled\" data-title=\"Челябинская область\" data-code=\"RU-CHE\" d=\"M213.438,216.122l-1.3417-2.0125-.6708-.6708-.6708-.6708-1.3417-.6708v-2.0125l-.6708-2.0125v-2.0125l-1.3417-2.0125-.6708-2.0125-2.0125.6708-2.0125.6708H200.74l-1.3417.6708h-.6708l-1.3417-.6708-.6708-.6708-1.3417.6708-1.3417.6708-.6708.6708-2.0125-1.3417-2.6833-.6708h-2.0125l-1.3417.6708-3.3541-.6708-2.0125,1.3417-.6708,2.0125-.6708,2.0125-.6708.6708-1.3417.6708h-.6708l-.6708.6708v2.0125l.6708.6708v.6708l-1.3417.6708-1.3417.6708-2.0125-.6708-2.0125-2.0125-2.0125-.6708-2.0125-2.0125\" />\n        \n        {/* Тюменская область */}\n        <path className=\"region-path urfo obl\" data-id=\"enabled\" data-title=\"Тюменская область\" data-code=\"RU-TYU\" d=\"M251.6749,232.8843h-2.0125l-1.3417-1.3417v-2.0125l-.6708-.6708-1.3417-1.3417h-2.0125L243.625,228.859v-.6708l1.3417-1.3417.6708-.6708v-2.0125l-.6708-.6708h-.6708l-2.0125-2.0125-2.0125-.6708-2.0125-.6708h-2.0125l-2.0125-1.3417-2.0125-2.0125-1.3417.6708-.6708.6708-2.0125-1.3417-2.0125-1.3417h-1.3417l-1.3417.6708-.6708-.6708H222.82l-1.3417.6708-1.3417.6708v2.0125l.6708,2.0125.6708,2.0125v2.0125l1.3417.6708.6708.6708.6708.6708,1.3417,2.0125,2.0125,2.0125v1.3417l-2.0125.6708-2.0125.6708-1.3417-1.3417-2.0125.6708-3.3541.6708h-2.0125l-1.3417-2.0125-1.3417-1.3417-2.6833-2.0125-4.025-.6708-4.025-.6708-3.3541-2.0125-1.3417-2.0125-2.0125-.6708-2.0125-.6708-4.025,3.3542-4.6958,3.3542-.6708-.6708\"/>\n        \n        {/* Ульяновская область */}\n        <path className=\"region-path pfo obl\" data-id=\"enabled\" data-title=\"Ульяновская область\" data-code=\"RU-ULY\" d=\"M148.3674,216.122v-1.3417l1.3417-1.3417.6708-.6708h.6708l.6708.6708h.6708l.6708.6708,1.3417-.6708.6708-1.3417-.6708-1.3417v-2.0125l1.3417-1.3417h0l.6708-.6708v-.6708l-.6708-.6708-.6708-.6708h-.6708l-.6708.6708h-.6708l-.6708-.6708v-.6708l-1.3417-.6708-1.3417-.6708-3.3541,1.3417-2.6833,2.0125-2.0125.6708-2.0125.6708-.6708.6708-.6708.6708-.6708-.6708h-.6708l-1.3417.6708-.6708-.6708v-2.0125l-.6708-2.0125-.6708-1.3417h-2.0125l-2.0125,1.3417-2.0125,2.0125-1.3417,1.3417-.6708.6708-.6708-.6708-.6708-.6708-1.3417.6708-1.3417.6708h-2.0125l-2.0125.6708-2.0125.6708-1.3417.6708v1.3417l1.3417,2.0125.6708,2.0125-.6708,2.0125v2.0125l.6708.6708.6708.6708h0v.6708l.6708.6708h.6708l-.6708,2.0125v2.0125l.6708,1.3417v.6708l-.6708.6708v.6708l.6708.6708.6708.6708h.6708l.6708-.6708,2.6833.6708,2.0125.6708,2.0125.6708\"/>\n        \n        {/* Нижегородская область */}\n        <path className=\"region-path pfo obl\" data-id=\"enabled\" data-title=\"Нижегородская область\" data-code=\"RU-NIZ\" d=\"M148.3674,185.2559l-1.3417-.6708-.6708-.6708-2.0125.6708-2.0125.6708-2.0125-1.3417-2.0125-1.3417h-1.3417l-1.3417.6708h-.6708l-.6708.6708h-2.0125l-2.0125.6708-2.0125.6708-2.0125-2.0125-2.0125-2.0125-.6708-.6708-3.3541.6708-2.6833.6708-2.6833,1.3417-2.0125,2.0125-.6708.6708-.6708-.6708-4.6958-2.0125-4.025-2.6833-.6708.6708-1.3417,2.0125-1.3417,2.0125-.6708.6708v.6708l-2.0125.6708-2.0125.6708h-.6708v.6708l.6708,1.3417v2.0125l-.6708.6708v.6708l-1.3417.6708-2.0125,4.6958-1.3417,4.025,2.6833,1.3417,2.6833.6708h.6708l.6708-.6708.6708.6708h.6708l.6708-.6708.6708.6708,2.0125-.6708,2.0125-.6708,2.0125,1.3417,2.0125,1.3417h1.3417l2.0125-.6708,2.0125-.6708,1.3417,2.0125.6708,2.0125,4.025-1.3417,3.3541-2.0125v-2.0125l-1.3417-1.3417h-.6708l-.6708-1.3417.6708-.6708.6708-1.3417v-2.0125l.6708-.6708h.6708l.6708.6708.6708-.6708.6708.6708h.6708l.6708-.6708\"/>\n        \n        {/* Ленинградская область */}\n        <path className=\"region-path szfo obl\" data-id=\"enabled\" data-title=\"Ленинградская область\" data-code=\"RU-LEN\" d=\"M99.3969,126.2232l-1.3417-1.3417-2.0125-1.3417h-.6708l-.6708.6708v.6708l-.6708.6708-1.3417-.6708-1.3417.6708H90.676l-1.3417.6708v.6708l-2.6833-.6708h-1.3417v.6708l1.3417,1.3417.6708,1.3417h-.6708l-.6708.6708h-.6708l-1.3417-.6708-1.3417-.6708h-2.0125l-.6708.6708-.6708.6708-2.6833-1.3417-2.6833-1.3417h-.6708l-.6708.6708-2.0125.6708-2.0125.6708h-.6708l-1.3417-1.3417-1.2746-.6708-.9392-1.3417-.1342-1.3417,1.7454-1.3417.3354-1.3417,2.0125-.6708.1342-.6708.0671-.6708h.805l.6037-.6708-.6708-2.0125-.47-2.6833,3.3541-1.3417h1.0733l1.2746-.6708.9392.6708.6708,1.3417,1.3417-.6708h2.0125v.6708l-2.0125,2.0125-2.0125,2.0125v2.0125l.6708,1.3417h.6708l.6708-.6708.6708-.6708.6708.6708h.6708l.6708-.6708.6708.6708h.6708l.6708-.6708,2.0125,1.3417,2.0125,1.3417.6708-.6708.6708-.6708h.6708l.6708.6708,2.0125-.6708,2.0125-.6708,1.3417,1.3417,1.3417,1.3417,2.0125-.6708,2.0125-.6708h.6708l.6708.6708\"/>\n        \n        {/* Тамбовская область */}\n        <path className=\"region-path cfo obl\" data-id=\"enabled\" data-title=\"Тамбовская область\" data-code=\"RU-TAM\" d=\"M92.6886,210.0761l-.6708-1.3417-.6708-1.3417,1.3229.3,1.3229.3707.6708,1.3417h-1.3417l-.6708-.6708v.6708h0l-.8039.402-.5379.2688Zm19.4541,1.3416-2.0125-2.0125-2.0125-2.0125h-.6708l-.6708.6708-2.0125.6708-2.0125.6708h-.6708l-.6708-.6708v-.6708l.6708-.6708.6708-1.3417-.6708-.6708-.6708-.6708-2.0125.6708-2.0125.6708h-.6708l-.6708.6708-1.3417-.6708h-1.3417l-.6708-.6708-.6708-1.3417h-2.0125l-1.3417-.6708-.2683-1.3417.2013-1.3417-1.5429-.6708H85.712v-1.3417l-.47-1.3417,3.287-4.6958h1.3417l1.3417-.6708.6708-.6708.6849.6708h.6567l1.3785-.7108,3.9882.04v-.6708l1.3417.6708.6708.6708,2.6833.6708,2.0125,2.0125V202.697h1.3417l1.3417.6708,2.0125-.6708,2.0125-.6708,1.3417.6708,1.3417.6708,2.0125-2.0125,2.0125-2.0125.6708-.6708\"/>\n      </svg>\n    </div>\n  );\n};","size_bytes":21603},"client/src/components/main-site/services-section.tsx":{"content":"import { Link } from \"wouter\";\nimport { Card } from \"@/components/ui/card\";\nimport { ArrowRight } from \"lucide-react\";\n\ntype ServiceCardProps = {\n  title: string;\n  href: string;\n  imageUrl: string;\n};\n\nconst ServiceCard = ({ title, href, imageUrl }: ServiceCardProps) => {\n  return (\n    <Link href={href}>\n      <div className=\"block group cursor-pointer\">\n        <Card className=\"overflow-hidden glass backdrop-blur-sm bg-background/30 transition-all duration-300 group-hover:shadow-xl border-border h-full\">\n          <div className=\"relative overflow-hidden aspect-[16/9]\">\n            <img \n              src={imageUrl} \n              alt={title} \n              className=\"w-full h-full object-cover transition-transform duration-500 ease-in-out group-hover:scale-110\" \n            />\n            <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 to-transparent\"></div>\n            <div className=\"absolute bottom-0 left-0 p-4\">\n              <h3 className=\"text-xl font-semibold text-white mb-2\">{title}</h3>\n              <div className=\"flex items-center text-primary opacity-0 transform translate-x-6 group-hover:opacity-100 group-hover:translate-x-0 transition-all duration-300\">\n                Подробнее <ArrowRight className=\"ml-2 h-4 w-4\" />\n              </div>\n            </div>\n          </div>\n        </Card>\n      </div>\n    </Link>\n  );\n};\n\nexport const ServicesSection = () => {\n  const services = [\n    {\n      title: \"Спецтехника\",\n      href: \"/services/spectechnika\",\n      imageUrl: \"https://www.investl.ru/upload/iblock/98a/f010903dlnn3hpojsb78yw2bxy01p6hq.jpg\"\n    },\n    {\n      title: \"Оборудование\",\n      href: \"/services/oborudovanie\",\n      imageUrl: \"https://www.investl.ru/upload/iblock/820/ihc8bc040ttyajj79ktclack2j5zxmtx.jpg\"\n    },\n    {\n      title: \"Недвижимость\",\n      href: \"/services/nedvijimost\",\n      imageUrl: \"https://www.investl.ru/upload/iblock/231/ltsbxmgv90651vmmryronip3dn320lns.jpg\"\n    },\n    {\n      title: \"Легковые и грузовые автомобили\",\n      href: \"/services/gruzovye-avtomobili\",\n      imageUrl: \"https://www.investl.ru/upload/iblock/cdf/vjhbwdw8m9e6emeb1jocekic37t4uhpj.jpg\"\n    }\n  ];\n\n  return (\n    <section id=\"services\" className=\"py-20 relative overflow-hidden\">\n      {/* Subtle background effects for VisionOS look */}\n      <div className=\"absolute top-40 left-40 w-96 h-96 rounded-full bg-primary opacity-5 blur-3xl\"></div>\n      <div className=\"absolute bottom-40 right-40 w-96 h-96 rounded-full bg-primary opacity-5 blur-3xl\"></div>\n      \n      <div className=\"container mx-auto px-4 relative z-10\">\n        <div className=\"text-center max-w-2xl mx-auto mb-16\">\n          <h2 className=\"text-3xl md:text-4xl font-bold mb-6\">Подбираем лизинговые продукты под каждого клиента</h2>\n          <p className=\"text-muted-foreground text-lg\">\n            ООО «ИНВЕСТ-лизинг» - надежный партнер для всех, кто стремится к успешному развитию своего бизнеса. \n            Наша команда нацелена на долгосрочные партнерские отношения с клиентами и всегда идет навстречу их потребностям.\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {services.map((service, index) => (\n            <ServiceCard \n              key={index}\n              title={service.title}\n              href={service.href}\n              imageUrl={service.imageUrl}\n            />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};","size_bytes":3771},"client/src/components/main-site/simple-russia-map.tsx":{"content":"import { useState, useEffect, useRef } from 'react';\nimport './russia-map.css';\n\ninterface Region {\n  id: string;\n  name: string;\n  code: string;\n  city: string;\n  address: string;\n  phone: string;\n  email: string;\n}\n\ninterface SimpleRussiaMapProps {\n  regions: Region[];\n  onRegionSelect: (region: Region) => void;\n}\n\nexport const SimpleRussiaMap = ({ regions, onRegionSelect }: SimpleRussiaMapProps) => {\n  const svgRef = useRef<SVGSVGElement>(null);\n  const [hoveredRegion, setHoveredRegion] = useState<string | null>(null);\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const mapContainerRef = useRef<HTMLDivElement>(null);\n  \n  // Найти регион по коду\n  const getRegionByCode = (code: string) => {\n    return regions.find(r => r.code === code);\n  };\n  \n  // Регионы, которые у нас есть в данных\n  const availableRegionCodes = regions.map(r => r.code);\n  \n  // Загрузка и обработка SVG карты\n  useEffect(() => {\n    const loadSvg = async () => {\n      try {\n        const response = await fetch('/russia_map.svg');\n        const svgText = await response.text();\n        \n        if (svgRef.current) {\n          svgRef.current.innerHTML = svgText;\n          \n          // Добавить классы и обработчики событий к регионам на карте\n          const svgElement = svgRef.current;\n          const regionElements = svgElement.querySelectorAll('path.region');\n          \n          regionElements.forEach(region => {\n            const regionCode = region.getAttribute('id');\n            \n            if (regionCode && availableRegionCodes.includes(regionCode)) {\n              region.classList.add('available');\n              \n              // Добавляем обработчики событий для доступных регионов\n              region.addEventListener('mouseenter', () => {\n                setHoveredRegion(regionCode);\n              });\n              \n              region.addEventListener('mouseleave', () => {\n                setHoveredRegion(null);\n              });\n              \n              region.addEventListener('click', () => {\n                const found = getRegionByCode(regionCode);\n                if (found) {\n                  onRegionSelect(found);\n                }\n              });\n            }\n          });\n          \n          // Убедимся, что SVG помещается внутри контейнера\n          if (mapContainerRef.current && svgElement) {\n            const containerRect = mapContainerRef.current.getBoundingClientRect();\n            const svgWidth = containerRect.width;\n            svgElement.style.maxWidth = `${svgWidth}px`;\n            svgElement.style.maxHeight = \"100%\";\n          }\n          \n          setMapLoaded(true);\n        }\n      } catch (error) {\n        console.error('Ошибка при загрузке SVG карты:', error);\n      }\n    };\n    \n    loadSvg();\n    \n    // Добавим обработчик изменения размера окна\n    const handleResize = () => {\n      if (mapContainerRef.current && svgRef.current) {\n        const containerRect = mapContainerRef.current.getBoundingClientRect();\n        const svgWidth = containerRect.width;\n        svgRef.current.style.maxWidth = `${svgWidth}px`;\n      }\n    };\n    \n    window.addEventListener('resize', handleResize);\n    \n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [regions, availableRegionCodes, onRegionSelect]);\n  \n  return (\n    <div className=\"simple-russia-map-container\" ref={mapContainerRef}>      \n      <div className=\"map-container\">\n        {/* Карта России в виде SVG */}\n        <div className=\"map-outline\">\n          <div className=\"map-background\">\n            <svg \n              ref={svgRef} \n              className={`russia-map ${mapLoaded ? 'loaded' : ''}`} \n              viewBox=\"0 0 1200 600\" \n              preserveAspectRatio=\"xMidYMid meet\"\n              style={{ maxWidth: \"100%\", height: \"auto\" }}\n            />\n            <div className=\"map-title\">Карта филиалов</div>\n          </div>\n          \n          {/* Метки городов */}\n          <div className=\"map-points\">\n            {mapLoaded && hoveredRegion && (\n              <div className=\"region-tooltip\">\n                {getRegionByCode(hoveredRegion)?.city || hoveredRegion}\n              </div>\n            )}\n            \n            {/* Точки для каждого региона на карте */}\n            {regions.map(region => (\n              <div\n                key={region.id}\n                className={`map-point ${hoveredRegion === region.code ? 'active' : ''}`}\n                style={getPointPosition(region.code)}\n                onMouseEnter={() => setHoveredRegion(region.code)}\n                onMouseLeave={() => setHoveredRegion(null)}\n                onClick={() => onRegionSelect(region)}\n              >\n                {hoveredRegion === region.code && (\n                  <div className=\"city-label\">\n                    {region.city}\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Функция для определения позиции точки на карте для каждого региона\nconst getPointPosition = (code: string): React.CSSProperties => {\n  // Координаты для каждого региона (в процентах от размера контейнера)\n  const coordinates: Record<string, { left: string; top: string }> = {\n    'RU-KDA': { left: '23%', top: '75%' },     // Краснодар\n    'RU-LEN': { left: '27%', top: '26%' },     // Санкт-Петербург\n    'RU-NIZ': { left: '35%', top: '46%' },     // Нижний Новгород\n    'RU-TAM': { left: '32%', top: '53%' },     // Тамбов\n    'RU-SAM': { left: '43%', top: '56%' },     // Тольятти\n    'RU-TYU': { left: '58%', top: '43%' },     // Тюмень\n    'RU-ULY': { left: '39%', top: '54%' },     // Ульяновск\n    'RU-BA': { left: '48%', top: '52%' },      // Уфа\n    'RU-CHE': { left: '52%', top: '48%' }      // Челябинск\n  };\n  \n  return coordinates[code] || { left: '50%', top: '50%' }; // Дефолтная позиция\n};","size_bytes":6421},"client/src/components/main-site/topo-russia-map.tsx":{"content":"import React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport './russia-map.css';\n\n// Типы для наших данных\ninterface Branch {\n  id: number;\n  city: string;\n  regionCode: string;\n  regionName: string;\n  address: string;\n  phone: string;\n  email: string;\n  workingHours: string;\n}\n\ninterface GeoFeature {\n  type: string;\n  properties: {\n    name: string;\n    name_latin?: string;\n    cartodb_id?: number;\n    created_at?: string;\n    updated_at?: string;\n  };\n  geometry: {\n    type: string;\n    coordinates: any;\n  };\n}\n\ninterface GeoJSON {\n  type: string;\n  bbox?: number[];\n  features: GeoFeature[];\n}\n\nconst RussiaMap: React.FC = () => {\n  // Создаем референсы для SVG и всплывающей подсказки\n  const svgRef = useRef<SVGSVGElement>(null);\n  const tooltipRef = useRef<HTMLDivElement>(null);\n  const mapContainerRef = useRef<HTMLDivElement>(null);\n  \n  // Состояния компонента\n  const [selectedRegion, setSelectedRegion] = useState<string | null>(null);\n  const [selectedBranch, setSelectedBranch] = useState<Branch | null>(null);\n  const [showNoBranchPopup, setShowNoBranchPopup] = useState<boolean>(false);\n  const [noBranchRegionName, setNoBranchRegionName] = useState<string>('');\n\n  // Карта соответствия имен регионов с их кодами\n  const regionNameToCode: {[key: string]: string} = {\n    'Краснодарский край': 'RU-KDA',\n    'Ленинградская область': 'RU-LEN',\n    'Нижегородская область': 'RU-NIZ',\n    'Тамбовская область': 'RU-TAM',\n    'Самарская область': 'RU-SAM',\n    'Тюменская область': 'RU-TYU',\n    'Ульяновская область': 'RU-ULY',\n    'Башкортостан': 'RU-BA',\n    'Бурятия': 'RU-BU',\n    'Челябинская область': 'RU-CHE'\n  };\n\n  // Список регионов с филиалами (имена регионов)\n  const regionsWithBranches = [\n    'Краснодарский край',\n    'Ленинградская область',\n    'Нижегородская область',\n    'Тамбовская область',\n    'Самарская область',\n    'Тюменская область',\n    'Ульяновская область',\n    'Башкортостан',\n    'Челябинская область'\n  ];\n\n  // Данные о филиалах\n  const branchesData: Branch[] = [\n    {\n      id: 1,\n      city: 'Краснодар',\n      regionCode: 'RU-KDA',\n      regionName: 'Краснодарский край',\n      address: 'г. Краснодар ул. Российская д. 388 офис 5',\n      phone: '+7 (919) 110-70-55',\n      email: 'il_uda@chelinvest.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 2,\n      city: 'Санкт-Петербург',\n      regionCode: 'RU-LEN',\n      regionName: 'Ленинградская область',\n      address: 'г. Санкт-Петербург, пр. Энергетиков, д. 4к1, БЦ Амбер Холл, оф. 1206',\n      phone: '+7 (921) 951-20-70',\n      email: 'd.chadaev@chelinvest.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 3,\n      city: 'Нижний Новгород',\n      regionCode: 'RU-NIZ',\n      regionName: 'Нижегородская область',\n      address: '603040, г. Нижний Новгород, проспект Союзный, д. 45, офис 11 (этаж 4), Бизнес центр \"Володарский\"',\n      phone: '+7 (919) 110-70-66',\n      email: 'g.fateeva@chelinvest.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 4,\n      city: 'Тамбов',\n      regionCode: 'RU-TAM',\n      regionName: 'Тамбовская область',\n      address: 'г. Тамбов, улица Мичуринская 146, оф 7',\n      phone: '+7 (919) 110-70-25',\n      email: 'o.korolev@chelinvest.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 5,\n      city: 'Тольятти',\n      regionCode: 'RU-SAM',\n      regionName: 'Самарская область',\n      address: '445030, Самарская обл., г. Тольятти, ул. 70 лет Октября, д.31А',\n      phone: '+7 (919) 110-70-15',\n      email: 'l.mironova@chelinvest.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 6,\n      city: 'Тюмень',\n      regionCode: 'RU-TYU',\n      regionName: 'Тюменская область',\n      address: '625007, г. Тюмень, ул. 30 лет Победы, д. 38А, офис 53',\n      phone: '+7 (3452) 39-34-83',\n      email: 'mihalaki@chelinvest.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 7,\n      city: 'Ульяновск',\n      regionCode: 'RU-ULY',\n      regionName: 'Ульяновская область',\n      address: '432072, г. Ульяновск, проспект Туполева, д. 31, стр. 1 (этаж 1), Бизнес центр \"Взлетный\"',\n      phone: '+7 (982) 370-04-26',\n      email: 'i.sandimirova@chelinvest.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 8,\n      city: 'Уфа',\n      regionCode: 'RU-BA',\n      regionName: 'Башкортостан',\n      address: 'Республика Башкортостан, г. Уфа, ул. Кирова, д.128, корпус 2, пом.4',\n      phone: '+7 (919) 110-70-06',\n      email: 'e.kochkurova@chelinvest.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n    {\n      id: 9,\n      city: 'Челябинск',\n      regionCode: 'RU-CHE',\n      regionName: 'Челябинская область',\n      address: '454084, г. Челябинск, проспект Победы, д. 147-A, 1 этаж',\n      phone: '+7 (351) 791-06-46',\n      email: 'il@chelinvest.ru',\n      workingHours: 'Пн-Пт: 9:00-18:00',\n    },\n  ];\n\n  useEffect(() => {\n    // Загрузка и инициализация карты\n    const initializeMap = async () => {\n      try {\n        console.log('Загружаю GeoJSON данные...');\n        const response = await fetch('/russia-geo.json');\n        \n        if (!response.ok) {\n          throw new Error(`HTTP ошибка! Статус: ${response.status}`);\n        }\n        \n        const geoData: GeoJSON = await response.json();\n        console.log('GeoJSON данные успешно загружены');\n        \n        if (svgRef.current) {\n          console.log('Рендерю карту...');\n          renderMap(geoData);\n        }\n\n        // Обработчик изменения размера окна\n        const handleResize = () => {\n          if (svgRef.current) {\n            renderMap(geoData);\n          }\n        };\n\n        window.addEventListener('resize', handleResize);\n        \n        // Очистка при размонтировании\n        return () => {\n          window.removeEventListener('resize', handleResize);\n        };\n      } catch (error) {\n        console.error('Ошибка при загрузке GeoJSON данных:', error);\n      }\n    };\n\n    initializeMap();\n  }, []);\n\n  // Закрыть попап\n  const closeNoBranchPopup = () => {\n    setShowNoBranchPopup(false);\n  };\n\n  // Рендеринг карты\n  const renderMap = (geoData: GeoJSON) => {\n    if (!svgRef.current) return;\n    \n    // Очищаем SVG\n    d3.select(svgRef.current).selectAll('*').remove();\n    \n    // Получаем фактический размер контейнера\n    const actualWidth = mapContainerRef.current?.offsetWidth || 800;\n    const aspectRatio = 1.8; // Более компактное соотношение сторон\n    const height = actualWidth / aspectRatio;\n    \n    // Масштабируем в зависимости от ширины контейнера\n    const baseScale = (actualWidth / 1182) * 600;\n    \n    // Корректируем центр для лучшего позиционирования карты России\n    const projection = d3.geoAlbers()\n      .rotate([-105, 0])\n      .center([0, 65]) // Смещаем центр выше для более компактной карты\n      .parallels([50, 70])\n      .scale(baseScale * 1.2) // Увеличиваем масштаб для заполнения пространства\n      .translate([actualWidth / 2, height / 2]); // Центрируем без дополнительного смещения\n    \n    // Создаем path генератор\n    const path = d3.geoPath().projection(projection);\n    \n    // Создаем адаптивный SVG контейнер\n    const svg = d3.select(svgRef.current)\n      .attr('width', '100%')\n      .attr('height', height)\n      .attr('viewBox', `0 0 ${actualWidth} ${height}`)\n      .style('max-width', '100%')\n      .style('height', 'auto')\n      .style('overflow', 'visible')\n      .attr('preserveAspectRatio', 'xMidYMid meet');\n    \n    // Добавляем группу для границ страны\n    const boundaryGroup = svg.append('g')\n      .attr('class', 'boundary-regions');\n    \n    // Создаем и стилизуем пути для регионов\n    svg.append('g')\n      .selectAll('.region')\n      .data(geoData.features)\n      .enter()\n      .append('path')\n      .attr('class', (d: any) => {\n        const regionName = d.properties.name;\n        return regionsWithBranches.includes(regionName) ? 'region has-branch' : 'region';\n      })\n      .attr('d', (d: any) => path(d) as string)\n      .attr('data-region', (d: any) => regionNameToCode[d.properties.name] || '')\n      .attr('data-name', (d: any) => d.properties.name)\n      .on('mouseover', function(event: any, d: any) {\n        // Отображаем всплывающую подсказку\n        if (tooltipRef.current) {\n          tooltipRef.current.style.visibility = 'visible';\n          tooltipRef.current.style.left = event.pageX + 10 + 'px';\n          tooltipRef.current.style.top = event.pageY - 20 + 'px';\n          tooltipRef.current.innerHTML = `\n            <div>${d.properties.name}</div>\n            ${regionsWithBranches.includes(d.properties.name) ? '<div class=\"has-branch\">Есть филиал</div>' : ''}\n          `;\n        }\n      })\n      .on('mousemove', function(event: any) {\n        if (tooltipRef.current) {\n          tooltipRef.current.style.left = event.pageX + 10 + 'px';\n          tooltipRef.current.style.top = event.pageY - 20 + 'px';\n        }\n      })\n      .on('mouseout', function(event: any, d: any) {\n        if (tooltipRef.current) {\n          tooltipRef.current.style.visibility = 'hidden';\n        }\n      })\n      .on('click', function(event: any, d: any) {\n        const regionName = d.properties.name;\n        \n        // Проверяем, есть ли филиал в регионе\n        if (regionsWithBranches.includes(regionName)) {\n          // Находим информацию о филиале по имени региона\n          const branch = branchesData.find(b => b.regionName === regionName);\n          \n          if (branch) {\n            setSelectedBranch(branch);\n            setSelectedRegion(branch.regionCode);\n            \n            // Удаляем класс selected со всех регионов и выделяем выбранный\n            d3.selectAll('.region').classed('selected', false);\n            d3.select(event.currentTarget).classed('selected', true);\n          }\n        } else {\n          // Показываем попап об отсутствии филиала\n          setNoBranchRegionName(regionName);\n          setShowNoBranchPopup(true);\n        }\n      });\n\n    // Добавляем границу всех регионов России (обводку)\n    // Создаем копию границ всех регионов для неоновой подсветки\n    boundaryGroup.append('path')\n      .datum({\n        type: 'FeatureCollection',\n        features: geoData.features\n      })\n      .attr('d', path as any)\n      .attr('class', 'russia-boundary');\n  };\n\n  // Обработчик изменения выбора филиала в выпадающем списке\n  const handleBranchSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const branchId = parseInt(e.target.value);\n    if (!branchId) {\n      setSelectedBranch(null);\n      setSelectedRegion(null);\n      \n      // Снимаем выделение со всех регионов\n      d3.selectAll('.region').classed('selected', false);\n      return;\n    }\n    \n    const branch = branchesData.find(branch => branch.id === branchId);\n    if (branch) {\n      setSelectedBranch(branch);\n      setSelectedRegion(branch.regionCode);\n      \n      // Удаляем выделение со всех регионов\n      d3.selectAll('.region').classed('selected', false);\n      \n      // Находим регион по имени и выделяем его\n      const regions = d3.selectAll('.region');\n      regions.each(function(d: any) {\n        if (d.properties.name === branch.regionName) {\n          d3.select(this).classed('selected', true);\n        }\n      });\n    }\n  };\n\n  return (\n    <div className=\"py-6\">\n      <div className=\"flex flex-col gap-8\">\n        {/* Заголовок и выпадающий список */}\n        <div className=\"mx-auto text-center\">\n          <h2 className=\"text-2xl font-bold mb-2\">Наши филиалы на карте России</h2>\n          <p className=\"text-sm text-muted-foreground mb-6\">\n            Выберите регион для просмотра информации о филиале\n          </p>\n        </div>\n        \n        <div className=\"flex flex-col lg:flex-row gap-6\">\n          {/* Левая колонка: селектор и информация о филиале */}\n          <div className=\"lg:w-1/3 flex flex-col gap-4\">\n            <div className=\"relative\">\n              <select \n                className=\"w-full p-3 rounded-md bg-background border border-input text-sm appearance-none pr-10\"\n                value={selectedBranch?.id || ''}\n                onChange={handleBranchSelectChange}\n              >\n                <option value=\"\">Выберите филиал</option>\n                {branchesData.map(branch => (\n                  <option key={branch.id} value={branch.id}>\n                    {branch.city} ({branch.regionName})\n                  </option>\n                ))}\n              </select>\n              <div className=\"absolute right-3 top-1/2 -translate-y-1/2 text-primary text-opacity-80 text-xs pointer-events-none\">▼</div>\n            </div>\n            \n            {selectedBranch && (\n              <div className=\"branch-info-card\">\n                <h4 className=\"text-lg font-medium text-primary\">{selectedBranch.city}</h4>\n                <div className=\"text-sm space-y-3 mt-4\">\n                  <p><span className=\"font-medium\">Регион:</span> {selectedBranch.regionName}</p>\n                  <p><span className=\"font-medium\">Адрес:</span> {selectedBranch.address}</p>\n                  <p><span className=\"font-medium\">Телефон:</span> <a href={`tel:${selectedBranch.phone}`} className=\"text-primary hover:underline\">{selectedBranch.phone}</a></p>\n                  <p><span className=\"font-medium\">Email:</span> <a href={`mailto:${selectedBranch.email}`} className=\"text-primary hover:underline\">{selectedBranch.email}</a></p>\n                  <p><span className=\"font-medium\">Режим работы:</span> {selectedBranch.workingHours}</p>\n                </div>\n              </div>\n            )}\n          </div>\n        \n          {/* Правая колонка: карта */}\n          <div className=\"lg:w-2/3 relative\">\n            <div className=\"map-container w-full\" ref={mapContainerRef} style={{ width: '100%', minHeight: '350px', overflow: 'visible' }}>\n              <svg ref={svgRef} className=\"w-full\"></svg>\n              <div \n                ref={tooltipRef} \n                className=\"map-tooltip\" \n                style={{ visibility: 'hidden' }}\n              ></div>\n              \n              {/* Попап об отсутствии филиала */}\n              {showNoBranchPopup && (\n                <div className=\"no-branch-popup\">\n                  <button className=\"popup-close\" onClick={closeNoBranchPopup}>×</button>\n                  <p>В регионе <strong>{noBranchRegionName}</strong> отсутствует филиал компании.</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RussiaMap;","size_bytes":16870},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"import * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1405},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground\",\n        outline: \"text-foreground\",\n        success: \"border-transparent bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-100\",\n        warning: \"border-transparent bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-100\",\n        info: \"border-transparent bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-100\",\n        neutral: \"border-transparent bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-100\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1475},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n        // Новые стеклянные варианты кнопок\n        glass: \"bg-[rgba(30,30,30,0.5)] backdrop-blur-md border border-[rgba(255,255,255,0.08)] text-white hover:bg-[rgba(40,40,40,0.6)] hover:border-[rgba(255,255,255,0.12)] hover:shadow-[0_8px_20px_rgba(0,0,0,0.2),0_0_30px_rgba(185,160,70,0.15)] hover:translate-y-[-2px]\",\n        \"glass-primary\": \"bg-[rgba(185,160,70,0.2)] backdrop-blur-md border border-[rgba(185,160,70,0.3)] text-white hover:bg-[rgba(185,160,70,0.3)] hover:border-[rgba(185,160,70,0.5)] hover:shadow-[0_8px_20px_rgba(0,0,0,0.2),0_0_30px_rgba(185,160,70,0.25)] hover:translate-y-[-2px]\",\n        \"glass-outline\": \"bg-[rgba(30,30,30,0.3)] backdrop-blur-md border border-[rgba(185,160,70,0.3)] text-white hover:bg-[rgba(40,40,40,0.4)] hover:border-[rgba(185,160,70,0.5)] hover:shadow-[0_8px_20px_rgba(0,0,0,0.2),0_0_30px_rgba(185,160,70,0.2)] hover:translate-y-[-2px]\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":2811},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ...props }) => <ChevronLeft className=\"h-4 w-4\" />,\n        IconRight: ({ ...props }) => <ChevronRight className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2609},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1877},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"import * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([_, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10466},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"import * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":315},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\ninterface CommandDialogProps extends DialogProps {}\n\nconst CommandDialog = ({ children, ...props }: CommandDialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4879},"client/src/components/ui/container.tsx":{"content":"import React from 'react';\n\ninterface ContainerProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const Container: React.FC<ContainerProps> = ({ children, className = \"\" }) => {\n  return (\n    <div className={`container mx-auto px-4 md:px-6 lg:px-8 ${className}`}>\n      {children}\n    </div>\n  );\n};\n\nexport default Container;","size_bytes":345},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7246},"client/src/components/ui/data-table.tsx":{"content":"import React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface DataTableHeader {\n  id: string;\n  label: string;\n  align?: \"left\" | \"center\" | \"right\";\n}\n\nexport interface DataTableProps<T> {\n  headers: DataTableHeader[];\n  data: T[];\n  renderRow: (item: T) => React.ReactNode;\n  className?: string;\n}\n\nexport function DataTable<T>({\n  headers,\n  data,\n  renderRow,\n  className,\n}: DataTableProps<T>) {\n  return (\n    <div className={cn(\"w-full overflow-x-auto\", className)}>\n      <table className=\"w-full\">\n        <thead>\n          <tr className=\"border-b border-border\">\n            {headers.map((header) => (\n              <th\n                key={header.id}\n                className={cn(\n                  \"p-3 font-medium text-muted-foreground\",\n                  header.align === \"center\" && \"text-center\",\n                  header.align === \"right\" && \"text-right\",\n                  header.align === \"left\" && \"text-left\"\n                )}\n              >\n                {header.label}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {data.length === 0 ? (\n            <tr>\n              <td\n                colSpan={headers.length}\n                className=\"py-12 text-center text-muted-foreground\"\n              >\n                Нет данных для отображения\n              </td>\n            </tr>\n          ) : (\n            data.map((item, index) => renderRow(item))\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}","size_bytes":1529},"client/src/components/ui/dialog.tsx":{"content":"import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3835},"client/src/components/ui/document-card.tsx":{"content":"\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Download, Eye, FileIcon, FileTextIcon, FileSpreadsheetIcon } from \"lucide-react\";\n\nexport interface Document {\n  id: number;\n  name: string;\n  date: string;\n  description: string;\n  fileSize: string;\n  fileType: string;\n  filePath?: string;\n}\n\nexport interface DocumentCardProps {\n  document: Document;\n  onPreview: () => void;\n  className?: string;\n}\n\nexport function DocumentCard({ document, onPreview, className }: DocumentCardProps) {\n  const { toast } = useToast();\n\n  const getFileIcon = () => {\n    if (document.fileType.includes('pdf')) {\n      return <FileIcon className=\"h-8 w-8 text-red-500\" />;\n    } else if (document.fileType.includes('doc') || document.fileType.includes('docx')) {\n      return <FileTextIcon className=\"h-8 w-8 text-blue-500\" />;\n    } else if (document.fileType.includes('xls') || document.fileType.includes('xlsx')) {\n      return <FileSpreadsheetIcon className=\"h-8 w-8 text-green-500\" />;\n    }\n    return <FileIcon className=\"h-8 w-8 text-gray-500\" />;\n  };\n\n  const handleDownload = async () => {\n    try {\n      const response = await apiRequest(\"GET\", `/api/download-document?id=${document.id}&type=other-document`);\n      \n      if (!response.ok) {\n        throw new Error('Ошибка загрузки документа');\n      }\n      \n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.style.display = 'none';\n      a.href = url;\n      a.download = document.name;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n      \n      toast({\n        title: \"Успешно\",\n        description: \"Документ успешно скачан\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Ошибка\",\n        description: error instanceof Error ? error.message : \"Ошибка загрузки документа\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  return (\n    <Card className={cn(\"glass rounded-xl transition-all hover:shadow-lg\", className)}>\n      <CardContent className=\"p-4\">\n        <div className=\"flex items-start justify-between mb-3\">\n          <div className=\"flex items-center space-x-3\">\n            {getFileIcon()}\n            <div className=\"flex-1 min-w-0\">\n              <h3 className=\"font-medium text-foreground truncate\">{document.name}</h3>\n              <p className=\"text-sm text-muted-foreground\">{document.date}</p>\n            </div>\n          </div>\n        </div>\n        \n        <p className=\"text-sm text-muted-foreground mb-3 line-clamp-2\">\n          {document.description}\n        </p>\n        \n        <div className=\"flex items-center justify-between\">\n          <div className=\"text-xs text-muted-foreground\">\n            {document.fileSize} • {document.fileType}\n          </div>\n          \n          <div className=\"flex space-x-2\">\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"h-8 w-8 text-primary hover:text-primary-foreground hover:bg-primary\"\n              onClick={handleDownload}\n              aria-label=\"Скачать\"\n            >\n              <Download className=\"h-4 w-4\" />\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"h-8 w-8 text-primary hover:text-primary-foreground hover:bg-primary\"\n              onClick={onPreview}\n              aria-label=\"Просмотреть\"\n            >\n              <Eye className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":3913},"client/src/components/ui/document-preview-modal.tsx":{"content":"import { useState } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Download, X, FileIcon } from \"lucide-react\";\n\nexport interface DocumentPreviewModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  title: string;\n  documentPath?: string;\n  documentName: string;\n}\n\nexport function DocumentPreviewModal({\n  isOpen,\n  onClose,\n  title,\n  documentPath,\n  documentName,\n}: DocumentPreviewModalProps) {\n  const [isLoadingPreview, setIsLoadingPreview] = useState(false);\n  const [previewError, setPreviewError] = useState<string | null>(null);\n\n  // Handle document download\n  const handleDownload = async () => {\n    if (!documentPath) {\n      return;\n    }\n    \n    try {\n      // Extract document info from the title and path\n      let documentType = 'other';\n      let documentId = '1';\n      \n      if (title.includes('Договор')) {\n        documentType = 'contract';\n      } else if (title.includes('Акт')) {\n        documentType = 'act';\n      } else if (title.includes('Счет')) {\n        documentType = 'invoice';\n      }\n      \n      // Extract ID from document name or path if possible\n      const idMatch = documentName.match(/(\\d+)_/) || documentPath.match(/(\\d+)_/);\n      if (idMatch) {\n        documentId = idMatch[1];\n      }\n      \n      const response = await fetch(`/api/download-document?id=${documentId}&type=${documentType}`);\n      \n      if (!response.ok) {\n        throw new Error('Ошибка загрузки документа');\n      }\n      \n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.style.display = 'none';\n      a.href = url;\n      a.download = documentName;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n      \n    } catch (error) {\n      console.error('Download error:', error);\n    }\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={(open) => !open && onClose()}>\n      <DialogContent className=\"glass rounded-xl max-w-4xl w-full h-[80vh] p-0 border border-border shadow-glass\">\n        <DialogHeader className=\"flex items-center justify-between p-4 border-b border-border\">\n          <DialogTitle className=\"text-xl font-semibold\">{title}</DialogTitle>\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            onClick={onClose}\n            className=\"text-muted-foreground hover:text-foreground\"\n          >\n            <X className=\"h-4 w-4\" />\n          </Button>\n        </DialogHeader>\n        \n        <div className=\"flex-grow overflow-auto p-4 h-[calc(80vh-5rem)]\">\n          {documentPath ? (\n            <div className=\"flex items-center justify-center h-full\">\n              <div className=\"text-center\">\n                <div className=\"mb-4\">\n                  <FileIcon className=\"w-16 h-16 text-primary mx-auto\" />\n                </div>\n                <p className=\"text-muted-foreground mb-4\">\n                  Предпросмотр документа будет доступен здесь\n                </p>\n                <Button \n                  variant=\"secondary\" \n                  className=\"flex items-center gap-2\"\n                  onClick={handleDownload}\n                >\n                  <Download className=\"h-4 w-4\" />\n                  Скачать документ\n                </Button>\n              </div>\n            </div>\n          ) : (\n            <div className=\"flex items-center justify-center h-full\">\n              <p className=\"text-muted-foreground\">\n                Документ недоступен для предпросмотра\n              </p>\n            </div>\n          )}\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","size_bytes":3908},"client/src/components/ui/drawer.tsx":{"content":"import * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3007},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7361},"client/src/components/ui/form.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message) : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4085},"client/src/components/ui/hover-card.tsx":{"content":"import * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1184},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":845},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"import * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst MenubarMenu = MenubarPrimitive.Menu\n\nconst MenubarGroup = MenubarPrimitive.Group\n\nconst MenubarPortal = MenubarPrimitive.Portal\n\nconst MenubarSub = MenubarPrimitive.Sub\n\nconst MenubarRadioGroup = MenubarPrimitive.RadioGroup\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":7974},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5046},"client/src/components/ui/notification-toast.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { X } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface NotificationToastProps {\n  title: string;\n  message: string;\n  type?: \"success\" | \"error\" | \"info\" | \"warning\";\n  duration?: number;\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport function NotificationToast({\n  title,\n  message,\n  type = \"success\",\n  duration = 3000,\n  isOpen,\n  onClose,\n}: NotificationToastProps) {\n  const [isVisible, setIsVisible] = useState(isOpen);\n\n  useEffect(() => {\n    setIsVisible(isOpen);\n    \n    if (isOpen && duration > 0) {\n      const timer = setTimeout(() => {\n        setIsVisible(false);\n        onClose();\n      }, duration);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [isOpen, duration, onClose]);\n\n  const getIcon = () => {\n    switch (type) {\n      case \"success\":\n        return (\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-green-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n          </svg>\n        );\n      case \"error\":\n        return (\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-red-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        );\n      case \"warning\":\n        return (\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-yellow-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n          </svg>\n        );\n      case \"info\":\n      default:\n        return (\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-blue-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n          </svg>\n        );\n    }\n  };\n\n  if (!isVisible) return null;\n\n  return (\n    <div className={cn(\n      \"fixed bottom-4 right-4 glass rounded-xl p-4 max-w-md animate-fadeIn shadow-glass z-50\",\n      \"transform transition-all duration-300\",\n      isVisible ? \"translate-y-0 opacity-100\" : \"translate-y-2 opacity-0\"\n    )}>\n      <div className=\"flex items-start\">\n        <div className=\"flex-shrink-0 mr-3\">\n          {getIcon()}\n        </div>\n        <div className=\"flex-grow\">\n          <h3 className=\"font-medium\">{title}</h3>\n          <p className=\"text-sm text-muted-foreground mt-1\">{message}</p>\n        </div>\n        <button \n          className=\"text-muted-foreground hover:text-foreground ml-3\"\n          onClick={() => {\n            setIsVisible(false);\n            onClose();\n          }}\n        >\n          <X className=\"h-4 w-4\" />\n        </button>\n      </div>\n    </div>\n  );\n}\n","size_bytes":3124},"client/src/components/ui/pagination.tsx":{"content":"import { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\nexport interface PaginationProps {\n  currentPage: number;\n  totalPages: number;\n  onPageChange: (page: number) => void;\n  maxVisiblePages?: number;\n}\n\nexport function Pagination({\n  currentPage,\n  totalPages,\n  onPageChange,\n  maxVisiblePages = 5,\n}: PaginationProps) {\n  if (totalPages <= 1) {\n    return null;\n  }\n\n  // Calculate the range of pages to display\n  const getVisiblePageRange = () => {\n    if (totalPages <= maxVisiblePages) {\n      // Show all pages if there are less than the max visible\n      return Array.from({ length: totalPages }, (_, i) => i + 1);\n    }\n\n    // Always show first and last page, and pages around current page\n    const sidePages = Math.floor((maxVisiblePages - 2) / 2); // Pages to show on each side of current page\n    const startPage = Math.max(2, currentPage - sidePages);\n    const endPage = Math.min(totalPages - 1, currentPage + sidePages);\n\n    const pages: (number | \"ellipsis-start\" | \"ellipsis-end\")[] = [1];\n\n    // Add ellipsis at the start if needed\n    if (startPage > 2) {\n      pages.push(\"ellipsis-start\");\n    }\n\n    // Add middle pages\n    for (let i = startPage; i <= endPage; i++) {\n      pages.push(i);\n    }\n\n    // Add ellipsis at the end if needed\n    if (endPage < totalPages - 1) {\n      pages.push(\"ellipsis-end\");\n    }\n\n    // Add last page\n    if (totalPages > 1) {\n      pages.push(totalPages);\n    }\n\n    return pages;\n  };\n\n  const visiblePages = getVisiblePageRange();\n\n  return (\n    <div className=\"flex\">\n      <Button\n        variant=\"outline\"\n        size=\"icon\"\n        className=\"mr-2\"\n        onClick={() => onPageChange(Math.max(1, currentPage - 1))}\n        disabled={currentPage === 1}\n      >\n        <ChevronLeft className=\"h-4 w-4\" />\n      </Button>\n\n      {visiblePages.map((page, index) => {\n        if (page === \"ellipsis-start\" || page === \"ellipsis-end\") {\n          return (\n            <Button\n              key={`ellipsis-${index}`}\n              variant=\"outline\"\n              size=\"icon\"\n              className=\"mr-2\"\n              disabled\n            >\n              <MoreHorizontal className=\"h-4 w-4\" />\n            </Button>\n          );\n        }\n\n        return (\n          <Button\n            key={page}\n            variant={currentPage === page ? \"default\" : \"outline\"}\n            className=\"mr-2\"\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </Button>\n        );\n      })}\n\n      <Button\n        variant=\"outline\"\n        size=\"icon\"\n        onClick={() => onPageChange(Math.min(totalPages, currentPage + 1))}\n        disabled={currentPage === totalPages}\n      >\n        <ChevronRight className=\"h-4 w-4\" />\n      </Button>\n    </div>\n  );\n}\n","size_bytes":2821},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1230},"client/src/components/ui/progress.tsx":{"content":"import * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":777},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"import { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1709},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5615},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"import * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4267},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { Sheet, SheetContent } from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar:state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContext = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContext | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        if (setOpenProp) {\n          return setOpenProp?.(\n            typeof value === \"function\" ? value(open) : value\n          )\n        }\n\n        _setOpen(value)\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${open}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContext>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full text-sidebar-foreground has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"duration-200 relative h-svh w-[--sidebar-width] bg-transparent transition-[width] ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"duration-200 fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex min-h-svh flex-1 flex-col bg-background\",\n        \"peer-data-[variant=inset]:min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"duration-200 flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opa] ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground select-none pointer-events-none\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"rounded-md h-8 flex gap-2 px-2 items-center\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 flex-1 max-w-[--skeleton-width]\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23337},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/stat-card.tsx":{"content":"import { StatCardProps } from \"@/types\";\n\nexport function StatCard({ \n  title, \n  value, \n  trend, \n  trendDirection, \n  icon,\n  iconBgColor,\n  iconTextColor\n}: StatCardProps) {\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-5\">\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <p className=\"text-sm font-medium text-slate-500\">{title}</p>\n          <p className=\"text-2xl font-bold mt-1 font-mono\">{value}</p>\n        </div>\n        <div className={`p-2 ${iconBgColor} rounded-full ${iconTextColor}`}>\n          {icon}\n        </div>\n      </div>\n      <div className=\"mt-3 flex items-center text-sm\">\n        <span className={`${trendDirection === 'up' ? 'text-emerald-600' : 'text-red-600'} flex items-center font-medium`}>\n          <svg \n            xmlns=\"http://www.w3.org/2000/svg\" \n            className=\"h-4 w-4 mr-1\" \n            fill=\"none\" \n            viewBox=\"0 0 24 24\" \n            stroke=\"currentColor\"\n          >\n            <path \n              strokeLinecap=\"round\" \n              strokeLinejoin=\"round\" \n              strokeWidth=\"2\" \n              d={trendDirection === 'up' ? \"M5 10l7-7m0 0l7 7m-7-7v18\" : \"M19 14l-7 7m0 0l-7-7m7 7V3\"} \n            />\n          </svg>\n          {trend}\n        </span>\n        <span className=\"text-slate-500 ml-2\">since last month</span>\n      </div>\n    </div>\n  );\n}\n","size_bytes":1401},"client/src/components/ui/status-badge.tsx":{"content":"import { Badge } from \"@/components/ui/badge\";\n\ninterface StatusBadgeProps {\n  status: string;\n  className?: string;\n}\n\nexport function StatusBadge({ status, className }: StatusBadgeProps) {\n  const getVariant = () => {\n    switch (status.toLowerCase()) {\n      case \"активен\":\n      case \"оплачен\":\n        return \"success\";\n      case \"ожидает оплаты\":\n      case \"ожидается\":\n        return \"warning\";\n      case \"завершен\":\n        return \"neutral\";\n      case \"отменен\":\n        return \"destructive\";\n      default:\n        return \"neutral\";\n    }\n  };\n\n  return (\n    <Badge variant={getVariant()} className={className}>\n      {status}\n    </Badge>\n  );\n}\n","size_bytes":713},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":772},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"import * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1739},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3\",\n        sm: \"h-9 px-2.5\",\n        lg: \"h-11 px-5\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1435},"client/src/components/ui/tooltip.tsx":{"content":"import * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1145},"client/src/pages/clients/documents.tsx":{"content":"\nimport React, { useState } from 'react';\nimport { MainLayout } from \"@/components/layout/main-layout\";\nimport { Container } from \"@/components/ui/container\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Slider } from \"@/components/ui/slider\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { FileText, Download } from \"lucide-react\";\n\nconst DocumentCard = ({ title, link }: { title: string, link: string }) => {\n  return (\n    <div className=\"bg-card/50 p-4 rounded-lg border border-border hover:bg-card/70 transition-colors\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center\">\n          <FileText className=\"h-5 w-5 text-primary mr-3\" />\n          <h3 className=\"text-sm font-medium\">{title}</h3>\n        </div>\n        <Button variant=\"outline\" size=\"sm\" asChild className=\"gap-2 ml-4\">\n          <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Download className=\"h-3 w-3\" /> Скачать\n          </a>\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default function DocumentsPage() {\n  const [formData, setFormData] = useState({\n    name: '',\n    phone: '',\n    email: '',\n    inn: '',\n    leaseTerm: '3',\n    propertyValue: [100000],\n    downPayment: [0],\n    comment: '',\n    agreementChecked: false\n  });\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!formData.agreementChecked) {\n      alert('Необходимо согласие на обработку персональных данных');\n      return;\n    }\n\n    try {\n      const response = await fetch('/api/send-application', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name: formData.name,\n          phone: formData.phone,\n          email: formData.email,\n          serviceType: 'Документы и консультация',\n          comment: `ИНН: ${formData.inn}, Срок лизинга: ${formData.leaseTerm} лет, Стоимость имущества: ${formData.propertyValue[0]} ₽, Авансовый платёж: ${formData.downPayment[0]}%, Комментарий: ${formData.comment}`,\n        }),\n      });\n\n      if (response.ok) {\n        alert('Заявка отправлена успешно!');\n        setFormData({\n          name: '',\n          phone: '',\n          email: '',\n          inn: '',\n          leaseTerm: '3',\n          propertyValue: [100000],\n          downPayment: [0],\n          comment: '',\n          agreementChecked: false\n        });\n      } else {\n        const error = await response.json();\n        alert(error.message || 'Произошла ошибка при отправке заявки');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Произошла ошибка при отправке заявки');\n    }\n  };\n\n  const monthlyPayment = () => {\n    const value = formData.propertyValue[0];\n    const term = parseInt(formData.leaseTerm) * 12;\n    const rate = 0.15 / 12; // 15% годовых\n    const downPaymentAmount = value * (formData.downPayment[0] / 100);\n    const financeAmount = value - downPaymentAmount;\n    \n    if (financeAmount <= 0) return 0;\n    \n    const payment = (financeAmount * rate * Math.pow(1 + rate, term)) / (Math.pow(1 + rate, term) - 1);\n    return Math.round(payment);\n  };\n\n  const financeAmount = () => {\n    const value = formData.propertyValue[0];\n    const downPaymentAmount = value * (formData.downPayment[0] / 100);\n    return value - downPaymentAmount;\n  };\n\n  const normativeDocuments = [\n    {\n      title: 'Конвенция УНИДРУА от 28.05.1988. (ФЗ от 08.02.1998 №16-ФЗ)',\n      link: 'https://investl.ru/upload/iblock/4ef/be0z5j5runmimzkxvh2yo3wbe8yd6yud.pdf'\n    },\n    {\n      title: 'ФЗ №164 О ФИНАНСОВОЙ АРЕНДЕ. 11.12.1998 г.',\n      link: 'https://investl.ru/upload/iblock/d75/ffuol0737ay7jbxy4sq7h62qby702coi.pdf'\n    },\n    {\n      title: 'ГК РФ Раздел IV. Отдельные виды обязательств.$6 Финансовая аренда (лизинг 22.12.1995 г.)',\n      link: 'https://investl.ru/upload/iblock/d97/u7ta89hiy92fzvhg7knc3lfhlm37gzk5.pdf'\n    }\n  ];\n\n  const generalConditions = [\n    {\n      title: 'Общие условия финансовой аренды (лизинга) оборудования (ред. от 14.07.2022)',\n      link: 'https://investl.ru/upload/iblock/600/mxi076apq65icew2937nsfdy526aucpp.pdf'\n    },\n    {\n      title: 'Общие условия финансовой аренды (лизинга) недвижимого имущества (ред. от 14.07.2022)',\n      link: 'https://investl.ru/upload/iblock/511/8faj590zk9q63s6kaknl1f7rufxr73ka.pdf'\n    },\n    {\n      title: 'Общие условия финансовой аренды (лизинга) автотранспорта, спецтехники (ред. от 14.07.2022)',\n      link: 'https://investl.ru/upload/iblock/230/swvtnk4xyxejgrw5y8t12ailzw592v5c.pdf'\n    },\n    {\n      title: 'Общие условия лизинга оборудования 2021 год',\n      link: 'https://investl.ru/upload/iblock/ad0/vc0hczyy5up0cxot04kotpjdaf4chhma.pdf'\n    },\n    {\n      title: 'Общие условия лизинга недвижимого имущества 2021 год',\n      link: 'https://investl.ru/upload/iblock/62c/zd52rt93e3fio7tprqbuoekdcc8u5x90.pdf'\n    },\n    {\n      title: 'Общие условия лизинга автотранспорта спецтехники 2021 год',\n      link: 'https://investl.ru/upload/iblock/75f/k27bpctlh34gdticj6nx77s35mna0b2o.pdf'\n    }\n  ];\n\n  const privacyPolicy = [\n    {\n      title: 'Политика обработки персональных данных',\n      link: 'https://investl.ru/upload/iblock/063/77j17jnlutk5mjsev6mjlg33xrb7y25j.pdf'\n    }\n  ];\n\n  return (\n    <MainLayout>\n      <section className=\"py-20 relative\">\n        <Container>\n          <div className=\"text-center max-w-3xl mx-auto mb-12\">\n            <h1 className=\"text-3xl md:text-4xl font-bold mb-6\">Документы</h1>\n            <p className=\"text-muted-foreground text-lg\">\n              Нормативные документы и общие условия лизинга\n            </p>\n          </div>\n          \n          {/* Нормативные документы */}\n          <div className=\"max-w-4xl mx-auto mb-12\">\n            <h2 className=\"text-2xl font-semibold mb-6\">Нормативные документы</h2>\n            <div className=\"grid gap-4\">\n              {normativeDocuments.map((doc, index) => (\n                <DocumentCard key={index} title={doc.title} link={doc.link} />\n              ))}\n            </div>\n          </div>\n\n          {/* Общие условия лизинга */}\n          <div className=\"max-w-4xl mx-auto mb-12\">\n            <h2 className=\"text-2xl font-semibold mb-6\">Общие условия лизинга</h2>\n            <div className=\"grid gap-4\">\n              {generalConditions.map((doc, index) => (\n                <DocumentCard key={index} title={doc.title} link={doc.link} />\n              ))}\n            </div>\n          </div>\n\n          {/* Политика обработки персональных данных */}\n          <div className=\"max-w-4xl mx-auto mb-16\">\n            <h2 className=\"text-2xl font-semibold mb-6\">Политика обработки персональных данных</h2>\n            <div className=\"grid gap-4\">\n              {privacyPolicy.map((doc, index) => (\n                <DocumentCard key={index} title={doc.title} link={doc.link} />\n              ))}\n            </div>\n          </div>\n\n          {/* Форма заявки */}\n          <div className=\"max-w-4xl mx-auto\">\n            <div className=\"bg-card/30 p-8 rounded-lg border\">\n              <h2 className=\"text-2xl font-semibold mb-8 text-center\">Оставьте заявку</h2>\n              \n              {/* Этапы */}\n              <div className=\"grid md:grid-cols-3 gap-8 mb-8\">\n                <div className=\"text-center\">\n                  <div className=\"w-12 h-12 bg-primary text-primary-foreground rounded-full flex items-center justify-center text-xl font-bold mx-auto mb-4\">1</div>\n                  <h3 className=\"font-semibold mb-2\">Оставьте заявку</h3>\n                  <p className=\"text-sm text-muted-foreground\">Мы свяжемся с Вами в течение часа</p>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"w-12 h-12 bg-primary text-primary-foreground rounded-full flex items-center justify-center text-xl font-bold mx-auto mb-4\">2</div>\n                  <h3 className=\"font-semibold mb-2\">Согласуем условия сделки</h3>\n                  <p className=\"text-sm text-muted-foreground\">И проверим документы</p>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"w-12 h-12 bg-primary text-primary-foreground rounded-full flex items-center justify-center text-xl font-bold mx-auto mb-4\">3</div>\n                  <h3 className=\"font-semibold mb-2\">Заключим договор</h3>\n                  <p className=\"text-sm text-muted-foreground\">И передадим Вам имущество в пользование</p>\n                </div>\n              </div>\n\n              <form onSubmit={handleSubmit} className=\"grid md:grid-cols-2 gap-6\">\n                <div className=\"space-y-6\">\n                  <div>\n                    <Label htmlFor=\"name\">Ваше имя *</Label>\n                    <Input\n                      id=\"name\"\n                      value={formData.name}\n                      onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\n                      required\n                    />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"phone\">Телефон *</Label>\n                    <Input\n                      id=\"phone\"\n                      type=\"tel\"\n                      value={formData.phone}\n                      onChange={(e) => setFormData(prev => ({ ...prev, phone: e.target.value }))}\n                      required\n                    />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"email\">Электронная почта *</Label>\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      value={formData.email}\n                      onChange={(e) => setFormData(prev => ({ ...prev, email: e.target.value }))}\n                      required\n                    />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"inn\">ИНН</Label>\n                    <Input\n                      id=\"inn\"\n                      value={formData.inn}\n                      onChange={(e) => setFormData(prev => ({ ...prev, inn: e.target.value }))}\n                    />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"leaseTerm\">Желаемый срок лизинга</Label>\n                    <Select value={formData.leaseTerm} onValueChange={(value) => setFormData(prev => ({ ...prev, leaseTerm: value }))}>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Выберите срок\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"1\">1 год</SelectItem>\n                        <SelectItem value=\"3\">3 года</SelectItem>\n                        <SelectItem value=\"5\">5 лет</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n\n                  <div>\n                    <Label>Стоимость имущества: {formData.propertyValue[0].toLocaleString()} ₽</Label>\n                    <Slider\n                      value={formData.propertyValue}\n                      onValueChange={(value) => setFormData(prev => ({ ...prev, propertyValue: value }))}\n                      max={300000000}\n                      min={100000}\n                      step={50000}\n                      className=\"mt-2\"\n                    />\n                    <div className=\"flex justify-between text-xs text-muted-foreground mt-1\">\n                      <span>100 000 ₽</span>\n                      <span>300 000 000 ₽</span>\n                    </div>\n                  </div>\n\n                  <div>\n                    <Label>Авансовый платёж: {formData.downPayment[0]}%</Label>\n                    <Slider\n                      value={formData.downPayment}\n                      onValueChange={(value) => setFormData(prev => ({ ...prev, downPayment: value }))}\n                      max={49}\n                      min={0}\n                      step={1}\n                      className=\"mt-2\"\n                    />\n                    <div className=\"flex justify-between text-xs text-muted-foreground mt-1\">\n                      <span>0%</span>\n                      <span>49%</span>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"space-y-6\">\n                  <div className=\"bg-card p-6 rounded-lg border\">\n                    <h3 className=\"text-lg font-semibold mb-4\">Расчёт лизинга</h3>\n                    <div className=\"space-y-3 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span>Ставка удорожания:</span>\n                        <span className=\"font-semibold\">15%</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Сроком на:</span>\n                        <span className=\"font-semibold\">{formData.leaseTerm} {formData.leaseTerm === '1' ? 'год' : formData.leaseTerm === '5' ? 'лет' : 'года'}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Сумма финансирования:</span>\n                        <span className=\"font-semibold\">{financeAmount().toLocaleString()} ₽</span>\n                      </div>\n                      <div className=\"flex justify-between border-t pt-3\">\n                        <span>Ежемесячный платёж:</span>\n                        <span className=\"font-semibold text-lg\">{monthlyPayment().toLocaleString()} ₽</span>\n                      </div>\n                    </div>\n                    <p className=\"text-xs text-muted-foreground mt-4\">\n                      Расчёты носят ознакомительный характер и не являются офертой\n                    </p>\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"comment\">Комментарий</Label>\n                    <Textarea\n                      id=\"comment\"\n                      value={formData.comment}\n                      onChange={(e) => setFormData(prev => ({ ...prev, comment: e.target.value }))}\n                      rows={4}\n                    />\n                  </div>\n\n                  <div className=\"flex items-start space-x-2\">\n                    <Checkbox\n                      id=\"agreement\"\n                      checked={formData.agreementChecked}\n                      onCheckedChange={(checked) => setFormData(prev => ({ ...prev, agreementChecked: checked as boolean }))}\n                    />\n                    <Label htmlFor=\"agreement\" className=\"text-sm leading-relaxed\">\n                      Согласие на обработку{' '}\n                      <a \n                        href=\"https://investl.ru/upload/iblock/063/77j17jnlutk5mjsev6mjlg33xrb7y25j.pdf\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"text-primary underline\"\n                      >\n                        персональных данных\n                      </a>\n                    </Label>\n                  </div>\n\n                  <Button type=\"submit\" className=\"w-full\" size=\"lg\">\n                    Оставить заявку\n                  </Button>\n\n                  <p className=\"text-xs text-muted-foreground text-center\">\n                    * - обязательное поле\n                  </p>\n                </div>\n              </form>\n            </div>\n          </div>\n        </Container>\n      </section>\n    </MainLayout>\n  );\n}\n","size_bytes":17126},"client/src/pages/clients/property.tsx":{"content":"\nimport React, { useState, useEffect } from 'react';\nimport { MainLayout } from \"@/components/layout/main-layout\";\nimport { Container } from \"@/components/ui/container\";\nimport { Button } from \"@/components/ui/button\";\nimport { Calculator, ExternalLink, RefreshCw, Loader2 } from \"lucide-react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\n\n// Компонент для отображения карточки имущества\nconst PropertyItem = ({ \n  title, \n  price, \n  description, \n  imageUrl,\n  avitoUrl \n}: { \n  title: string; \n  price: string; \n  description: string;\n  imageUrl: string;\n  avitoUrl: string;\n}) => {\n  return (\n    <div className=\"bg-background rounded-lg shadow-md overflow-hidden border border-border\">\n      <div className=\"h-64 overflow-hidden relative\">\n        <img \n          src={imageUrl} \n          alt={title} \n          className=\"w-full h-full object-cover transition-transform duration-300 hover:scale-105\"\n          onError={(e) => {\n            (e.target as HTMLImageElement).src = '/placeholder-equipment.jpg';\n          }}\n        />\n        <div className=\"absolute top-4 right-4 bg-primary text-primary-foreground px-3 py-1 rounded font-medium\">\n          {price}\n        </div>\n      </div>\n      <div className=\"p-6\">\n        <h3 className=\"text-xl font-bold mb-3\">{title}</h3>\n        <p className=\"text-muted-foreground mb-5\">{description}</p>\n        <div className=\"flex gap-3\">\n          <Button variant=\"outline\" className=\"gap-2\">\n            <Calculator size={16} />\n            Расчет лизинга\n          </Button>\n          <Button variant=\"default\" className=\"gap-2\" asChild>\n            <a href={avitoUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n              <ExternalLink size={16} />\n              Подробнее на Авито\n            </a>\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Компонент для загрузки объявлений\nconst AvitoListings = () => {\n  const [listings, setListings] = useState<any[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [lastUpdated, setLastUpdated] = useState(new Date());\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchListings = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('/api/avito-listings');\n      if (!response.ok) {\n        throw new Error('Ошибка загрузки данных');\n      }\n      const data = await response.json();\n      setListings(data.listings || []);\n      setLastUpdated(new Date());\n    } catch (err) {\n      setError('Не удалось загрузить объявления');\n      console.error('Error fetching listings:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchListings();\n    \n    // Автоматическое обновление каждые 30 минут\n    const interval = setInterval(() => {\n      fetchListings();\n    }, 30 * 60 * 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <Card className=\"mb-8\">\n      <CardHeader className=\"flex flex-row items-center justify-between\">\n        <CardTitle className=\"text-xl\">Актуальные объявления</CardTitle>\n        <div className=\"flex items-center gap-2\">\n          <span className=\"text-sm text-muted-foreground\">\n            Обновлено: {lastUpdated.toLocaleTimeString()}\n          </span>\n          <Button \n            variant=\"outline\" \n            size=\"sm\" \n            onClick={fetchListings} \n            disabled={loading}\n            className=\"gap-2\"\n          >\n            {loading ? (\n              <Loader2 size={14} className=\"animate-spin\" />\n            ) : (\n              <RefreshCw size={14} />\n            )}\n            Обновить\n          </Button>\n        </div>\n      </CardHeader>\n      <CardContent>\n        {error && (\n          <div className=\"text-center text-red-500 mb-4\">\n            {error}\n          </div>\n        )}\n        \n        {loading && listings.length === 0 ? (\n          <div className=\"text-center py-8\">\n            <Loader2 className=\"mx-auto h-8 w-8 animate-spin text-muted-foreground\" />\n            <p className=\"mt-2 text-muted-foreground\">Загружаем объявления...</p>\n          </div>\n        ) : (\n          <div className=\"grid gap-6 md:grid-cols-2\">\n            {listings.map((item, index) => (\n              <PropertyItem \n                key={index}\n                title={item.title}\n                price={item.price}\n                description={item.description}\n                imageUrl={item.imageUrl}\n                avitoUrl={item.avitoUrl}\n              />\n            ))}\n          </div>\n        )}\n        \n        <p className=\"text-sm text-muted-foreground mt-4\">\n          Объявления автоматически обновляются каждые 30 минут. \n          Для просмотра полной информации перейдите на сайт Авито.\n        </p>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default function PropertyPage() {\n  return (\n    <MainLayout>\n      <section className=\"py-20 relative\">\n        <Container>\n          <div className=\"text-center max-w-3xl mx-auto mb-12\">\n            <h1 className=\"text-3xl md:text-4xl font-bold mb-6\">Реализация изъятого имущества</h1>\n            <p className=\"text-muted-foreground text-lg\">\n              Предлагаем к приобретению имущество по выгодным ценам\n            </p>\n          </div>\n          \n          <div className=\"max-w-6xl mx-auto\">\n            \n            {/* Компонент с объявлениями Авито */}\n            <AvitoListings />\n            \n            \n            \n            \n          </div>\n        </Container>\n      </section>\n    </MainLayout>\n  );\n}\n","size_bytes":5996},"client/src/pages/clients/vacancies.tsx":{"content":"\nimport React, { useState } from 'react';\nimport { MainLayout } from \"@/components/layout/main-layout\";\nimport { Container } from \"@/components/ui/container\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { MapPin, Send, Upload } from \"lucide-react\";\n\nconst cities = [\n  'Краснодар',\n  'Нижний Новгород', \n  'Санкт-Петербург',\n  'Тамбов',\n  'Тольятти',\n  'Тюмень',\n  'Ульяновск',\n  'Уфа',\n  'Челябинск'\n];\n\nexport default function VacanciesPage() {\n  const [selectedCity, setSelectedCity] = useState<string>('');\n  const [applicationForm, setApplicationForm] = useState({\n    fullName: '',\n    phone: '',\n    email: '',\n    resume: null as File | null\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files[0]) {\n      setApplicationForm(prev => ({\n        ...prev,\n        resume: e.target.files![0]\n      }));\n    }\n  };\n\n  const handleSubmitApplication = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!applicationForm.fullName || !applicationForm.phone || !applicationForm.email || !applicationForm.resume) {\n      alert('Пожалуйста, заполните все обязательные поля и прикрепите резюме');\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    try {\n      const formData = new FormData();\n      formData.append('fullName', applicationForm.fullName);\n      formData.append('phone', applicationForm.phone);\n      formData.append('email', applicationForm.email);\n      formData.append('city', selectedCity);\n      formData.append('position', 'Менеджер по продажам');\n      formData.append('resume', applicationForm.resume);\n\n      const response = await fetch('/api/send-resume', {\n        method: 'POST',\n        body: formData\n      });\n\n      const result = await response.json();\n\n      if (result.success) {\n        alert('Ваше резюме успешно отправлено!');\n        setApplicationForm({\n          fullName: '',\n          phone: '',\n          email: '',\n          resume: null\n        });\n        setIsDialogOpen(false);\n      } else {\n        alert('Произошла ошибка при отправке резюме. Пожалуйста, попробуйте еще раз.');\n      }\n    } catch (error) {\n      console.error('Error sending resume:', error);\n      alert('Произошла ошибка при отправке резюме. Пожалуйста, попробуйте еще раз.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <MainLayout>\n      <section className=\"py-20 relative\">\n        <Container>\n          <div className=\"text-center max-w-3xl mx-auto mb-12\">\n            <h1 className=\"text-3xl md:text-4xl font-bold mb-6\">Вакансии</h1>\n            <p className=\"text-muted-foreground text-lg\">\n              Присоединяйтесь к команде «ИНВЕСТ-лизинг»\n            </p>\n          </div>\n          \n          <div className=\"max-w-4xl mx-auto\">\n            {!selectedCity ? (\n              <div>\n                <h2 className=\"text-2xl font-bold mb-8 text-center\">Выберите город</h2>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {cities.map((city) => (\n                    <Card \n                      key={city} \n                      className=\"cursor-pointer hover:shadow-lg transition-shadow\"\n                      onClick={() => setSelectedCity(city)}\n                    >\n                      <CardContent className=\"p-6 text-center\">\n                        <MapPin className=\"h-8 w-8 mx-auto mb-3 text-primary\" />\n                        <h3 className=\"text-lg font-semibold\">{city}</h3>\n                      </CardContent>\n                    </Card>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <div>\n                <div className=\"flex items-center justify-between mb-8\">\n                  <h2 className=\"text-2xl font-bold\">Вакансии в городе {selectedCity}</h2>\n                  <Button \n                    variant=\"outline\" \n                    onClick={() => setSelectedCity('')}\n                  >\n                    Выбрать другой город\n                  </Button>\n                </div>\n\n                <div className=\"space-y-8\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center justify-between\">\n                        <span>Менеджер по продажам</span>\n                        <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n                          <DialogTrigger asChild>\n                            <Button>\n                              <Send className=\"mr-2 h-4 w-4\" />\n                              Откликнуться на вакансию\n                            </Button>\n                          </DialogTrigger>\n                          <DialogContent className=\"max-w-md\">\n                            <DialogHeader>\n                              <DialogTitle>Отклик на вакансию</DialogTitle>\n                            </DialogHeader>\n                            <form onSubmit={handleSubmitApplication} className=\"space-y-4\">\n                              <div>\n                                <Label htmlFor=\"fullName\">ФИО *</Label>\n                                <Input\n                                  id=\"fullName\"\n                                  value={applicationForm.fullName}\n                                  onChange={(e) => setApplicationForm(prev => ({\n                                    ...prev,\n                                    fullName: e.target.value\n                                  }))}\n                                  required\n                                />\n                              </div>\n                              \n                              <div>\n                                <Label htmlFor=\"phone\">Телефон *</Label>\n                                <Input\n                                  id=\"phone\"\n                                  type=\"tel\"\n                                  value={applicationForm.phone}\n                                  onChange={(e) => setApplicationForm(prev => ({\n                                    ...prev,\n                                    phone: e.target.value\n                                  }))}\n                                  required\n                                />\n                              </div>\n                              \n                              <div>\n                                <Label htmlFor=\"email\">Email *</Label>\n                                <Input\n                                  id=\"email\"\n                                  type=\"email\"\n                                  value={applicationForm.email}\n                                  onChange={(e) => setApplicationForm(prev => ({\n                                    ...prev,\n                                    email: e.target.value\n                                  }))}\n                                  required\n                                />\n                              </div>\n                              \n                              <div>\n                                <Label htmlFor=\"resume\">Резюме *</Label>\n                                <div className=\"flex items-center space-x-2\">\n                                  <Input\n                                    id=\"resume\"\n                                    type=\"file\"\n                                    accept=\".pdf,.doc,.docx\"\n                                    onChange={handleFileChange}\n                                    required\n                                    className=\"hidden\"\n                                  />\n                                  <Button\n                                    type=\"button\"\n                                    variant=\"outline\"\n                                    onClick={() => document.getElementById('resume')?.click()}\n                                    className=\"w-full\"\n                                  >\n                                    <Upload className=\"mr-2 h-4 w-4\" />\n                                    {applicationForm.resume ? applicationForm.resume.name : 'Выберите файл'}\n                                  </Button>\n                                </div>\n                              </div>\n                              \n                              <Button \n                                type=\"submit\" \n                                className=\"w-full\"\n                                disabled={isSubmitting}\n                              >\n                                {isSubmitting ? 'Отправка...' : 'Отправить резюме'}\n                              </Button>\n                            </form>\n                          </DialogContent>\n                        </Dialog>\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-4\">\n                        <div>\n                          <h4 className=\"font-medium mb-2\">Требования:</h4>\n                          <ul className=\"list-disc pl-6 space-y-1 text-sm\">\n                            <li>Высшее образование</li>\n                            <li>Опыт успешных продаж в сфере финансовых услуг от 1 года</li>\n                          </ul>\n                        </div>\n                        \n                        <div>\n                          <h4 className=\"font-medium mb-2\">Обязанности:</h4>\n                          <ul className=\"list-disc pl-6 space-y-1 text-sm\">\n                            <li>Активный поиск и привлечение потенциальных клиентов</li>\n                            <li>Сбор первичных документов по клиенту</li>\n                            <li>Подготовка и заключение договоров: финансовой аренды (лизинга), купли-продажи, поручительства и т.п.</li>\n                            <li>Контроль исполнения договора до полного погашения всех обязательств</li>\n                          </ul>\n                        </div>\n                        \n                        <div>\n                          <h4 className=\"font-medium mb-2\">Условия:</h4>\n                          <ul className=\"list-disc pl-6 space-y-1 text-sm\">\n                            <li>Полная занятость, полный день</li>\n                            <li>График работы: пн. - пт. с 8:00 до 17:00</li>\n                            <li>Полный социальный пакет</li>\n                            <li>Официальное трудоустройство</li>\n                            <li>Корпоративное обучение</li>\n                          </ul>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n              </div>\n            )}\n          </div>\n        </Container>\n      </section>\n    </MainLayout>\n  );\n}\n","size_bytes":12209},"client/src/pages/services/gruzovye-avtomobili-page.tsx":{"content":"import { MainLayout } from \"@/components/layout/main-layout\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { ArrowRight, Check } from \"lucide-react\";\nimport { useState } from \"react\";\n\nexport default function GruzovyeAvtomobiliPage() {\n  const [formData, setFormData] = useState({\n    name: '',\n    phone: '',\n    email: '',\n    vehicle: '',\n    comment: ''\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\n    const { id, value } = e.target;\n    setFormData(prev => ({ ...prev, [id]: value }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Валидация обязательных полей\n    if (!formData.name.trim()) {\n      alert('Пожалуйста, введите ваше имя');\n      return;\n    }\n    \n    if (!formData.phone.trim()) {\n      alert('Пожалуйста, введите ваш телефон');\n      return;\n    }\n    \n    if (!formData.email.trim()) {\n      alert('Пожалуйста, введите ваш email');\n      return;\n    }\n    \n    if (!formData.vehicle) {\n      alert('Пожалуйста, выберите тип транспорта');\n      return;\n    }\n    \n    // Простая валидация email\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(formData.email)) {\n      alert('Пожалуйста, введите корректный email адрес');\n      return;\n    }\n    \n    setIsSubmitting(true);\n    \n    try {\n      const response = await fetch('/api/send-application', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          ...formData,\n          serviceType: 'Автотранспорт',\n          recipientEmail: 'inv.lizing@yandex.ru'\n        }),\n      });\n      \n      if (response.ok) {\n        alert('Заявка успешно отправлена! Мы свяжемся с вами в ближайшее время.');\n        setFormData({\n          name: '',\n          phone: '',\n          email: '',\n          vehicle: '',\n          comment: ''\n        });\n      } else {\n        alert('Произошла ошибка при отправке заявки. Пожалуйста, попробуйте еще раз.');\n      }\n    } catch (error) {\n      console.error('Error sending application:', error);\n      alert('Произошла ошибка при отправке заявки. Пожалуйста, попробуйте еще раз.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return (\n    <MainLayout>\n      <main className=\"flex-1\">\n        <section className=\"py-20 relative overflow-hidden\">\n          <div className=\"absolute inset-0 bg-gradient-to-b from-background to-background/80 z-10\"></div>\n          <div className=\"absolute inset-0 bg-[url('/bg-trucks.jpg')] bg-cover bg-center opacity-15\"></div>\n\n          <div className=\"container mx-auto px-4 relative z-20\">\n            <div className=\"max-w-4xl mx-auto\">\n              <h1 className=\"text-4xl md:text-5xl font-bold mb-8\">Лизинг автотранспорта</h1>\n              <p className=\"text-xl mb-8 text-muted-foreground\">\n                Компания \"Инвест-Лизинг\" предлагает выгодные условия лизинга легковых и грузовых автомобилей для вашего бизнеса.\n                Мы поможем обновить автопарк вашей компании на выгодных условиях.\n              </p>\n\n              <div className=\"flex flex-wrap gap-4\">\n                <Button \n                  size=\"lg\"\n                  onClick={() => {\n                    const element = document.getElementById('application');\n                    element?.scrollIntoView({ behavior: 'smooth' });\n                  }}\n                >\n                  Оставить заявку\n                </Button>\n                <Button \n                  variant=\"outline\" \n                  size=\"lg\"\n                  onClick={() => {\n                    const element = document.getElementById('benefits');\n                    element?.scrollIntoView({ behavior: 'smooth' });\n                  }}\n                >\n                  Преимущества\n                </Button>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section className=\"py-16 bg-muted/30\" id=\"benefits\">\n          <div className=\"container mx-auto px-4\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-12 text-center\">Преимущества лизинга автотранспорта</h2>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              <div className=\"p-6 rounded-lg glass backdrop-blur-sm bg-background/30 hover:shadow-lg transition-all\">\n                <div className=\"w-12 h-12 rounded-full bg-[#b9a046]/20 flex items-center justify-center mb-4\">\n                  <Check className=\"h-6 w-6 text-[#b9a046]\" />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Минимальный аванс</h3>\n                <p className=\"text-muted-foreground\">\n                  От 10% стоимости автомобиля, что позволяет существенно снизить первоначальные затраты\n                </p>\n              </div>\n\n              <div className=\"p-6 rounded-lg glass backdrop-blur-sm bg-background/30 hover:shadow-lg transition-all\">\n                <div className=\"w-12 h-12 rounded-full bg-[#b9a046]/20 flex items-center justify-center mb-4\">\n                  <Check className=\"h-6 w-6 text-[#b9a046]\" />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Быстрое оформление</h3>\n                <p className=\"text-muted-foreground\">\n                  Решение по заявке принимается в течение 1-2 рабочих дней при минимальном пакете документов\n                </p>\n              </div>\n\n              <div className=\"p-6 rounded-lg glass backdrop-blur-sm bg-background/30 hover:shadow-lg transition-all\">\n                <div className=\"w-12 h-12 rounded-full bg-[#b9a046]/20 flex items-center justify-center mb-4\">\n                  <Check className=\"h-6 w-6 text-[#b9a046]\" />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Налоговые преимущества</h3>\n                <p className=\"text-muted-foreground\">\n                  Лизинговые платежи полностью относятся на себестоимость, а НДС принимается к вычету\n                </p>\n              </div>\n\n              <div className=\"p-6 rounded-lg glass backdrop-blur-sm bg-background/30 hover:shadow-lg transition-all\">\n                <div className=\"w-12 h-12 rounded-full bg-[#b9a046]/20 flex items-center justify-center mb-4\">\n                  <Check className=\"h-6 w-6 text-[#b9a046]\" />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Страхование включено</h3>\n                <p className=\"text-muted-foreground\">\n                  Страхование КАСКО и ОСАГО уже включено в лизинговые платежи\n                </p>\n              </div>\n\n              <div className=\"p-6 rounded-lg glass backdrop-blur-sm bg-background/30 hover:shadow-lg transition-all\">\n                <div className=\"w-12 h-12 rounded-full bg-[#b9a046]/20 flex items-center justify-center mb-4\">\n                  <Check className=\"h-6 w-6 text-[#b9a046]\" />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Гибкий график платежей</h3>\n                <p className=\"text-muted-foreground\">\n                  Возможность выбора графика платежей с учетом сезонности бизнеса\n                </p>\n              </div>\n\n              <div className=\"p-6 rounded-lg glass backdrop-blur-sm bg-background/30 hover:shadow-lg transition-all\">\n                <div className=\"w-12 h-12 rounded-full bg-[#b9a046]/20 flex items-center justify-center mb-4\">\n                  <Check className=\"h-6 w-6 text-[#b9a046]\" />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Полное сервисное обслуживание</h3>\n                <p className=\"text-muted-foreground\">\n                  Возможность включения в договор регулярного технического обслуживания автомобиля\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section className=\"py-16\">\n          <div className=\"container mx-auto px-4\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-12 text-center\">Виды автотранспорта для лизинга</h2>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              <div className=\"rounded-xl overflow-hidden group\">\n                <div className=\"h-64 relative\">\n                  <img \n                    src=\"/cars.jpg\" \n                    alt=\"Легковые автомобили\"\n                    className=\"absolute inset-0 w-full h-full object-cover group-hover:scale-105 transition-transform duration-500\"\n                  />\n                  <div className=\"absolute inset-0 bg-black/40 z-10 flex items-center justify-center\">\n                    <h3 className=\"text-2xl font-bold text-white\">Легковые автомобили</h3>\n                  </div>\n                </div>\n                <div className=\"p-6 glass backdrop-blur-sm bg-background/30\">\n                  <p className=\"text-muted-foreground mb-4\">\n                    Служебные и представительские автомобили любых марок для корпоративных нужд\n                  </p>\n                  <Button \n                    variant=\"outline\" \n                    className=\"w-full\"\n                    onClick={() => {\n                      const element = document.getElementById('application');\n                      element?.scrollIntoView({ behavior: 'smooth' });\n                    }}\n                  >\n                    Оформить заявку <ArrowRight className=\"ml-2 h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n\n              <div className=\"rounded-xl overflow-hidden group\">\n                <div className=\"h-64 relative\">\n                  <img \n                    src=\"/trucks.jpg\" \n                    alt=\"Грузовые автомобили\"\n                    className=\"absolute inset-0 w-full h-full object-cover group-hover:scale-105 transition-transform duration-500\"\n                  />\n                  <div className=\"absolute inset-0 bg-black/40 z-10 flex items-center justify-center\">\n                    <h3 className=\"text-2xl font-bold text-white\">Грузовые автомобили</h3>\n                  </div>\n                </div>\n                <div className=\"p-6 glass backdrop-blur-sm bg-background/30\">\n                  <p className=\"text-muted-foreground mb-4\">\n                    Грузовики, самосвалы, седельные тягачи и другие транспортные средства для перевозки грузов\n                  </p>\n                  <Button \n                    variant=\"outline\" \n                    className=\"w-full\"\n                    onClick={() => {\n                      const element = document.getElementById('application');\n                      element?.scrollIntoView({ behavior: 'smooth' });\n                    }}\n                  >\n                    Оформить заявку <ArrowRight className=\"ml-2 h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n\n              <div className=\"rounded-xl overflow-hidden group\">\n                <div className=\"h-64 relative\">\n                  <img \n                    src=\"/commercial-vehicles.jpg\" \n                    alt=\"Коммерческий транспорт\"\n                    className=\"absolute inset-0 w-full h-full object-cover group-hover:scale-105 transition-transform duration-500\"\n                  />\n                  <div className=\"absolute inset-0 bg-black/40 z-10 flex items-center justify-center\">\n                    <h3 className=\"text-2xl font-bold text-white\">Коммерческий транспорт</h3>\n                  </div>\n                </div>\n                <div className=\"p-6 glass backdrop-blur-sm bg-background/30\">\n                  <p className=\"text-muted-foreground mb-4\">\n                    Микроавтобусы, фургоны, рефрижераторы и другие специализированные транспортные средства\n                  </p>\n                  <Button \n                    variant=\"outline\" \n                    className=\"w-full\"\n                    onClick={() => {\n                      const element = document.getElementById('application');\n                      element?.scrollIntoView({ behavior: 'smooth' });\n                    }}\n                  >\n                    Оформить заявку <ArrowRight className=\"ml-2 h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section className=\"py-16 bg-muted/30\" id=\"application\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"max-w-3xl mx-auto\">\n              <h2 className=\"text-3xl md:text-4xl font-bold mb-8 text-center\">Оставить заявку на лизинг автотранспорта</h2>\n              <p className=\"text-center text-muted-foreground mb-8\">\n                Заполните форму ниже, и наш специалист свяжется с вами в ближайшее время для консультации и расчета лизинговых платежей\n              </p>\n\n              <div className=\"p-8 rounded-lg glass backdrop-blur-sm bg-background/30\">\n                <form onSubmit={handleSubmit} className=\"space-y-6\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div className=\"space-y-2\">\n                      <label htmlFor=\"name\" className=\"block font-medium\">\n                        Ваше имя *\n                      </label>\n                      <input\n                        id=\"name\"\n                        type=\"text\"\n                        value={formData.name}\n                        onChange={handleInputChange}\n                        className=\"w-full px-4 py-2 border border-border rounded-md bg-background/50 focus:outline-none focus:ring-2 focus:ring-primary/50\"\n                        placeholder=\"Иван Иванов\"\n                        required\n                      />\n                    </div>\n                    <div className=\"space-y-2\">\n                      <label htmlFor=\"phone\" className=\"block font-medium\">\n                        Телефон *\n                      </label>\n                      <input\n                        id=\"phone\"\n                        type=\"tel\"\n                        value={formData.phone}\n                        onChange={handleInputChange}\n                        className=\"w-full px-4 py-2 border border-border rounded-md bg-background/50 focus:outline-none focus:ring-2 focus:ring-primary/50\"\n                        placeholder=\"+7 (___) ___-__-__\"\n                        required\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"email\" className=\"block font-medium\">\n                      Email *\n                    </label>\n                    <input\n                      id=\"email\"\n                      type=\"email\"\n                      value={formData.email}\n                      onChange={handleInputChange}\n                      className=\"w-full px-4 py-2 border border-border rounded-md bg-background/50 focus:outline-none focus:ring-2 focus:ring-primary/50\"\n                      placeholder=\"example@company.com\"\n                      required\n                    />\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"vehicle\" className=\"block font-medium\">\n                      Тип транспорта *\n                    </label>\n                    <select\n                      id=\"vehicle\"\n                      value={formData.vehicle}\n                      onChange={handleInputChange}\n                      className=\"w-full px-4 py-2 border border-border rounded-md bg-background/50 focus:outline-none focus:ring-2 focus:ring-primary/50\"\n                      required\n                    >\n                      <option value=\"\">Выберите тип транспорта</option>\n                      <option value=\"car\">Легковой автомобиль</option>\n                      <option value=\"truck\">Грузовой автомобиль</option>\n                      <option value=\"commercial\">Коммерческий транспорт</option>\n                      <option value=\"other\">Другое (укажите в комментарии)</option>\n                    </select>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"comment\" className=\"block font-medium\">\n                      Комментарий\n                    </label>\n                    <textarea\n                      id=\"comment\"\n                      rows={4}\n                      value={formData.comment}\n                      onChange={handleInputChange}\n                      className=\"w-full px-4 py-2 border border-border rounded-md bg-background/50 focus:outline-none focus:ring-2 focus:ring-primary/50\"\n                      placeholder=\"Укажите марку, модель автомобиля, предполагаемый срок лизинга и другие детали\"\n                    ></textarea>\n                  </div>\n\n                  <div className=\"pt-2\">\n                    <Button type=\"submit\" className=\"w-full\" disabled={isSubmitting}>\n                      {isSubmitting ? 'Отправляем...' : 'Отправить заявку'}\n                    </Button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </section>\n      </main>\n    </MainLayout>\n  );\n}","size_bytes":19228},"client/src/pages/services/nedvijimost-page.tsx":{"content":"import { MainLayout } from \"@/components/layout/main-layout\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { ArrowRight, Check } from \"lucide-react\";\nimport { useState } from \"react\"; // Import useState\n\nexport default function NedvijimostPage() {\n  const [formData, setFormData] = useState({ // State for form data\n    name: '',\n    phone: '',\n    email: '',\n    property: '',\n    comment: ''\n  });\n  const [errors, setErrors] = useState({}); // State for form errors\n\n  const handleChange = (e) => { // Handle input changes\n    const { id, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [id]: value\n    }));\n  };\n\n  const handleSubmit = async (e) => { // Handle form submission\n    e.preventDefault(); // Prevent default form submission\n\n    const newErrors = {}; // Initialize errors object\n    // Basic validation\n    if (!formData.name.trim()) {\n      newErrors.name = 'Поле \"Имя\" обязательно';\n    }\n    if (!formData.phone.trim()) {\n      newErrors.phone = 'Поле \"Телефон\" обязательно';\n    }\n    if (!formData.email.trim() || !/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Поле \"Email\" обязательно и должно быть корректным';\n    }\n    if (!formData.property) {\n      newErrors.property = 'Выберите \"Тип недвижимости\"';\n    }\n\n    setErrors(newErrors); // Set errors\n\n    if (Object.keys(newErrors).length === 0) { // If no errors\n      try {\n        const response = await fetch('/api/send-email', { // Send email to backend\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(formData),\n        });\n\n        if (response.ok) {\n          alert('Заявка успешно отправлена!'); // Show success message\n          setFormData({ // Reset form\n            name: '',\n            phone: '',\n            email: '',\n            property: '',\n            comment: ''\n          });\n        } else {\n          alert('Ошибка при отправке заявки. Попробуйте позже.'); // Show error message\n        }\n      } catch (error) {\n        console.error('Error sending email:', error); // Log error\n        alert('Произошла ошибка при отправке заявки.'); // Show generic error message\n      }\n    }\n  };\n\n\n  return (\n    <MainLayout>\n      <main className=\"flex-1\">\n        <section className=\"py-20 relative overflow-hidden\">\n          <div className=\"absolute inset-0 bg-gradient-to-b from-background to-background/80 z-10\"></div>\n          <div className=\"absolute inset-0 bg-[url('/bg-realestate.jpg')] bg-cover bg-center opacity-15\"></div>\n\n          <div className=\"container mx-auto px-4 relative z-20\">\n            <div className=\"max-w-4xl mx-auto\">\n              <h1 className=\"text-4xl md:text-5xl font-bold mb-8\">Лизинг недвижимости</h1>\n              <p className=\"text-xl mb-8 text-muted-foreground\">\n                Компания \"Инвест-Лизинг\" предлагает выгодные условия лизинга коммерческой недвижимости. \n                Мы поможем вам приобрести офисные, торговые, складские и производственные помещения на оптимальных условиях.\n              </p>\n\n              <div className=\"flex flex-wrap gap-4\">\n                <Button \n                  size=\"lg\"\n                  onClick={() => {\n                    const element = document.getElementById('application');\n                    element?.scrollIntoView({ behavior: 'smooth' });\n                  }}\n                >\n                  Оставить заявку\n                </Button>\n                <Button \n                  variant=\"outline\" \n                  size=\"lg\"\n                  onClick={() => {\n                    const element = document.getElementById('benefits');\n                    element?.scrollIntoView({ behavior: 'smooth' });\n                  }}\n                >\n                  Преимущества\n                </Button>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section className=\"py-16 bg-muted/30\" id=\"benefits\">\n          <div className=\"container mx-auto px-4\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-12 text-center\">Преимущества лизинга недвижимости</h2>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              <div className=\"p-6 rounded-lg glass backdrop-blur-sm bg-background/30 hover:shadow-lg transition-all\">\n                <div className=\"w-12 h-12 rounded-full bg-[#b9a046]/20 flex items-center justify-center mb-4\">\n                  <Check className=\"h-6 w-6 text-[#b9a046]\" />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Доступный первый взнос</h3>\n                <p className=\"text-muted-foreground\">\n                  От 20% стоимости объекта недвижимости, что существенно ниже, чем при ипотечном кредитовании\n                </p>\n              </div>\n\n              <div className=\"p-6 rounded-lg glass backdrop-blur-sm bg-background/30 hover:shadow-lg transition-all\">\n                <div className=\"w-12 h-12 rounded-full bg-[#b9a046]/20 flex items-center justify-center mb-4\">\n                  <Check className=\"h-6 w-6 text-[#b9a046]\" />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Длительный срок</h3>\n                <p className=\"text-muted-foreground\">\n                  Срок договора лизинга до 10 лет с возможностью последующего выкупа недвижимости\n                </p>\n              </div>\n\n              <div className=\"p-6 rounded-lg glass backdrop-blur-sm bg-background/30 hover:shadow-lg transition-all\">\n                <div className=\"w-12 h-12 rounded-full bg-[#b9a046]/20 flex items-center justify-center mb-4\">\n                  <Check className=\"h-6 w-6 text-[#b9a046]\" />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Налоговые преимущества</h3>\n                <p className=\"text-muted-foreground\">\n                  Лизинговые платежи в полном объеме относятся на затраты, уменьшая налогооблагаемую базу\n                </p>\n              </div>\n\n              <div className=\"p-6 rounded-lg glass backdrop-blur-sm bg-background/30 hover:shadow-lg transition-all\">\n                <div className=\"w-12 h-12 rounded-full bg-[#b9a046]/20 flex items-center justify-center mb-4\">\n                  <Check className=\"h-6 w-6 text-[#b9a046]\" />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Экономия на НДС</h3>\n                <p className=\"text-muted-foreground\">\n                  НДС, включенный в лизинговые платежи, принимается к вычету, что невозможно при обычной покупке\n                </p>\n              </div>\n\n              <div className=\"p-6 rounded-lg glass backdrop-blur-sm bg-background/30 hover:shadow-lg transition-all\">\n                <div className=\"w-12 h-12 rounded-full bg-[#b9a046]/20 flex items-center justify-center mb-4\">\n                  <Check className=\"h-6 w-6 text-[#b9a046]\" />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Сохранение ликвидности</h3>\n                <p className=\"text-muted-foreground\">\n                  Возможность использовать недвижимость без значительного оттока денежных средств из бизнеса\n                </p>\n              </div>\n\n              <div className=\"p-6 rounded-lg glass backdrop-blur-sm bg-background/30 hover:shadow-lg transition-all\">\n                <div className=\"w-12 h-12 rounded-full bg-[#b9a046]/20 flex items-center justify-center mb-4\">\n                  <Check className=\"h-6 w-6 text-[#b9a046]\" />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Упрощенная процедура</h3>\n                <p className=\"text-muted-foreground\">\n                  Более простая процедура оформления по сравнению с банковским кредитованием\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section className=\"py-16\">\n          <div className=\"container mx-auto px-4\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-12 text-center\">Виды недвижимости для лизинга</h2>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              <div className=\"rounded-xl overflow-hidden group\">\n                <div className=\"h-64 relative\">\n                  <img \n                    src=\"/office-realestate.jpg\" \n                    alt=\"Офисная недвижимость\"\n                    className=\"absolute inset-0 w-full h-full object-cover group-hover:scale-105 transition-transform duration-500\"\n                  />\n                  <div className=\"absolute inset-0 bg-black/40 z-10 flex items-center justify-center\">\n                    <h3 className=\"text-2xl font-bold text-white\">Офисная недвижимость</h3>\n                  </div>\n                </div>\n                <div className=\"p-6 glass backdrop-blur-sm bg-background/30\">\n                  <p className=\"text-muted-foreground mb-4\">\n                    Офисные здания и помещения различной площади в бизнес-центрах и отдельно стоящих зданиях\n                  </p>\n                  <Button \n                    variant=\"outline\" \n                    className=\"w-full\"\n                    onClick={() => {\n                      const element = document.getElementById('application');\n                      element?.scrollIntoView({ behavior: 'smooth' });\n                    }}\n                  >\n                    Оформить заявку <ArrowRight className=\"ml-2 h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n\n              <div className=\"rounded-xl overflow-hidden group\">\n                <div className=\"h-64 relative\">\n                  <img \n                    src=\"/retail-realestate.jpg\" \n                    alt=\"Торговая недвижимость\"\n                    className=\"absolute inset-0 w-full h-full object-cover group-hover:scale-105 transition-transform duration-500\"\n                  />\n                  <div className=\"absolute inset-0 bg-black/40 z-10 flex items-center justify-center\">\n                    <h3 className=\"text-2xl font-bold text-white\">Торговая недвижимость</h3>\n                  </div>\n                </div>\n                <div className=\"p-6 glass backdrop-blur-sm bg-background/30\">\n                  <p className=\"text-muted-foreground mb-4\">\n                    Помещения в торговых центрах, отдельно стоящие магазины, торговые павильоны и другие объекты\n                  </p>\n                  <Button \n                    variant=\"outline\" \n                    className=\"w-full\"\n                    onClick={() => {\n                      const element = document.getElementById('application');\n                      element?.scrollIntoView({ behavior: 'smooth' });\n                    }}\n                  >\n                    Оформить заявку <ArrowRight className=\"ml-2 h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n\n              <div className=\"rounded-xl overflow-hidden group\">\n                <div className=\"h-64 relative\">\n                  <img \n                    src=\"/warehouse-realestate.jpg\" \n                    alt=\"Производственная и складская недвижимость\"\n                    className=\"absolute inset-0 w-full h-full object-cover group-hover:scale-105 transition-transform duration-500\"\n                  />\n                  <div className=\"absolute inset-0 bg-black/40 z-10 flex items-center justify-center\">\n                    <h3 className=\"text-2xl font-bold text-white\">Производственная и складская недвижимость</h3>\n                  </div>\n                </div>\n                <div className=\"p-6 glass backdrop-blur-sm bg-background/30\">\n                  <p className=\"text-muted-foreground mb-4\">\n                    Складские комплексы, логистические терминалы, производственные помещения и промышленные здания\n                  </p>\n                  <Button \n                    variant=\"outline\" \n                    className=\"w-full\"\n                    onClick={() => {\n                      const element = document.getElementById('application');\n                      element?.scrollIntoView({ behavior: 'smooth' });\n                    }}\n                  >\n                    Оформить заявку <ArrowRight className=\"ml-2 h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section className=\"py-16 bg-muted/30\" id=\"application\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"max-w-3xl mx-auto\">\n              <h2 className=\"text-3xl md:text-4xl font-bold mb-8 text-center\">Оставить заявку на лизинг недвижимости</h2>\n              <p className=\"text-center text-muted-foreground mb-8\">\n                Заполните форму ниже, и наш специалист свяжется с вами в ближайшее время для консультации и расчета лизинговых платежей\n              </p>\n\n              <div className=\"p-8 rounded-lg glass backdrop-blur-sm bg-background/30\">\n                <form className=\"space-y-6\" onSubmit={handleSubmit}>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div className=\"space-y-2\">\n                      <label htmlFor=\"name\" className=\"block font-medium\">\n                        Ваше имя\n                      </label>\n                      <input\n                        id=\"name\"\n                        type=\"text\"\n                        className={`w-full px-4 py-2 border ${errors.name ? 'border-red-500' : 'border-border'} rounded-md bg-background/50 focus:outline-none focus:ring-2 ${errors.name ? 'focus:ring-red-500' : 'focus:ring-primary/50'}`}\n                        placeholder=\"Иван Иванов\"\n                        value={formData.name}\n                        onChange={handleChange}\n                      />\n                      {errors.name && <p className=\"text-red-500 text-sm\">{errors.name}</p>}\n                    </div>\n                    <div className=\"space-y-2\">\n                      <label htmlFor=\"phone\" className=\"block font-medium\">\n                        Телефон\n                      </label>\n                      <input\n                        id=\"phone\"\n                        type=\"tel\"\n                        className={`w-full px-4 py-2 border ${errors.phone ? 'border-red-500' : 'border-border'} rounded-md bg-background/50 focus:outline-none focus:ring-2 ${errors.phone ? 'focus:ring-red-500' : 'focus:ring-primary/50'}`}\n                        placeholder=\"+7 (___) ___-__-__\"\n                        value={formData.phone}\n                        onChange={handleChange}\n                      />\n                      {errors.phone && <p className=\"text-red-500 text-sm\">{errors.phone}</p>}\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"email\" className=\"block font-medium\">\n                      Email\n                    </label>\n                    <input\n                      id=\"email\"\n                      type=\"email\"\n                      className={`w-full px-4 py-2 border ${errors.email ? 'border-red-500' : 'border-border'} rounded-md bg-background/50 focus:outline-none focus:ring-2 ${errors.email ? 'focus:ring-red-500' : 'focus:ring-primary/50'}`}\n                      placeholder=\"example@company.com\"\n                      value={formData.email}\n                      onChange={handleChange}\n                    />\n                    {errors.email && <p className=\"text-red-500 text-sm\">{errors.email}</p>}\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"property\" className=\"block font-medium\">\n                      Тип недвижимости\n                    </label>\n                    <select\n                      id=\"property\"\n                      className={`w-full px-4 py-2 border ${errors.property ? 'border-red-500' : 'border-border'} rounded-md bg-background/50 focus:outline-none focus:ring-2 ${errors.property ? 'focus:ring-red-500' : 'focus:ring-primary/50'}`}\n                      value={formData.property}\n                      onChange={handleChange}\n                    >\n                      <option value=\"\">Выберите тип недвижимости</option>\n                      <option value=\"office\">Офисная недвижимость</option>\n                      <option value=\"retail\">Торговая недвижимость</option>\n                      <option value=\"warehouse\">Складская недвижимость</option>\n                      <option value=\"industrial\">Производственная недвижимость</option>\n                      <option value=\"other\">Другое (укажите в комментарии)</option>\n                    </select>\n                    {errors.property && <p className=\"text-red-500 text-sm\">{errors.property}</p>}\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"comment\" className=\"block font-medium\">\n                      Комментарий\n                    </label>\n                    <textarea\n                      id=\"comment\"\n                      rows={4}\n                      className=\"w-full px-4 py-2 border border-border rounded-md bg-background/50 focus:outline-none focus:ring-2 focus:ring-primary/50\"\n                      placeholder=\"Укажите площадь, местоположение и другие параметры интересующей вас недвижимости\"\n                      value={formData.comment}\n                      onChange={handleChange}\n                    ></textarea>\n                  </div>\n\n                  <div className=\"pt-2\">\n                    <Button type=\"submit\" className=\"w-full\">\n                      Отправить заявку\n                    </Button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </section>\n      </main>\n    </MainLayout>\n  );\n}","size_bytes":19820},"client/src/pages/services/oborudovanie-page.tsx":{"content":"import { MainLayout } from \"@/components/layout/main-layout\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { ArrowRight, Check } from \"lucide-react\";\nimport React, { useState } from 'react';\n\nexport default function OborudovaniePage() {\n  const [formData, setFormData] = useState({\n    name: '',\n    phone: '',\n    email: '',\n    equipment: '',\n    comment: '',\n  });\n\n  const [errors, setErrors] = useState({});\n\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [id]: value,\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const newErrors = {};\n    if (!formData.name) newErrors.name = 'Имя обязательно';\n    if (!formData.phone) newErrors.phone = 'Телефон обязателен';\n    if (!formData.email) newErrors.email = 'Email обязателен';\n    if (!formData.equipment) newErrors.equipment = 'Тип оборудования обязателен';\n\n    setErrors(newErrors);\n\n    if (Object.keys(newErrors).length === 0) {\n      try {\n        const response = await fetch('/api/send-email', { // Assuming you have an API route for sending emails\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ ...formData, to: 'inv.lizing@yandex.ru' }),\n        });\n\n        if (response.ok) {\n          alert('Заявка успешно отправлена!');\n          setFormData({\n            name: '',\n            phone: '',\n            email: '',\n            equipment: '',\n            comment: '',\n          });\n        } else {\n          alert('Ошибка при отправке заявки. Попробуйте позже.');\n        }\n      } catch (error) {\n        console.error('Error sending email:', error);\n        alert('Произошла ошибка при отправке заявки.');\n      }\n    }\n  };\n\n  return (\n    <MainLayout>\n      <main className=\"flex-1\">\n        <section className=\"py-20 relative overflow-hidden\">\n          <div className=\"absolute inset-0 bg-gradient-to-b from-background to-background/80 z-10\"></div>\n          <div className=\"absolute inset-0 bg-[url('/bg-equipment.jpg')] bg-cover bg-center opacity-15\"></div>\n\n          <div className=\"container mx-auto px-4 relative z-20\">\n            <div className=\"max-w-4xl mx-auto\">\n              <h1 className=\"text-4xl md:text-5xl font-bold mb-8\">Лизинг оборудования</h1>\n              <p className=\"text-xl mb-8 text-muted-foreground\">\n                Мы предлагаем выгодные условия лизинга любого производственного, медицинского и торгового оборудования.\n                Компания \"Инвест-Лизинг\" поможет вам модернизировать производство без значительных единовременных затрат.\n              </p>\n\n              <div className=\"flex flex-wrap gap-4\">\n                <Button \n                  size=\"lg\"\n                  onClick={() => {\n                    const element = document.getElementById('application');\n                    element?.scrollIntoView({ behavior: 'smooth' });\n                  }}\n                >\n                  Оставить заявку\n                </Button>\n                <Button \n                  variant=\"outline\" \n                  size=\"lg\"\n                  onClick={() => {\n                    const element = document.getElementById('benefits');\n                    element?.scrollIntoView({ behavior: 'smooth' });\n                  }}\n                >\n                  Преимущества\n                </Button>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section className=\"py-16 bg-muted/30\" id=\"benefits\">\n          <div className=\"container mx-auto px-4\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-12 text-center\">Преимущества лизинга оборудования</h2>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              <div className=\"p-6 rounded-lg glass backdrop-blur-sm bg-background/30 hover:shadow-lg transition-all\">\n                <div className=\"w-12 h-12 rounded-full bg-[#b9a046]/20 flex items-center justify-center mb-4\">\n                  <Check className=\"h-6 w-6 text-[#b9a046]\" />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Низкие начальные вложения</h3>\n                <p className=\"text-muted-foreground\">\n                  Первоначальный взнос от 10%, что позволяет начать использовать оборудование без существенных капитальных затрат\n                </p>\n              </div>\n\n              <div className=\"p-6 rounded-lg glass backdrop-blur-sm bg-background/30 hover:shadow-lg transition-all\">\n                <div className=\"w-12 h-12 rounded-full bg-[#b9a046]/20 flex items-center justify-center mb-4\">\n                  <Check className=\"h-6 w-6 text-[#b9a046]\" />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Гибкий график платежей</h3>\n                <p className=\"text-muted-foreground\">\n                  Возможность настроить график платежей под сезонность бизнеса или особенности производственного цикла\n                </p>\n              </div>\n\n              <div className=\"p-6 rounded-lg glass backdrop-blur-sm bg-background/30 hover:shadow-lg transition-all\">\n                <div className=\"w-12 h-12 rounded-full bg-[#b9a046]/20 flex items-center justify-center mb-4\">\n                  <Check className=\"h-6 w-6 text-[#b9a046]\" />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Налоговые льготы</h3>\n                <p className=\"text-muted-foreground\">\n                  Лизинговые платежи в полном объеме относятся на себестоимость, а НДС к вычету\n                </p>\n              </div>\n\n              <div className=\"p-6 rounded-lg glass backdrop-blur-sm bg-background/30 hover:shadow-lg transition-all\">\n                <div className=\"w-12 h-12 rounded-full bg-[#b9a046]/20 flex items-center justify-center mb-4\">\n                  <Check className=\"h-6 w-6 text-[#b9a046]\" />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Ускоренная амортизация</h3>\n                <p className=\"text-muted-foreground\">\n                  Возможность применения коэффициента ускоренной амортизации до 3, что позволяет снизить налог на имущество\n                </p>\n              </div>\n\n              <div className=\"p-6 rounded-lg glass backdrop-blur-sm bg-background/30 hover:shadow-lg transition-all\">\n                <div className=\"w-12 h-12 rounded-full bg-[#b9a046]/20 flex items-center justify-center mb-4\">\n                  <Check className=\"h-6 w-6 text-[#b9a046]\" />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Простота получения</h3>\n                <p className=\"text-muted-foreground\">\n                  Упрощенная процедура оформления по сравнению с кредитом и минимальный пакет документов\n                </p>\n              </div>\n\n              <div className=\"p-6 rounded-lg glass backdrop-blur-sm bg-background/30 hover:shadow-lg transition-all\">\n                <div className=\"w-12 h-12 rounded-full bg-[#b9a046]/20 flex items-center justify-center mb-4\">\n                  <Check className=\"h-6 w-6 text-[#b9a046]\" />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Сервисное обслуживание</h3>\n                <p className=\"text-muted-foreground\">\n                  Возможность включения в договор условий по обслуживанию и ремонту оборудования\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section className=\"py-16\">\n          <div className=\"container mx-auto px-4\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-12 text-center\">Виды оборудования для лизинга</h2>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              <div className=\"rounded-xl overflow-hidden group\">\n                <div className=\"h-64 relative\">\n                  <img \n                    src=\"/manufacturing-equipment.jpg\" \n                    alt=\"Производственное оборудование\"\n                    className=\"absolute inset-0 w-full h-full object-cover group-hover:scale-105 transition-transform duration-500\"\n                  />\n                  <div className=\"absolute inset-0 bg-black/40 z-10 flex items-center justify-center\">\n                    <h3 className=\"text-2xl font-bold text-white\">Производственное оборудование</h3>\n                  </div>\n                </div>\n                <div className=\"p-6 glass backdrop-blur-sm bg-background/30\">\n                  <p className=\"text-muted-foreground mb-4\">\n                    Станки, производственные линии, конвейеры, промышленное оборудование для любых отраслей\n                  </p>\n                  <Button \n                    variant=\"outline\" \n                    className=\"w-full\"\n                    onClick={() => {\n                      const element = document.getElementById('application');\n                      element?.scrollIntoView({ behavior: 'smooth' });\n                    }}\n                  >\n                    Оформить заявку <ArrowRight className=\"ml-2 h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n\n              <div className=\"rounded-xl overflow-hidden group\">\n                <div className=\"h-64 relative\">\n                  <img \n                    src=\"/medical-equipment.jpg\" \n                    alt=\"Медицинское оборудование\"\n                    className=\"absolute inset-0 w-full h-full object-cover group-hover:scale-105 transition-transform duration-500\"\n                  />\n                  <div className=\"absolute inset-0 bg-black/40 z-10 flex items-center justify-center\">\n                    <h3 className=\"text-2xl font-bold text-white\">Медицинское оборудование</h3>\n                  </div>\n                </div>\n                <div className=\"p-6 glass backdrop-blur-sm bg-background/30\">\n                  <p className=\"text-muted-foreground mb-4\">\n                    Диагностическое, лабораторное, реабилитационное и другое оборудование для здравоохранения\n                  </p>\n                  <Button \n                    variant=\"outline\" \n                    className=\"w-full\"\n                    onClick={() => {\n                      const element = document.getElementById('application');\n                      element?.scrollIntoView({ behavior: 'smooth' });\n                    }}\n                  >\n                    Оформить заявку <ArrowRight className=\"ml-2 h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n\n              <div className=\"rounded-xl overflow-hidden group\">\n                <div className=\"h-64 relative\">\n                  <img \n                    src=\"/retail-equipment.jpg\" \n                    alt=\"Торговое оборудование\"\n                    className=\"absolute inset-0 w-full h-full object-cover group-hover:scale-105 transition-transform duration-500\"\n                  />\n                  <div className=\"absolute inset-0 bg-black/40 z-10 flex items-center justify-center\">\n                    <h3 className=\"text-2xl font-bold text-white\">Торговое оборудование</h3>\n                  </div>\n                </div>\n                <div className=\"p-6 glass backdrop-blur-sm bg-background/30\">\n                  <p className=\"text-muted-foreground mb-4\">\n                    Холодильное, кассовое, выставочное оборудование, POS-системы для розничной торговли\n                  </p>\n                  <Button \n                    variant=\"outline\" \n                    className=\"w-full\"\n                    onClick={() => {\n                      const element = document.getElementById('application');\n                      element?.scrollIntoView({ behavior: 'smooth' });\n                    }}\n                  >\n                    Оформить заявку <ArrowRight className=\"ml-2 h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section className=\"py-16 bg-muted/30\" id=\"application\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"max-w-3xl mx-auto\">\n              <h2 className=\"text-3xl md:text-4xl font-bold mb-8 text-center\">Оставить заявку на лизинг оборудования</h2>\n              <p className=\"text-center text-muted-foreground mb-8\">\n                Заполните форму ниже, и наш специалист свяжется с вами в ближайшее время для консультации и расчета лизинговых платежей\n              </p>\n\n              <div className=\"p-8 rounded-lg glass backdrop-blur-sm bg-background/30\">\n                <form onSubmit={handleSubmit} className=\"space-y-6\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div className=\"space-y-2\">\n                      <label htmlFor=\"name\" className=\"block font-medium\">\n                        Ваше имя\n                      </label>\n                      <input\n                        id=\"name\"\n                        type=\"text\"\n                        value={formData.name}\n                        onChange={handleChange}\n                        className={`w-full px-4 py-2 border ${errors.name ? 'border-red-500' : 'border-border'} rounded-md bg-background/50 focus:outline-none focus:ring-2 ${errors.name ? 'focus:ring-red-500' : 'focus:ring-primary/50'}`}\n                        placeholder=\"Иван Иванов\"\n                      />\n                      {errors.name && <p className=\"text-red-500 text-sm\">{errors.name}</p>}\n                    </div>\n                    <div className=\"space-y-2\">\n                      <label htmlFor=\"phone\" className=\"block font-medium\">\n                        Телефон\n                      </label>\n                      <input\n                        id=\"phone\"\n                        type=\"tel\"\n                        value={formData.phone}\n                        onChange={handleChange}\n                        className={`w-full px-4 py-2 border ${errors.phone ? 'border-red-500' : 'border-border'} rounded-md bg-background/50 focus:outline-none focus:ring-2 ${errors.phone ? 'focus:ring-red-500' : 'focus:ring-primary/50'}`}\n                        placeholder=\"+7 (___) ___-__-__\"\n                      />\n                      {errors.phone && <p className=\"text-red-500 text-sm\">{errors.phone}</p>}\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"email\" className=\"block font-medium\">\n                      Email\n                    </label>\n                    <input\n                      id=\"email\"\n                      type=\"email\"\n                      value={formData.email}\n                      onChange={handleChange}\n                      className={`w-full px-4 py-2 border ${errors.email ? 'border-red-500' : 'border-border'} rounded-md bg-background/50 focus:outline-none focus:ring-2 ${errors.email ? 'focus:ring-red-500' : 'focus:ring-primary/50'}`}\n                      placeholder=\"example@company.com\"\n                    />\n                    {errors.email && <p className=\"text-red-500 text-sm\">{errors.email}</p>}\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"equipment\" className=\"block font-medium\">\n                      Тип оборудования\n                    </label>\n                    <select\n                      id=\"equipment\"\n                      value={formData.equipment}\n                      onChange={handleChange}\n                      className={`w-full px-4 py-2 border ${errors.equipment ? 'border-red-500' : 'border-border'} rounded-md bg-background/50 focus:outline-none focus:ring-2 ${errors.equipment ? 'focus:ring-red-500' : 'focus:ring-primary/50'}`}\n                    >\n                      <option value=\"\">Выберите тип оборудования</option>\n                      <option value=\"manufacturing\">Производственное оборудование</option>\n                      <option value=\"medical\">Медицинское оборудование</option>\n                      <option value=\"retail\">Торговое оборудование</option>\n                      <option value=\"other\">Другое (укажите в комментарии)</option>\n                    </select>\n                    {errors.equipment && <p className=\"text-red-500 text-sm\">{errors.equipment}</p>}\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"comment\" className=\"block font-medium\">\n                      Комментарий\n                    </label>\n                    <textarea\n                      id=\"comment\"\n                      rows={4}\n                      value={formData.comment}\n                      onChange={handleChange}\n                      className=\"w-full px-4 py-2 border border-border rounded-md bg-background/50 focus:outline-none focus:ring-2 focus:ring-primary/50\"\n                      placeholder=\"Укажите модель оборудования, предполагаемый срок лизинга и другие детали\"\n                    ></textarea>\n                  </div>\n\n                  <div className=\"pt-2\">\n                    <Button type=\"submit\" className=\"w-full\">\n                      Отправить заявку\n                    </Button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </section>\n      </main>\n    </MainLayout>\n  );\n}","size_bytes":19336},"client/src/pages/services/spectechnika-page.tsx":{"content":"import { MainLayout } from \"@/components/layout/main-layout\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { ArrowRight, Check } from \"lucide-react\";\nimport { useState } from \"react\";\n\nexport default function SpectechnikaPage() {\n  const [formData, setFormData] = useState({\n    name: '',\n    phone: '',\n    email: '',\n    equipment: '',\n    comment: ''\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\n    const { id, value } = e.target;\n    setFormData(prev => ({ ...prev, [id]: value }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Валидация обязательных полей\n    if (!formData.name.trim()) {\n      alert('Пожалуйста, введите ваше имя');\n      return;\n    }\n    \n    if (!formData.phone.trim()) {\n      alert('Пожалуйста, введите ваш телефон');\n      return;\n    }\n    \n    if (!formData.email.trim()) {\n      alert('Пожалуйста, введите ваш email');\n      return;\n    }\n    \n    if (!formData.equipment) {\n      alert('Пожалуйста, выберите тип техники');\n      return;\n    }\n    \n    // Простая валидация email\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(formData.email)) {\n      alert('Пожалуйста, введите корректный email адрес');\n      return;\n    }\n    \n    setIsSubmitting(true);\n    \n    try {\n      const response = await fetch('/api/send-application', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          ...formData,\n          serviceType: 'Спецтехника',\n          recipientEmail: 'inv.lizing@yandex.ru'\n        }),\n      });\n      \n      if (response.ok) {\n        alert('Заявка успешно отправлена! Мы свяжемся с вами в ближайшее время.');\n        setFormData({\n          name: '',\n          phone: '',\n          email: '',\n          equipment: '',\n          comment: ''\n        });\n      } else {\n        alert('Произошла ошибка при отправке заявки. Пожалуйста, попробуйте еще раз.');\n      }\n    } catch (error) {\n      console.error('Error sending application:', error);\n      alert('Произошла ошибка при отправке заявки. Пожалуйста, попробуйте еще раз.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return (\n    <MainLayout>\n      <main className=\"flex-1\">\n        <section className=\"py-20 relative overflow-hidden\">\n          <div className=\"absolute inset-0 bg-gradient-to-b from-background to-background/80 z-10\"></div>\n          <div className=\"absolute inset-0 bg-[url('/bg-spectechnika.jpg')] bg-cover bg-center opacity-15\"></div>\n\n          <div className=\"container mx-auto px-4 relative z-20\">\n            <div className=\"max-w-4xl mx-auto\">\n              <h1 className=\"text-4xl md:text-5xl font-bold mb-8\">Лизинг спецтехники</h1>\n              <p className=\"text-xl mb-8 text-muted-foreground\">\n                Компания \"Инвест-Лизинг\" предлагает выгодные условия лизинга спецтехники для бизнеса любого масштаба. \n                Мы помогаем приобрести строительную, сельскохозяйственную, коммунальную и другую спецтехнику на оптимальных условиях.\n              </p>\n\n              <div className=\"flex flex-wrap gap-4\">\n                <Button \n                  size=\"lg\"\n                  onClick={() => {\n                    const element = document.getElementById('application');\n                    element?.scrollIntoView({ behavior: 'smooth' });\n                  }}\n                >\n                  Оставить заявку\n                </Button>\n                <Button \n                  variant=\"outline\" \n                  size=\"lg\"\n                  onClick={() => {\n                    const element = document.getElementById('benefits');\n                    element?.scrollIntoView({ behavior: 'smooth' });\n                  }}\n                >\n                  Преимущества\n                </Button>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section className=\"py-16 bg-muted/30\" id=\"benefits\">\n          <div className=\"container mx-auto px-4\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-12 text-center\">Преимущества лизинга спецтехники</h2>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              <div className=\"p-6 rounded-lg glass backdrop-blur-sm bg-background/30 hover:shadow-lg transition-all\">\n                <div className=\"w-12 h-12 rounded-full bg-[#b9a046]/20 flex items-center justify-center mb-4\">\n                  <Check className=\"h-6 w-6 text-[#b9a046]\" />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Минимальный первоначальный взнос</h3>\n                <p className=\"text-muted-foreground\">\n                  От 10% стоимости приобретаемой техники, что позволяет сохранить оборотные средства\n                </p>\n              </div>\n\n              <div className=\"p-6 rounded-lg glass backdrop-blur-sm bg-background/30 hover:shadow-lg transition-all\">\n                <div className=\"w-12 h-12 rounded-full bg-[#b9a046]/20 flex items-center justify-center mb-4\">\n                  <Check className=\"h-6 w-6 text-[#b9a046]\" />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Гибкие условия</h3>\n                <p className=\"text-muted-foreground\">\n                  Индивидуальный график платежей с учетом сезонности бизнеса и особенностей денежных потоков\n                </p>\n              </div>\n\n              <div className=\"p-6 rounded-lg glass backdrop-blur-sm bg-background/30 hover:shadow-lg transition-all\">\n                <div className=\"w-12 h-12 rounded-full bg-[#b9a046]/20 flex items-center justify-center mb-4\">\n                  <Check className=\"h-6 w-6 text-[#b9a046]\" />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Ускоренная амортизация</h3>\n                <p className=\"text-muted-foreground\">\n                  Позволяет оптимизировать налогообложение и обновлять парк техники быстрее\n                </p>\n              </div>\n\n              <div className=\"p-6 rounded-lg glass backdrop-blur-sm bg-background/30 hover:shadow-lg transition-all\">\n                <div className=\"w-12 h-12 rounded-full bg-[#b9a046]/20 flex items-center justify-center mb-4\">\n                  <Check className=\"h-6 w-6 text-[#b9a046]\" />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Налоговые преимущества</h3>\n                <p className=\"text-muted-foreground\">\n                  НДС в составе лизинговых платежей принимается к вычету, а сами платежи относятся на себестоимость\n                </p>\n              </div>\n\n              <div className=\"p-6 rounded-lg glass backdrop-blur-sm bg-background/30 hover:shadow-lg transition-all\">\n                <div className=\"w-12 h-12 rounded-full bg-[#b9a046]/20 flex items-center justify-center mb-4\">\n                  <Check className=\"h-6 w-6 text-[#b9a046]\" />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Быстрое оформление</h3>\n                <p className=\"text-muted-foreground\">\n                  Минимальный пакет документов и быстрое принятие решения по заявке — от 1 дня\n                </p>\n              </div>\n\n              <div className=\"p-6 rounded-lg glass backdrop-blur-sm bg-background/30 hover:shadow-lg transition-all\">\n                <div className=\"w-12 h-12 rounded-full bg-[#b9a046]/20 flex items-center justify-center mb-4\">\n                  <Check className=\"h-6 w-6 text-[#b9a046]\" />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Страхование включено</h3>\n                <p className=\"text-muted-foreground\">\n                  Комплексное страхование техники уже включено в лизинговые платежи\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section className=\"py-16\">\n          <div className=\"container mx-auto px-4\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-12 text-center\">Виды спецтехники для лизинга</h2>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              <div className=\"rounded-xl overflow-hidden group\">\n                <div className=\"h-64 relative\">\n                  <img \n                    src=\"/construction-equipment.jpg\" \n                    alt=\"Строительная техника\"\n                    className=\"absolute inset-0 w-full h-full object-cover group-hover:scale-105 transition-transform duration-500\"\n                  />\n                  <div className=\"absolute inset-0 bg-black/40 z-10 flex items-center justify-center\">\n                    <h3 className=\"text-2xl font-bold text-white\">Строительная техника</h3>\n                  </div>\n                </div>\n                <div className=\"p-6 glass backdrop-blur-sm bg-background/30\">\n                  <p className=\"text-muted-foreground mb-4\">\n                    Экскаваторы, погрузчики, бульдозеры, краны, асфальтоукладчики и другая техника для строительства\n                  </p>\n                  <Button \n                    variant=\"outline\" \n                    className=\"w-full\"\n                    onClick={() => {\n                      const element = document.getElementById('application');\n                      element?.scrollIntoView({ behavior: 'smooth' });\n                    }}\n                  >\n                    Оформить заявку <ArrowRight className=\"ml-2 h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n\n              <div className=\"rounded-xl overflow-hidden group\">\n                <div className=\"h-64 relative\">\n                  <img \n                    src=\"/agricultural-equipment.jpg\" \n                    alt=\"Сельскохозяйственная техника\"\n                    className=\"absolute inset-0 w-full h-full object-cover group-hover:scale-105 transition-transform duration-500\"\n                  />\n                  <div className=\"absolute inset-0 bg-black/40 z-10 flex items-center justify-center\">\n                    <h3 className=\"text-2xl font-bold text-white\">Сельскохозяйственная техника</h3>\n                  </div>\n                </div>\n                <div className=\"p-6 glass backdrop-blur-sm bg-background/30\">\n                  <p className=\"text-muted-foreground mb-4\">\n                    Тракторы, комбайны, сеялки, опрыскиватели и другая техника для сельского хозяйства\n                  </p>\n                  <Button \n                    variant=\"outline\" \n                    className=\"w-full\"\n                    onClick={() => {\n                      const element = document.getElementById('application');\n                      element?.scrollIntoView({ behavior: 'smooth' });\n                    }}\n                  >\n                    Оформить заявку <ArrowRight className=\"ml-2 h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n\n              <div className=\"rounded-xl overflow-hidden group\">\n                <div className=\"h-64 relative\">\n                  <img \n                    src=\"/municipal-equipment.jpg\" \n                    alt=\"Коммунальная техника\"\n                    className=\"absolute inset-0 w-full h-full object-cover group-hover:scale-105 transition-transform duration-500\"\n                  />\n                  <div className=\"absolute inset-0 bg-black/40 z-10 flex items-center justify-center\">\n                    <h3 className=\"text-2xl font-bold text-white\">Коммунальная техника</h3>\n                  </div>\n                </div>\n                <div className=\"p-6 glass backdrop-blur-sm bg-background/30\">\n                  <p className=\"text-muted-foreground mb-4\">\n                    Мусоровозы, снегоуборочная техника, автогрейдеры, поливальные машины и другая техника для коммунальных служб\n                  </p>\n                  <Button \n                    variant=\"outline\" \n                    className=\"w-full\"\n                    onClick={() => {\n                      const element = document.getElementById('application');\n                      element?.scrollIntoView({ behavior: 'smooth' });\n                    }}\n                  >\n                    Оформить заявку <ArrowRight className=\"ml-2 h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section className=\"py-16 bg-muted/30\" id=\"application\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"max-w-3xl mx-auto\">\n              <h2 className=\"text-3xl md:text-4xl font-bold mb-8 text-center\">Оставить заявку на лизинг спецтехники</h2>\n              <p className=\"text-center text-muted-foreground mb-8\">\n                Заполните форму ниже, и наш специалист свяжется с вами в ближайшее время для консультации и расчета лизинговых платежей\n              </p>\n\n              <div className=\"p-8 rounded-lg glass backdrop-blur-sm bg-background/30\">\n                <form onSubmit={handleSubmit} className=\"space-y-6\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div className=\"space-y-2\">\n                      <label htmlFor=\"name\" className=\"block font-medium\">\n                        Ваше имя *\n                      </label>\n                      <input\n                        id=\"name\"\n                        type=\"text\"\n                        value={formData.name}\n                        onChange={handleInputChange}\n                        className=\"w-full px-4 py-2 border border-border rounded-md bg-background/50 focus:outline-none focus:ring-2 focus:ring-primary/50\"\n                        placeholder=\"Иван Иванов\"\n                        required\n                      />\n                    </div>\n                    <div className=\"space-y-2\">\n                      <label htmlFor=\"phone\" className=\"block font-medium\">\n                        Телефон *\n                      </label>\n                      <input\n                        id=\"phone\"\n                        type=\"tel\"\n                        value={formData.phone}\n                        onChange={handleInputChange}\n                        className=\"w-full px-4 py-2 border border-border rounded-md bg-background/50 focus:outline-none focus:ring-2 focus:ring-primary/50\"\n                        placeholder=\"+7 (___) ___-__-__\"\n                        required\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"email\" className=\"block font-medium\">\n                      Email *\n                    </label>\n                    <input\n                      id=\"email\"\n                      type=\"email\"\n                      value={formData.email}\n                      onChange={handleInputChange}\n                      className=\"w-full px-4 py-2 border border-border rounded-md bg-background/50 focus:outline-none focus:ring-2 focus:ring-primary/50\"\n                      placeholder=\"example@company.com\"\n                      required\n                    />\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"equipment\" className=\"block font-medium\">\n                      Тип техники *\n                    </label>\n                    <select\n                      id=\"equipment\"\n                      value={formData.equipment}\n                      onChange={handleInputChange}\n                      className=\"w-full px-4 py-2 border border-border rounded-md bg-background/50 focus:outline-none focus:ring-2 focus:ring-primary/50\"\n                      required\n                    >\n                      <option value=\"\">Выберите тип техники</option>\n                      <option value=\"construction\">Строительная техника</option>\n                      <option value=\"agricultural\">Сельскохозяйственная техника</option>\n                      <option value=\"municipal\">Коммунальная техника</option>\n                      <option value=\"other\">Другое (укажите в комментарии)</option>\n                    </select>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"comment\" className=\"block font-medium\">\n                      Комментарий\n                    </label>\n                    <textarea\n                      id=\"comment\"\n                      rows={4}\n                      value={formData.comment}\n                      onChange={handleInputChange}\n                      className=\"w-full px-4 py-2 border border-border rounded-md bg-background/50 focus:outline-none focus:ring-2 focus:ring-primary/50\"\n                      placeholder=\"Укажите интересующую вас модель техники, предполагаемый срок лизинга и другие детали\"\n                    ></textarea>\n                  </div>\n\n                  <div className=\"pt-2\">\n                    <Button type=\"submit\" className=\"w-full\" disabled={isSubmitting}>\n                      {isSubmitting ? 'Отправляем...' : 'Отправить заявку'}\n                    </Button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </section>\n      </main>\n    </MainLayout>\n  );\n}","size_bytes":19488},"attached_assets/content-1756363797897.md":{"content":"## Города\n\n- Краснодар\n- Нижний Новгород\n- Санкт-Петербург\n- Тамбов\n- Тольятти\n- Тюмень\n- Ульяновск\n- Уфа\n- Челябинск\n\n# Вакансии\n\n- Менеджер по лизингу\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Требования:**\n\n\n\n\n\n\n\n- высшее образование;\n- опыт успешных продаж в сфере финансовых услуг от 1 года;\n\n**Обязанности:**\n\n- активный поиск и привлечение потенциальных клиентов;\n- сбор первичных документов по клиенту;\n- подготовка и заключение договоров: финансовой аренды (лизинга), купли-продажи, поручительства и т.п.;\n- контроль исполнения договора до полного погашения всех обязательств.\n\n**Условия:**\n\n- полная занятость, полный день;\n- график работы: пн . \\- пт. с 8-00 до 17-00;\n- полный социальный пакет;\n- официальное трудоустройство;\n- корпоративное обучение.\n\n- Менеджер по лизингу\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Требования:**\n\n\n\n\n\n\n\n- высшее образование;\n- опыт успешных продаж в сфере финансовых услуг от 1 года;\n\n**Обязанности:**\n\n- активный поиск и привлечение потенциальных клиентов;\n- сбор первичных документов по клиенту;\n- подготовка и заключение договоров: финансовой аренды (лизинга), купли-продажи, поручительства и т.п.;\n- контроль исполнения договора до полного погашения всех обязательств.\n\n**Условия:**\n\n- полная занятость, полный день;\n- график работы: пн . \\- пт. с 8-00 до 17-00;\n- полный социальный пакет;\n- официальное трудоустройство;\n- корпоративное обучение.\n\n- Менеджер по лизингу\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Требования:**\n\n\n\n\n\n\n\n- высшее образование;\n- опыт успешных продаж в сфере финансовых услуг от 1 года;\n\n**Обязанности:**\n\n- активный поиск и привлечение потенциальных клиентов;\n- сбор первичных документов по клиенту;\n- подготовка и заключение договоров: финансовой аренды (лизинга), купли-продажи, поручительства и т.п.;\n- контроль исполнения договора до полного погашения всех обязательств.\n\n**Условия:**\n\n- полная занятость, полный день;\n- график работы: пн . \\- пт. с 8-00 до 17-00;\n- полный социальный пакет;\n- официальное трудоустройство;\n- корпоративное обучение.\n\n- Менеджер по лизингу\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Требования:**\n\n\n\n\n\n\n\n- высшее образование;\n- опыт успешных продаж в сфере финансовых услуг от 1 года;\n\n**Обязанности:**\n\n- активный поиск и привлечение потенциальных клиентов;\n- сбор первичных документов по клиенту;\n- подготовка и заключение договоров: финансовой аренды (лизинга), купли-продажи, поручительства и т.п.;\n- контроль исполнения договора до полного погашения всех обязательств.\n\n**Условия:**\n\n- полная занятость, полный день;\n- график работы: пн . \\- пт. с 8-00 до 17-00;\n- полный социальный пакет;\n- официальное трудоустройство;\n- корпоративное обучение.\n\n- Менеджер по лизингу\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Требования:**\n\n\n\n\n\n\n\n- высшее образование;\n- опыт успешных продаж в сфере финансовых услуг от 1 года;\n\n**Обязанности:**\n\n- активный поиск и привлечение потенциальных клиентов;\n- сбор первичных документов по клиенту;\n- подготовка и заключение договоров: финансовой аренды (лизинга), купли-продажи, поручительства и т.п.;\n- контроль исполнения договора до полного погашения всех обязательств.\n\n**Условия:**\n\n- полная занятость, полный день;\n- график работы: пн . \\- пт. с 8-00 до 17-00;\n- полный социальный пакет;\n- официальное трудоустройство;\n- корпоративное обучение.\n\n- Менеджер по лизингу\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Требования:**\n\n\n\n\n\n\n\n- высшее образование;\n- опыт успешных продаж в сфере финансовых услуг от 1 года;\n\n**Обязанности:**\n\n- активный поиск и привлечение потенциальных клиентов;\n- сбор первичных документов по клиенту;\n- подготовка и заключение договоров: финансовой аренды (лизинга), купли-продажи, поручительства и т.п.;\n- контроль исполнения договора до полного погашения всех обязательств.\n\n**Условия:**\n\n- полная занятость, полный день;\n- график работы: пн . \\- пт. с 8-00 до 17-00;\n- полный социальный пакет;\n- официальное трудоустройство;\n- корпоративное обучение.\n\n- Менеджер по лизингу\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Требования:**\n\n\n\n\n\n\n\n- высшее образование;\n- опыт успешных продаж в сфере финансовых услуг от 1 года;\n\n**Обязанности:**\n\n- активный поиск и привлечение потенциальных клиентов;\n- сбор первичных документов по клиенту;\n- подготовка и заключение договоров: финансовой аренды (лизинга), купли-продажи, поручительства и т.п.;\n- контроль исполнения договора до полного погашения всех обязательств.\n\n**Условия:**\n\n- полная занятость, полный день;\n- график работы: пн . \\- пт. с 8-00 до 17-00;\n- полный социальный пакет;\n- официальное трудоустройство;\n- корпоративное обучение.\n\n- Менеджер по лизингу\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Требования:**\n\n\n\n\n\n\n\n- высшее образование;\n- опыт успешных продаж в сфере финансовых услуг от 1 года;\n\n**Обязанности:**\n\n- активный поиск и привлечение потенциальных клиентов;\n- сбор первичных документов по клиенту;\n- подготовка и заключение договоров: финансовой аренды (лизинга), купли-продажи, поручительства и т.п.;\n- контроль исполнения договора до полного погашения всех обязательств.\n\n**Условия:**\n\n- полная занятость, полный день;\n- график работы: пн . \\- пт. с 8-00 до 17-00;\n- полный социальный пакет;\n- официальное трудоустройство;\n- корпоративное обучение.\n\n- Менеджер по лизингу\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Требования:**\n\n\n\n\n\n\n\n- высшее образование;\n- опыт успешных продаж в сфере финансовых услуг от 1 года;\n\n**Обязанности:**\n\n- активный поиск и привлечение потенциальных клиентов;\n- сбор первичных документов по клиенту;\n- подготовка и заключение договоров: финансовой аренды (лизинга), купли-продажи, поручительства и т.п.;\n- контроль исполнения договора до полного погашения всех обязательств.\n\n**Условия:**\n\n- полная занятость, полный день;\n- график работы: пн . \\- пт. с 8-00 до 17-00;\n- полный социальный пакет;\n- официальное трудоустройство;\n- корпоративное обучение.\n\nВаше имя\n\nЖелаемый срок лизинга, мес\n\n1 год3 лет5 лет\n\nСтоимость имущества, руб\n\n100 000 ₽100 000 000 ₽300 000 000 ₽\n\nТелефон\n\nИНН\n\nАвансовый платёж, %\n\n0%25%49%\n\nЭлектронная почта\n\nСтавка удорожания 15%\n\nСроком на 3 года\n\nСумма финансирования 7 020 000 ₽\n\nЕжемесячный платёж 309 661 ₽\n\nКомментарий\n\nСогласие на обработку  [персональных данных](https://investl.ru/upload/iblock/063/77j17jnlutk5mjsev6mjlg33xrb7y25j.pdf)\n\nРасчёты носят ознакомительный характер и не являются офертой\n\n\\\\* \\- обязательное поле\n\nОставить заявку","size_bytes":10467},"attached_assets/content-1756369503789.md":{"content":"- Автотранспорт\n- Оборудование\n\n- - ![Логотип ООО «РБА-Челябинск»](https://investl.ru/upload/iblock/23b/32f48sisfs82qma8o03wuy3ryxc83ow1.png%201x)[Переход на страницу ООО «РБА-Челябинск»](http://www.rbauto.ru/ \"Переход на страницу ООО «РБА-Челябинск»\")\n- ![Логотип ОАО «ЧКПЗ»](https://investl.ru/upload/iblock/7d0/gjrqudrjzha22z7tuapvejnd9l3kox57.jpg%201x)[Переход на страницу ОАО «ЧКПЗ»](https://www.chkpz.ru/catalog/cat7/ \"Переход на страницу ОАО «ЧКПЗ»\")\n- ![Логотип ЗАО «Интертранссервис»](https://investl.ru/upload/iblock/bda/wcjh3umlcqg90bkxo341yp7lt7qys2dm.png%201x)[Переход на страницу ЗАО «Интертранссервис»](http://intertransservice.ru/ \"Переход на страницу ЗАО «Интертранссервис»\")\n\n- ![Логотип ООО ТСК «УралПромИнвест»](https://investl.ru/upload/iblock/55b/3vfrdbcxfrniafgaa0zfmyuwz8ph1z72.png%201x)[Переход на страницу ООО ТСК «УралПромИнвест»](http://www.ural-beton.ru/ \"Переход на страницу ООО ТСК «УралПромИнвест»\")\n- ![Логотип ООО «Гирд-Автофургон»](https://investl.ru/upload/iblock/4c2/s3n9ouhdpcm4qkjy1ritytzaz8upv0cl.png%201x)[Переход на страницу ООО «Гирд-Автофургон»](http://gird.ru/ \"Переход на страницу ООО «Гирд-Автофургон»\")\n- ![Логотип ООО «Акцент-Авто М»](https://investl.ru/upload/iblock/5fc/pya3593mfqlhzeprawjqvyofmlnolwok.png%201x)[Переход на страницу ООО «Акцент-Авто М»](https://avtovek.lada.ru/ \"Переход на страницу ООО «Акцент-Авто М»\")\n\n- ![Логотип Группа компаний «Грузовая Техника»](https://investl.ru/upload/iblock/18b/25112p55d4965w2q4z34umj6qt6xk1zc.png%201x)[Переход на страницу Группа компаний «Грузовая Техника»](http://gruz-tehnika.ru/ \"Переход на страницу Группа компаний «Грузовая Техника»\")\n- ![Логотип ООО «Спецмаш»](https://investl.ru/upload/iblock/9cc/wssn48kfxwv68o0k43r4wopljbd1wiri.png%201x)[Переход на страницу ООО «Спецмаш»](http://autospecmash.ru/ \"Переход на страницу ООО «Спецмаш»\")\n- ![Логотип ЛБР-Агромаркет](https://investl.ru/upload/iblock/2c6/40ctwrfq8u52v3j3cafhdl802s1vkax6.png%201x)[Переход на страницу ЛБР-Агромаркет](http://www.lbr.ru/ \"Переход на страницу ЛБР-Агромаркет\")\n\n- ![Логотип ООО ПКФ «Политранс»](https://investl.ru/upload/iblock/0b4/z4uaf7mlwnx4xy6bymg7h9xsuwvfef62.png%201x)[Переход на страницу ООО ПКФ «Политранс»](http://www.politrans.ru/ \"Переход на страницу ООО ПКФ «Политранс»\")\n- ![Логотип ООО «Русь-Агро»](https://investl.ru/upload/iblock/ac9/822884uk7fv8mrhnay5g3k4ws8smuqiv.png%201x)[Переход на страницу ООО «Русь-Агро»](http://www.rusagro74.ru/ \"Переход на страницу ООО «Русь-Агро»\")\n- ![Логотип ЛУИДОР](https://investl.ru/upload/iblock/1dd/2chdrspgybc05mnt0iyg088e5stdtayw.png%201x)[Переход на страницу ЛУИДОР](http://luidor-chel.ru/ \"Переход на страницу ЛУИДОР\")\n\n- ![Логотип ООО «Южуралпогрузчик»](https://investl.ru/upload/iblock/977/ts686ab2ys981t8wo24nq0juq6b4sbgu.png%201x)[Переход на страницу ООО «Южуралпогрузчик»](http://uralforklift.ru/ \"Переход на страницу ООО «Южуралпогрузчик»\")\n- ![Логотип ООО «ТехВосток»](https://investl.ru/upload/iblock/fb1/ls05oh0ns2m8inpesuh4ohe9t0a4htqr.png%201x)[Переход на страницу ООО «ТехВосток»](http://lgmg-mt.ru/ \"Переход на страницу ООО «ТехВосток»\")\n- ![Логотип «Грузовики и Спецтехника»](https://investl.ru/upload/iblock/eed/hqcue1bt914jot3hyj08510rfnxrmc3p.png%201x)[Переход на страницу «Грузовики и Спецтехника»](https://tdgis.ru/ \"Переход на страницу «Грузовики и Спецтехника»\")\n\n- ![Логотип Тюменский завод мобильных зданий](https://investl.ru/upload/iblock/f7d/nyrm1mrahpwpoudch28xpc125hwrjthc.png%201x)[Переход на страницу Тюменский завод мобильных зданий](https://toir.ru/ \"Переход на страницу Тюменский завод мобильных зданий\")\n- ![Логотип ИнтехКранСервис](https://investl.ru/upload/iblock/094/kcok0h93ulbnnfwl3c3j8e1sv515w56l.png%201x)[Переход на страницу ИнтехКранСервис](http://intexkran.ru/ \"Переход на страницу ИнтехКранСервис\")\n\n- - ![Логотип Компания nanxing](https://investl.ru/upload/iblock/629/2jwteli6km3enszslcn40z4gfchklreb.png%201x)[Переход на страницу Компания nanxing](http://nanxing.ru/ \"Переход на страницу Компания nanxing\")\n- ![Логотип Корпорация DMTG](https://investl.ru/upload/iblock/303/cn1y6esmtwpf1tyorkobyq401knpbykw.png%201x)[Переход на страницу Корпорация DMTG](http://dmtg-stanki.ru/ \"Переход на страницу Корпорация DMTG\")\n- ![Логотип КМТ](https://investl.ru/upload/iblock/0e8/w0kg81sbwuv2ur2sz8tmlpxsyjcrwt8a.png%201x)[Переход на страницу КМТ](http://kmt-stanki.ru/ \"Переход на страницу КМТ\")\n\n- ![Логотип ВесТэк](https://investl.ru/upload/iblock/3c7/7ry7wsbsn1jyyid5kq5qxmde2rrmkmkn.png%201x)[Переход на страницу ВесТэк](https://zvtvestek.ru/ \"Переход на страницу ВесТэк\")\n- ![Логотип Мир станков](https://investl.ru/upload/iblock/493/0rxbgzefx84r3vv11sm3m9rjdcvj7bhf.png%201x)[Переход на страницу Мир станков](http://mir-stankov.ru/ \"Переход на страницу Мир станков\")\n- ![Логотип КАМИ](https://investl.ru/upload/iblock/327/i9sw1uuet29lf0zccs5l0d411pmprtca.png%201x)[Переход на страницу КАМИ](http://stanki.ru/ \"Переход на страницу КАМИ\")\n\n- ![Логотип ООО «Афалина Челябинск»](https://investl.ru/upload/iblock/441/68b5kbccr1h79rr3br1rtiz8trfztvwi.png%201x)[Переход на страницу ООО «Афалина Челябинск»](http://afalina.com/ \"Переход на страницу ООО «Афалина Челябинск»\")\n- ![Логотип ООО «Генерационное оборудование»](https://investl.ru/upload/iblock/a1b/0bmusjuoh7mee387ez8eai64nc8ds5et.jpg%201x)[Переход на страницу ООО «Генерационное оборудование»](http://qlaster.ru/ \"Переход на страницу ООО «Генерационное оборудование»\")\n- ![Логотип ЗАЩ «Газовик-ПРО»](https://investl.ru/upload/iblock/6b6/0t13a4d15mr5ddlxghr4170t4h7pyedu.jpg%201x)[Переход на страницу ЗАЩ «Газовик-ПРО»](http://gazovik-pro.ru/ \"Переход на страницу ЗАЩ «Газовик-ПРО»\")\n\n- ![Логотип ООО «Энергия пара»](https://investl.ru/upload/iblock/707/bhv9rwjh02qwsics4lztym4zko01af6u.png%201x)[Переход на страницу ООО «Энергия пара»](http://www.par-ma.ru/ \"Переход на страницу ООО «Энергия пара»\")\n- ![Логотип ООО «Солдрим-СПб»](https://investl.ru/upload/iblock/d4a/2bb8w8nxmmhoxhg107n1cpsvys6vuq5d.png%201x)[Переход на страницу ООО «Солдрим-СПб»](http://soldream-spb.com/ \"Переход на страницу ООО «Солдрим-СПб»\")\n- ![Логотип ООО «МонолитЦентр»](https://investl.ru/upload/iblock/594/00rinyiyyj7eor3pehu3pegbzfz68g3c.jpg%201x)[Переход на страницу ООО «МонолитЦентр»](http://www.monolitural.ru/ \"Переход на страницу ООО «МонолитЦентр»\")\n\n- ![Логотип ООО «Аланта»](https://investl.ru/upload/iblock/f20/6xln1s86w7jvwo23oyrnh5cwsnbcejk6.png%201x)[Переход на страницу ООО «Аланта»](http://www.alanta.ru/ \"Переход на страницу ООО «Аланта»\")\n- ![Логотип ООО «Челябкомпрессор»](https://investl.ru/upload/iblock/236/recvzc8caff9fsusvyxb2nr7hs9yg7o2.jpg%201x)[Переход на страницу ООО «Челябкомпрессор»](http://www.kompressorov.ru/ \"Переход на страницу ООО «Челябкомпрессор»\")\n- ![Логотип ООО «Торгово Промышленный Альянс»](https://investl.ru/upload/iblock/2d1/nuy1583hhvxfmpq8p5t9d5527zu5hok2.jpg%201x)[Переход на страницу ООО «Торгово Промышленный Альянс»](http://www.rosalliance.ru/ \"Переход на страницу ООО «Торгово Промышленный Альянс»\")\n\n- ![Логотип РусАвтоматизация](https://investl.ru/upload/iblock/c9b/gaoj734tnwvp3q32i4slbw71403kbs71.jpg%201x)[Переход на страницу РусАвтоматизация](http://rusautomation.ru/ \"Переход на страницу РусАвтоматизация\")\n- ![Логотип ООО «РОКТЭС»](https://investl.ru/upload/iblock/64b/wo9vbesrk604zr2s1ift0804wc4bds6c.jpg%201x)[Переход на страницу ООО «РОКТЭС»](http://www.roktes.ru/ \"Переход на страницу ООО «РОКТЭС»\")\n- ![Логотип ООО «Уралпромтехника»](https://investl.ru/upload/iblock/5eb/k26woguq169ugnrlmub9l774adhnt2yb.png%201x)[Переход на страницу ООО «Уралпромтехника»](http://www.uralpromteh.ru/ \"Переход на страницу ООО «Уралпромтехника»\")\n\n- ![Логотип Завод «Стройтехника»](https://investl.ru/upload/iblock/453/s2bccalp5i08jkvxf1b3rtzusou0qctj.png%201x)[Переход на страницу Завод «Стройтехника»](http://stroytec.ru/ \"Переход на страницу Завод «Стройтехника»\")\n- ![Логотип ООО «Сталь-Максимум»](https://investl.ru/upload/iblock/a8a/c9s1welh6ywry8g0rpml3y3f8ojunksf.png%201x)[Переход на страницу ООО «Сталь-Максимум»](http://stalmaximum.ru/ \"Переход на страницу ООО «Сталь-Максимум»\")\n- ![Логотип ООО «Лазер Мастер»](https://investl.ru/upload/iblock/893/adrjb5qgd2ua1xysmme60772t1ifpipt.png%201x)[Переход на страницу ООО «Лазер Мастер»](https://lazermaster.ru/ \"Переход на страницу ООО «Лазер Мастер»\")\n\n- ![Логотип ООО  «АМПЛИТУДА»](https://investl.ru/upload/iblock/74d/dcngf5io4hbvmq4p4wobc0uclokvsiqv.png%201x)[Переход на страницу ООО  «АМПЛИТУДА»](https://eapack.ru/ \"Переход на страницу ООО  «АМПЛИТУДА»\")\n- ![Логотип Ledel](https://investl.ru/upload/iblock/b05/5bit1yxw1m3o5b3esz4lnu6anusma0lh.png%201x)[Переход на страницу Ledel](http://ledel.ru/ \"Переход на страницу Ledel\")\n- ![Логотип ООО «НПК Групп»](https://investl.ru/upload/iblock/674/o0ilyoc9aiooah7cxz327wfktbft8vz1.png%201x)[Переход на страницу ООО «НПК Групп»](https://prkom.ru/ \"Переход на страницу ООО «НПК Групп»\")\n\n- ![Логотип АО «Сибшванк»](https://investl.ru/upload/iblock/1e1/7uxeluv4rh1bbnmdifbgsqzk3flkiul6.png%201x)[Переход на страницу АО «Сибшванк»](https://www.schwank.ru/ \"Переход на страницу АО «Сибшванк»\")\n- ![Логотип ООО «Энергостан»](https://investl.ru/upload/iblock/41b/mo0x0pdyud0atw70150aljstnypl2zvy.png%201x)[Переход на страницу ООО «Энергостан»](https://www.energostan.ru/ \"Переход на страницу ООО «Энергостан»\")\n- ![Логотип L-CON](https://investl.ru/upload/iblock/344/4l4pqh1om2x9surfc4hkilmxgsko9pvw.png%201x)[Переход на страницу L-CON](https://l-con.ru/ \"Переход на страницу L-CON\")\n\n- ![Логотип ЭЛКОН](https://investl.ru/upload/iblock/ae9/8gwq02nc5nklk62ttzwl7u4ucn2g57r1.png%201x)[Переход на страницу ЭЛКОН](https://www.elkon.ru/ \"Переход на страницу ЭЛКОН\")\n- ![Логотип Группа компаний БРИЗ](https://investl.ru/upload/iblock/04a/zadp7pe2w7p3kemua9oa2b81ke1xyyc1.png%201x)[Переход на страницу Группа компаний БРИЗ](https://www.brise-group.ru/ \"Переход на страницу Группа компаний БРИЗ\")\n- ![Логотип «Завод Стройтехника» РИФЕЙ](https://investl.ru/upload/iblock/3b1/wjddv6k2n5jmm92vh5navbwr3unmz3ow.png%201x)[Переход на страницу «Завод Стройтехника» РИФЕЙ](https://stroytec.ru/ \"Переход на страницу «Завод Стройтехника» РИФЕЙ\")\n\n- ![Логотип Завод «РИР-Стандарт»](https://investl.ru/upload/iblock/1ee/1waupi2efdst5jiy9xe3foqeu6m57ys8.png%201x)[Переход на страницу Завод «РИР-Стандарт»](https://rir-standart.ru/ \"Переход на страницу Завод «РИР-Стандарт»\")\n\n- 1\n\n\n\nОставьте заявку\n\n\n\nМы свяжемся с Вами в течение часа\n\n- 2\n\n\n\nСогласуем условия сделки\n\n\n\nИ проверим документы\n\n- 3\n\n\n\nЗаключим договор\n\n\n\nИ передадим Вам имущество в пользование\n\n\nВаше имя\n\nЖелаемый срок лизинга, мес\n\n1 год3 лет5 лет\n\nСтоимость имущества, руб\n\n100 000 ₽100 000 000 ₽300 000 000 ₽\n\nТелефон\n\nИНН\n\nАвансовый платёж, %\n\n0%25%49%\n\nЭлектронная почта\n\nСтавка удорожания 15%\n\nСроком на 3 года\n\nСумма финансирования 7 020 000 ₽\n\nЕжемесячный платёж 309 661 ₽\n\nКомментарий\n\nСогласие на обработку  [персональных данных](https://investl.ru/upload/iblock/063/77j17jnlutk5mjsev6mjlg33xrb7y25j.pdf)\n\nРасчёты носят ознакомительный характер и не являются офертой\n\n\\\\* \\- обязательное поле\n\nОставить заявку","size_bytes":15655},"attached_assets/content-1756369513441.md":{"content":"- Автотранспорт\n- Оборудование\n\n- - ![Логотип ООО «РБА-Челябинск»](https://investl.ru/upload/iblock/23b/32f48sisfs82qma8o03wuy3ryxc83ow1.png%201x)[Переход на страницу ООО «РБА-Челябинск»](http://www.rbauto.ru/ \"Переход на страницу ООО «РБА-Челябинск»\")\n- ![Логотип ОАО «ЧКПЗ»](https://investl.ru/upload/iblock/7d0/gjrqudrjzha22z7tuapvejnd9l3kox57.jpg%201x)[Переход на страницу ОАО «ЧКПЗ»](https://www.chkpz.ru/catalog/cat7/ \"Переход на страницу ОАО «ЧКПЗ»\")\n- ![Логотип ЗАО «Интертранссервис»](https://investl.ru/upload/iblock/bda/wcjh3umlcqg90bkxo341yp7lt7qys2dm.png%201x)[Переход на страницу ЗАО «Интертранссервис»](http://intertransservice.ru/ \"Переход на страницу ЗАО «Интертранссервис»\")\n\n- ![Логотип ООО ТСК «УралПромИнвест»](https://investl.ru/upload/iblock/55b/3vfrdbcxfrniafgaa0zfmyuwz8ph1z72.png%201x)[Переход на страницу ООО ТСК «УралПромИнвест»](http://www.ural-beton.ru/ \"Переход на страницу ООО ТСК «УралПромИнвест»\")\n- ![Логотип ООО «Гирд-Автофургон»](https://investl.ru/upload/iblock/4c2/s3n9ouhdpcm4qkjy1ritytzaz8upv0cl.png%201x)[Переход на страницу ООО «Гирд-Автофургон»](http://gird.ru/ \"Переход на страницу ООО «Гирд-Автофургон»\")\n- ![Логотип ООО «Акцент-Авто М»](https://investl.ru/upload/iblock/5fc/pya3593mfqlhzeprawjqvyofmlnolwok.png%201x)[Переход на страницу ООО «Акцент-Авто М»](https://avtovek.lada.ru/ \"Переход на страницу ООО «Акцент-Авто М»\")\n\n- ![Логотип Группа компаний «Грузовая Техника»](https://investl.ru/upload/iblock/18b/25112p55d4965w2q4z34umj6qt6xk1zc.png%201x)[Переход на страницу Группа компаний «Грузовая Техника»](http://gruz-tehnika.ru/ \"Переход на страницу Группа компаний «Грузовая Техника»\")\n- ![Логотип ООО «Спецмаш»](https://investl.ru/upload/iblock/9cc/wssn48kfxwv68o0k43r4wopljbd1wiri.png%201x)[Переход на страницу ООО «Спецмаш»](http://autospecmash.ru/ \"Переход на страницу ООО «Спецмаш»\")\n- ![Логотип ЛБР-Агромаркет](https://investl.ru/upload/iblock/2c6/40ctwrfq8u52v3j3cafhdl802s1vkax6.png%201x)[Переход на страницу ЛБР-Агромаркет](http://www.lbr.ru/ \"Переход на страницу ЛБР-Агромаркет\")\n\n- ![Логотип ООО ПКФ «Политранс»](https://investl.ru/upload/iblock/0b4/z4uaf7mlwnx4xy6bymg7h9xsuwvfef62.png%201x)[Переход на страницу ООО ПКФ «Политранс»](http://www.politrans.ru/ \"Переход на страницу ООО ПКФ «Политранс»\")\n- ![Логотип ООО «Русь-Агро»](https://investl.ru/upload/iblock/ac9/822884uk7fv8mrhnay5g3k4ws8smuqiv.png%201x)[Переход на страницу ООО «Русь-Агро»](http://www.rusagro74.ru/ \"Переход на страницу ООО «Русь-Агро»\")\n- ![Логотип ЛУИДОР](https://investl.ru/upload/iblock/1dd/2chdrspgybc05mnt0iyg088e5stdtayw.png%201x)[Переход на страницу ЛУИДОР](http://luidor-chel.ru/ \"Переход на страницу ЛУИДОР\")\n\n- ![Логотип ООО «Южуралпогрузчик»](https://investl.ru/upload/iblock/977/ts686ab2ys981t8wo24nq0juq6b4sbgu.png%201x)[Переход на страницу ООО «Южуралпогрузчик»](http://uralforklift.ru/ \"Переход на страницу ООО «Южуралпогрузчик»\")\n- ![Логотип ООО «ТехВосток»](https://investl.ru/upload/iblock/fb1/ls05oh0ns2m8inpesuh4ohe9t0a4htqr.png%201x)[Переход на страницу ООО «ТехВосток»](http://lgmg-mt.ru/ \"Переход на страницу ООО «ТехВосток»\")\n- ![Логотип «Грузовики и Спецтехника»](https://investl.ru/upload/iblock/eed/hqcue1bt914jot3hyj08510rfnxrmc3p.png%201x)[Переход на страницу «Грузовики и Спецтехника»](https://tdgis.ru/ \"Переход на страницу «Грузовики и Спецтехника»\")\n\n- ![Логотип Тюменский завод мобильных зданий](https://investl.ru/upload/iblock/f7d/nyrm1mrahpwpoudch28xpc125hwrjthc.png%201x)[Переход на страницу Тюменский завод мобильных зданий](https://toir.ru/ \"Переход на страницу Тюменский завод мобильных зданий\")\n- ![Логотип ИнтехКранСервис](https://investl.ru/upload/iblock/094/kcok0h93ulbnnfwl3c3j8e1sv515w56l.png%201x)[Переход на страницу ИнтехКранСервис](http://intexkran.ru/ \"Переход на страницу ИнтехКранСервис\")\n\n- - ![Логотип Компания nanxing](https://investl.ru/upload/iblock/629/2jwteli6km3enszslcn40z4gfchklreb.png%201x)[Переход на страницу Компания nanxing](http://nanxing.ru/ \"Переход на страницу Компания nanxing\")\n- ![Логотип Корпорация DMTG](https://investl.ru/upload/iblock/303/cn1y6esmtwpf1tyorkobyq401knpbykw.png%201x)[Переход на страницу Корпорация DMTG](http://dmtg-stanki.ru/ \"Переход на страницу Корпорация DMTG\")\n- ![Логотип КМТ](https://investl.ru/upload/iblock/0e8/w0kg81sbwuv2ur2sz8tmlpxsyjcrwt8a.png%201x)[Переход на страницу КМТ](http://kmt-stanki.ru/ \"Переход на страницу КМТ\")\n\n- ![Логотип ВесТэк](https://investl.ru/upload/iblock/3c7/7ry7wsbsn1jyyid5kq5qxmde2rrmkmkn.png%201x)[Переход на страницу ВесТэк](https://zvtvestek.ru/ \"Переход на страницу ВесТэк\")\n- ![Логотип Мир станков](https://investl.ru/upload/iblock/493/0rxbgzefx84r3vv11sm3m9rjdcvj7bhf.png%201x)[Переход на страницу Мир станков](http://mir-stankov.ru/ \"Переход на страницу Мир станков\")\n- ![Логотип КАМИ](https://investl.ru/upload/iblock/327/i9sw1uuet29lf0zccs5l0d411pmprtca.png%201x)[Переход на страницу КАМИ](http://stanki.ru/ \"Переход на страницу КАМИ\")\n\n- ![Логотип ООО «Афалина Челябинск»](https://investl.ru/upload/iblock/441/68b5kbccr1h79rr3br1rtiz8trfztvwi.png%201x)[Переход на страницу ООО «Афалина Челябинск»](http://afalina.com/ \"Переход на страницу ООО «Афалина Челябинск»\")\n- ![Логотип ООО «Генерационное оборудование»](https://investl.ru/upload/iblock/a1b/0bmusjuoh7mee387ez8eai64nc8ds5et.jpg%201x)[Переход на страницу ООО «Генерационное оборудование»](http://qlaster.ru/ \"Переход на страницу ООО «Генерационное оборудование»\")\n- ![Логотип ЗАЩ «Газовик-ПРО»](https://investl.ru/upload/iblock/6b6/0t13a4d15mr5ddlxghr4170t4h7pyedu.jpg%201x)[Переход на страницу ЗАЩ «Газовик-ПРО»](http://gazovik-pro.ru/ \"Переход на страницу ЗАЩ «Газовик-ПРО»\")\n\n- ![Логотип ООО «Энергия пара»](https://investl.ru/upload/iblock/707/bhv9rwjh02qwsics4lztym4zko01af6u.png%201x)[Переход на страницу ООО «Энергия пара»](http://www.par-ma.ru/ \"Переход на страницу ООО «Энергия пара»\")\n- ![Логотип ООО «Солдрим-СПб»](https://investl.ru/upload/iblock/d4a/2bb8w8nxmmhoxhg107n1cpsvys6vuq5d.png%201x)[Переход на страницу ООО «Солдрим-СПб»](http://soldream-spb.com/ \"Переход на страницу ООО «Солдрим-СПб»\")\n- ![Логотип ООО «МонолитЦентр»](https://investl.ru/upload/iblock/594/00rinyiyyj7eor3pehu3pegbzfz68g3c.jpg%201x)[Переход на страницу ООО «МонолитЦентр»](http://www.monolitural.ru/ \"Переход на страницу ООО «МонолитЦентр»\")\n\n- ![Логотип ООО «Аланта»](https://investl.ru/upload/iblock/f20/6xln1s86w7jvwo23oyrnh5cwsnbcejk6.png%201x)[Переход на страницу ООО «Аланта»](http://www.alanta.ru/ \"Переход на страницу ООО «Аланта»\")\n- ![Логотип ООО «Челябкомпрессор»](https://investl.ru/upload/iblock/236/recvzc8caff9fsusvyxb2nr7hs9yg7o2.jpg%201x)[Переход на страницу ООО «Челябкомпрессор»](http://www.kompressorov.ru/ \"Переход на страницу ООО «Челябкомпрессор»\")\n- ![Логотип ООО «Торгово Промышленный Альянс»](https://investl.ru/upload/iblock/2d1/nuy1583hhvxfmpq8p5t9d5527zu5hok2.jpg%201x)[Переход на страницу ООО «Торгово Промышленный Альянс»](http://www.rosalliance.ru/ \"Переход на страницу ООО «Торгово Промышленный Альянс»\")\n\n- ![Логотип РусАвтоматизация](https://investl.ru/upload/iblock/c9b/gaoj734tnwvp3q32i4slbw71403kbs71.jpg%201x)[Переход на страницу РусАвтоматизация](http://rusautomation.ru/ \"Переход на страницу РусАвтоматизация\")\n- ![Логотип ООО «РОКТЭС»](https://investl.ru/upload/iblock/64b/wo9vbesrk604zr2s1ift0804wc4bds6c.jpg%201x)[Переход на страницу ООО «РОКТЭС»](http://www.roktes.ru/ \"Переход на страницу ООО «РОКТЭС»\")\n- ![Логотип ООО «Уралпромтехника»](https://investl.ru/upload/iblock/5eb/k26woguq169ugnrlmub9l774adhnt2yb.png%201x)[Переход на страницу ООО «Уралпромтехника»](http://www.uralpromteh.ru/ \"Переход на страницу ООО «Уралпромтехника»\")\n\n- ![Логотип Завод «Стройтехника»](https://investl.ru/upload/iblock/453/s2bccalp5i08jkvxf1b3rtzusou0qctj.png%201x)[Переход на страницу Завод «Стройтехника»](http://stroytec.ru/ \"Переход на страницу Завод «Стройтехника»\")\n- ![Логотип ООО «Сталь-Максимум»](https://investl.ru/upload/iblock/a8a/c9s1welh6ywry8g0rpml3y3f8ojunksf.png%201x)[Переход на страницу ООО «Сталь-Максимум»](http://stalmaximum.ru/ \"Переход на страницу ООО «Сталь-Максимум»\")\n- ![Логотип ООО «Лазер Мастер»](https://investl.ru/upload/iblock/893/adrjb5qgd2ua1xysmme60772t1ifpipt.png%201x)[Переход на страницу ООО «Лазер Мастер»](https://lazermaster.ru/ \"Переход на страницу ООО «Лазер Мастер»\")\n\n- ![Логотип ООО  «АМПЛИТУДА»](https://investl.ru/upload/iblock/74d/dcngf5io4hbvmq4p4wobc0uclokvsiqv.png%201x)[Переход на страницу ООО  «АМПЛИТУДА»](https://eapack.ru/ \"Переход на страницу ООО  «АМПЛИТУДА»\")\n- ![Логотип Ledel](https://investl.ru/upload/iblock/b05/5bit1yxw1m3o5b3esz4lnu6anusma0lh.png%201x)[Переход на страницу Ledel](http://ledel.ru/ \"Переход на страницу Ledel\")\n- ![Логотип ООО «НПК Групп»](https://investl.ru/upload/iblock/674/o0ilyoc9aiooah7cxz327wfktbft8vz1.png%201x)[Переход на страницу ООО «НПК Групп»](https://prkom.ru/ \"Переход на страницу ООО «НПК Групп»\")\n\n- ![Логотип АО «Сибшванк»](https://investl.ru/upload/iblock/1e1/7uxeluv4rh1bbnmdifbgsqzk3flkiul6.png%201x)[Переход на страницу АО «Сибшванк»](https://www.schwank.ru/ \"Переход на страницу АО «Сибшванк»\")\n- ![Логотип ООО «Энергостан»](https://investl.ru/upload/iblock/41b/mo0x0pdyud0atw70150aljstnypl2zvy.png%201x)[Переход на страницу ООО «Энергостан»](https://www.energostan.ru/ \"Переход на страницу ООО «Энергостан»\")\n- ![Логотип L-CON](https://investl.ru/upload/iblock/344/4l4pqh1om2x9surfc4hkilmxgsko9pvw.png%201x)[Переход на страницу L-CON](https://l-con.ru/ \"Переход на страницу L-CON\")\n\n- ![Логотип ЭЛКОН](https://investl.ru/upload/iblock/ae9/8gwq02nc5nklk62ttzwl7u4ucn2g57r1.png%201x)[Переход на страницу ЭЛКОН](https://www.elkon.ru/ \"Переход на страницу ЭЛКОН\")\n- ![Логотип Группа компаний БРИЗ](https://investl.ru/upload/iblock/04a/zadp7pe2w7p3kemua9oa2b81ke1xyyc1.png%201x)[Переход на страницу Группа компаний БРИЗ](https://www.brise-group.ru/ \"Переход на страницу Группа компаний БРИЗ\")\n- ![Логотип «Завод Стройтехника» РИФЕЙ](https://investl.ru/upload/iblock/3b1/wjddv6k2n5jmm92vh5navbwr3unmz3ow.png%201x)[Переход на страницу «Завод Стройтехника» РИФЕЙ](https://stroytec.ru/ \"Переход на страницу «Завод Стройтехника» РИФЕЙ\")\n\n- ![Логотип Завод «РИР-Стандарт»](https://investl.ru/upload/iblock/1ee/1waupi2efdst5jiy9xe3foqeu6m57ys8.png%201x)[Переход на страницу Завод «РИР-Стандарт»](https://rir-standart.ru/ \"Переход на страницу Завод «РИР-Стандарт»\")\n\n- 1\n\n\n\nОставьте заявку\n\n\n\nМы свяжемся с Вами в течение часа\n\n- 2\n\n\n\nСогласуем условия сделки\n\n\n\nИ проверим документы\n\n- 3\n\n\n\nЗаключим договор\n\n\n\nИ передадим Вам имущество в пользование\n\n\nВаше имя\n\nЖелаемый срок лизинга, мес\n\n1 год3 лет5 лет\n\nСтоимость имущества, руб\n\n100 000 ₽100 000 000 ₽300 000 000 ₽\n\nТелефон\n\nИНН\n\nАвансовый платёж, %\n\n0%25%49%\n\nЭлектронная почта\n\nСтавка удорожания 15%\n\nСроком на 3 года\n\nСумма финансирования 7 020 000 ₽\n\nЕжемесячный платёж 309 661 ₽\n\nКомментарий\n\nСогласие на обработку  [персональных данных](https://investl.ru/upload/iblock/063/77j17jnlutk5mjsev6mjlg33xrb7y25j.pdf)\n\nРасчёты носят ознакомительный характер и не являются офертой\n\n\\\\* \\- обязательное поле\n\nОставить заявку","size_bytes":15655},"attached_assets/content-1756376224813.md":{"content":"## Документы\n\n- Нормативные документы\n- Общие условия лизинга\n- Политика обработки персональных данных\n\n- [Конвенция УНИДРУА от 28.05.1988. (ФЗ от 08.02.1998 №16-ФЗ)](https://investl.ru/upload/iblock/4ef/be0z5j5runmimzkxvh2yo3wbe8yd6yud.pdf)\n\n\n\n\n\n[ФЗ №164 О ФИНАНСОВОЙ АРЕНДЕ. 11.12.1998 г.](https://investl.ru/upload/iblock/d75/ffuol0737ay7jbxy4sq7h62qby702coi.pdf)\n\n\n\n\n\n[ГК РФ Раздел IV. Отдельные виды обязательств.$6 Финансовая аренда (лизинг 22.12.1995 г.)](https://investl.ru/upload/iblock/d97/u7ta89hiy92fzvhg7knc3lfhlm37gzk5.pdf)\n\n- [Общие условия финансовой аренды (лизинга) оборудования (ред. от 14.07.2022)](https://investl.ru/upload/iblock/600/mxi076apq65icew2937nsfdy526aucpp.pdf)\n\n\n\n\n\n[Общие условия финансовой аренды (лизинга) недвижимого имущества (ред. от 14.07.2022)](https://investl.ru/upload/iblock/511/8faj590zk9q63s6kaknl1f7rufxr73ka.pdf)\n\n\n\n\n\n[Общие условия финансовой аренды (лизинга) автотранспорта, спецтехники (ред. от 14.07.2022)](https://investl.ru/upload/iblock/230/swvtnk4xyxejgrw5y8t12ailzw592v5c.pdf)\n\n\n\n\n\n[Общие условия лизинга оборудования 2021 год](https://investl.ru/upload/iblock/ad0/vc0hczyy5up0cxot04kotpjdaf4chhma.pdf)\n\n\n\n\n\n[Общие условия лизинга недвижимого имущества 2021 год](https://investl.ru/upload/iblock/62c/zd52rt93e3fio7tprqbuoekdcc8u5x90.pdf)\n\n\n\n\n\n[Общие условия лизинга автотранспорта спецтехники 2021 год](https://investl.ru/upload/iblock/75f/k27bpctlh34gdticj6nx77s35mna0b2o.pdf)\n\n- [Политика обработки персональных данных](https://investl.ru/upload/iblock/063/77j17jnlutk5mjsev6mjlg33xrb7y25j.pdf)\n\n\n- 1\n\n\n\nОставьте заявку\n\n\n\nМы свяжемся с Вами в течение часа\n\n- 2\n\n\n\nСогласуем условия сделки\n\n\n\nИ проверим документы\n\n- 3\n\n\n\nЗаключим договор\n\n\n\nИ передадим Вам имущество в пользование\n\n\nВаше имя\n\nЖелаемый срок лизинга, мес\n\n1 год3 лет5 лет\n\nСтоимость имущества, руб\n\n100 000 ₽100 000 000 ₽300 000 000 ₽\n\nТелефон\n\nИНН\n\nАвансовый платёж, %\n\n0%25%49%\n\nЭлектронная почта\n\nСтавка удорожания 15%\n\nСроком на 3 года\n\nСумма финансирования 7 020 000 ₽\n\nЕжемесячный платёж 309 661 ₽\n\nКомментарий\n\nСогласие на обработку  [персональных данных](https://investl.ru/upload/iblock/063/77j17jnlutk5mjsev6mjlg33xrb7y25j.pdf)\n\nРасчёты носят ознакомительный характер и не являются офертой\n\n\\\\* \\- обязательное поле\n\nОставить заявку","size_bytes":3227},"attached_assets/content-1756376447739.md":{"content":"## Разделы\n\n- Актуальные объявления\n\n- Комплект оборудования для кафе, ресторанов\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOбoрудованиe нахoдится по aдpеcу: г. Tюмeнь, ул. Щербаковa, 117 склaд.\n\n\nКoмплект оборудовaния, 2022 г. в., б/у.\n\n\n\n\n\n###### [2 360 385 ₽](http://www.avito.ru/tyumen/oborudovanie_dlya_biznesa/komplekt_oborudovaniya_dlya_kafe_restoranov_4181529560)\n\n\n\n###### [![1.jpg](https://investl.ru/upload/medialibrary/52f/xel8l648fo7vymej8sg5ln5zhs1r3rn4.jpg)](https://www.avito.ru/tyumen/oborudovanie_dlya_biznesa/komplekt_oborudovaniya_dlya_kafe_restoranov_4181529560)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nКомплект фасовочно-упаковочной модели Базис\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nКомплекс фаcовoчно-упаковочной мoдeли БАЗИC включает в себя:\n\n\n\n\n\n- Конвейер ленточный отвoдящий;\n- Конвeйeр лeнтoчный, укладчик с устaновкой шибeрнoй;\n- Машинa упаковoчная Базис 50 (AРУК50);\n- Клеевая станция интегрированная;\n- Принтер каплеструйный.\n\n###### [6 380 200 ₽](http://www.avito.ru/chelyabinsk/oborudovanie_dlya_biznesa/komplekt_fasovochnoupakovochnyy_modeli_bazis_4404969092)\n\n[![](https://investl.ru/upload/medialibrary/71c/tx5nnzhoft8wv7uho3prq9vzhfjrwxvp.jpg)](https://www.avito.ru/chelyabinsk/oborudovanie_dlya_biznesa/komplekt_fasovochnoupakovochnyy_modeli_bazis_4404969092)\n\nВаше имя\n\nЖелаемый срок лизинга, мес\n\n1 год3 лет5 лет\n\nСтоимость имущества, руб\n\n100 000 ₽100 000 000 ₽300 000 000 ₽\n\nТелефон\n\nИНН\n\nАвансовый платёж, %\n\n0%25%49%\n\nЭлектронная почта\n\nСтавка удорожания 15%\n\nСроком на 3 года\n\nСумма финансирования 7 020 000 ₽\n\nЕжемесячный платёж 309 661 ₽\n\nКомментарий\n\nСогласие на обработку  [персональных данных](https://investl.ru/upload/iblock/063/77j17jnlutk5mjsev6mjlg33xrb7y25j.pdf)\n\nРасчёты носят ознакомительный характер и не являются офертой\n\n\\\\* \\- обязательное поле\n\nОставить заявку","size_bytes":2411},"client/src/hooks/use-sync-documents.ts":{"content":"import { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface SyncResponse {\n  success: boolean;\n  count: number;\n  message: string;\n}\n\nexport function useSyncDocuments() {\n  const queryClient = useQueryClient();\n  const { toast } = useToast();\n\n  return useMutation({\n    mutationFn: async (): Promise<SyncResponse> => {\n      return await apiRequest(\"POST\", \"/api/sync-documents\");\n    },\n    onSuccess: (data) => {\n      // Invalidate all document-related queries to refetch data\n      queryClient.invalidateQueries({ queryKey: [\"/api/contracts\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/acts\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/invoices\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/other-documents\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/payment-schedules\"] });\n      \n      toast({\n        title: \"Синхронизация завершена\",\n        description: `Загружено ${data.count || 0} документов с FTP сервера`,\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Ошибка синхронизации\",\n        description: error.message || \"Не удалось синхронизировать документы с FTP сервера\",\n        variant: \"destructive\",\n      });\n    },\n  });\n}","size_bytes":1459},"client/src/hooks/use-auto-sync.ts":{"content":"import { useEffect, useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { useAuth } from \"@/hooks/use-auth\";\nimport { useSyncDocuments } from \"@/hooks/use-sync-documents\";\nimport { apiRequest, queryClient } from \"@/lib/queryClient\";\n\ninterface DocumentCount {\n  contracts: number;\n  acts: number;\n  invoices: number;\n}\n\nexport function useAutoSync() {\n  const { isAuthenticated, user } = useAuth();\n  const syncDocuments = useSyncDocuments();\n  const [hasAttemptedSync, setHasAttemptedSync] = useState(false);\n  \n  // Mutation for loading customer profile data\n  const loadCustomerData = useMutation({\n    mutationFn: () => apiRequest(\"POST\", \"/api/load-customer-data\").then(res => res.json()),\n    onSuccess: () => {\n      // Invalidate and refetch company and contact data\n      queryClient.invalidateQueries({ queryKey: [\"/api/company\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/contact\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/payment-schedules\"] });\n    },\n    onError: (error) => {\n      console.error(\"Error loading customer data:\", error);\n    }\n  });\n\n  // Check if user has any documents\n  const { data: contractsData } = useQuery({\n    queryKey: [\"/api/contracts\"],\n    enabled: isAuthenticated,\n    queryFn: () => apiRequest(\"GET\", \"/api/contracts\").then(res => res.json()),\n  });\n\n  const { data: actsData } = useQuery({\n    queryKey: [\"/api/acts\"],\n    enabled: isAuthenticated,\n    queryFn: () => apiRequest(\"GET\", \"/api/acts\").then(res => res.json()),\n  });\n\n  const { data: invoicesData } = useQuery({\n    queryKey: [\"/api/invoices\"],\n    enabled: isAuthenticated,\n    queryFn: () => apiRequest(\"GET\", \"/api/invoices\").then(res => res.json()),\n  });\n\n  useEffect(() => {\n    // Only run auto-sync once per session and only for authenticated users\n    if (!isAuthenticated || !user || hasAttemptedSync) {\n      return;\n    }\n\n    // Check if all document queries have loaded\n    const documentsLoaded = \n      contractsData !== undefined && \n      actsData !== undefined && \n      invoicesData !== undefined;\n\n    if (!documentsLoaded) {\n      return;\n    }\n\n    // Check if user has no documents\n    const hasNoDocuments = \n      (contractsData?.length || 0) === 0 &&\n      (actsData?.length || 0) === 0 &&\n      (invoicesData?.length || 0) === 0;\n\n    if (hasNoDocuments && (user.inn || user.email)) {\n      // User has no documents and has INN or email - trigger sync and customer data load\n      console.log(\"No documents found for user, starting automatic sync and loading customer data...\");\n      loadCustomerData.mutate();\n      syncDocuments.mutate();\n      setHasAttemptedSync(true);\n    } else if (user.inn || user.email) {\n      // User has documents but may need customer data refresh\n      console.log(\"Loading customer data...\");\n      loadCustomerData.mutate();\n      setHasAttemptedSync(true);\n    } else {\n      // User has no INN or email - mark as attempted to avoid future checks\n      setHasAttemptedSync(true);\n    }\n  }, [\n    isAuthenticated,\n    user,\n    contractsData,\n    actsData,\n    invoicesData,\n    hasAttemptedSync,\n    syncDocuments,\n    loadCustomerData\n  ]);\n\n  return {\n    isAutoSyncing: syncDocuments.isPending && !hasAttemptedSync,\n    hasAttemptedSync,\n  };\n}","size_bytes":3298}},"version":1}